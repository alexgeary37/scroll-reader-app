{"version":3,"sources":["components/researcher/textFiles/DeleteTextModal.jsx","utilities.js","components/researcher/textFiles/TextAnswersConfigurationView.jsx","components/researcher/textFiles/AddQuestionToTextFile.jsx","components/researcher/textFiles/TextFileQuestionsView.jsx","components/researcher/textFiles/AddStyleToTextFile.jsx","components/researcher/textFiles/TextFileStylesView.jsx","components/researcher/textFiles/TextFileTextView.jsx","components/researcher/TextFile.jsx","components/researcher/templates/SessionTemplateView.jsx","components/researcher/templates/DeleteTemplateModal.jsx","components/researcher/SessionTemplate.jsx","components/researcher/templateCreation/QuestionsView.jsx","components/researcher/templateCreation/StylesView.jsx","components/researcher/templateCreation/ScrollTextListItem.jsx","components/researcher/templateCreation/SpeedTextListItem.jsx","components/researcher/templateCreation/CreateTemplate.jsx","components/researcher/FileUpload.jsx","components/researcher/DownloadDataForm.jsx","components/researcher/ResearcherView.jsx","contexts/SessionContext.jsx","components/PageError.jsx","components/user/Home.jsx","components/user/speed/SpeedText.jsx","components/user/speed/SpeedTestInstructions.jsx","components/user/PauseWindow.jsx","components/user/speed/SpeedTest.jsx","components/user/DisplaySessionCompleted.jsx","components/user/speed/SpeedTestWrapper.jsx","components/user/EndPage.jsx","components/user/scroll/scrollPosition.jsx","components/user/scroll/ScrollText.jsx","components/user/scroll/ScrollTestInstructions.jsx","components/user/scroll/ComprehensionQuestion.jsx","components/user/scroll/ClickQuestion.jsx","components/user/scroll/ConfirmSkipQuestionWindow.jsx","components/user/ConfirmDoneWindow.jsx","components/user/scroll/AnswerResponseWindow.jsx","components/user/scroll/ScrollTest.jsx","components/user/scroll/ScrollTestWrapper.jsx","App.jsx","index.js"],"names":["DeleteTextModal","isOpen","answerYes","answerNo","Modal","size","open","style","textAlign","padding","Header","as","Button","primary","content","onClick","wordSeparators","isLastText","testType","context","fileNumber","template","speedTest","texts","length","scrollTexts","scrollToTop","window","scrollTo","top","behavior","recordViewportResize","e","sessionContext","sessionID","time","Date","axios","put","id","width","innerWidth","height","innerHeight","catch","error","console","addScrollPosEntryToSessionContext","yPos","scrollPosEntry","textNumber","setScrollPosEntries","scrollPosEntries","TextAnswersConfigurationView","mouseDownIndex","fileID","answerRegion","selectAnswer","useState","words","setWords","useEffect","fetchText","get","params","_id","then","response","data","text","split","wordColor","index","minIndex","Math","min","startIndex","endIndex","maxIndex","max","Segment","overflow","maxHeight","map","word","onMouseDown","onMouseUp","handleMouseUp","backgroundColor","uuid_v4","AddQuestionToTextFile","format","addQuestion","close","question","setQuestion","setAnswerRegion","displayQuestionError","setDisplayQuestionError","displayAnswerRegionConfiguration","setDisplayAnswerRegionConfiguration","displayAnswerRegionError","setDisplayAnswerRegionError","handleQuestionChange","event","target","value","handleSelectAnswerRegion","mouseUpIndex","handleAddQuestion","handleCancel","displayErrorMessage","color","displayInlineComponents","positive","displayAnswerRegionSelection","displayConfigurationView","Input","marginBottom","autoFocus","type","fluid","placeholder","onChange","position","right","bottom","TextFileQuestionsView","questions","updateFileQuestions","removeQuestion","openAddQuestion","setOpenAddQuestion","questionFormat","setQuestionFormat","usedQuestionIDs","setUsedQuestionIDs","fetchTemplateQuestions","Form","className","Field","disabled","checked","List","ordered","divided","relaxed","Item","Description","floated","includes","Divider","trim","newQuestion","at","AddStyleToTextFile","addStyle","family","setFamily","setSize","lineHeight","setLineHeight","displayFamilyError","setDisplayFamilyError","displaySizeError","setDisplaySizeError","displayLineHeightError","setDisplayLineHeightError","handleFamilyChange","handleSizeChange","handleLineHeightChange","handleAddStyle","emptyFields","checkFormInputs","fontFamily","fontSize","TextFileStylesView","styles","updateFileStyles","removeStyle","openAddStyle","setOpenAddStyle","usedStyleIDs","setUsedStyleIDs","fetchTemplateStyles","newStyle","TextFileTextView","setText","TextFile","file","usedInTemplate","usedAsScrollText","deleteFile","openViewQuestions","setOpenViewQuestions","openViewStyles","setOpenViewStyles","openTextFileTextView","setOpenTextFileTextView","openDeleteTextModal","setOpenDeleteTextModal","Icon","name","Content","margin","uploadedAt","marginLeft","key","SessionTemplateView","textFiles","styleContent","find","tf","s","styleID","basic","createdAt","instructions","indexOf","marginTop","main","JSON","parse","hasFamiliarityQuestion","hasInterestQuestion","questionIDs","questionID","q","DeleteTemplateModal","SessionTemplate","deleteTemplate","openTemplateView","setOpenTemplateView","openDeleteTemplateModal","setOpenDeleteTemplateModal","horizontal","url","navigator","clipboard","writeText","QuestionsView","availableQuestions","updateQuestions","dropdownQuestions","setDropdownQuestions","selectedQuestions","setSelectedQuestions","formatDropdownQuestions","Dropdown","search","selection","multiple","options","StylesView","availableStyles","updateStyle","dropdownStyles","setDropdownStyles","setStyleID","formatDropdownStyles","ScrollTextListItem","addQuestions","selectStyle","setInstructions","instructionsError","toggleHasFamiliarityQuestion","toggleHasInterestQuestion","viewQuestions","setViewQuestions","viewStyles","setViewStyles","instructionsAreEmpty","setInstructionsAreEmpty","fileName","handleInstructionsChange","defaultChecked","SpeedTextListItem","CreateTemplate","templateName","setTemplateName","speedTexts","setSpeedTexts","speedTestInstructions","setSpeedTestInstructions","setScrollTexts","displayMissingInputError","setDisplayMissingInputError","dropdownTextFiles","setDropdownTextFiles","formatDropdownTextFiles","handleAddQuestions","tempScrollTexts","handleSelectSpeedTextStyle","tempSpeedTexts","handleSelectScrollTextStyle","setScrollTextInstructions","setAskQuestion","ask","handleClose","templateCreated","responseData","forEach","push","fileObj","paddingTop","marginRight","i","some","elem","filter","files","post","FileUpload","uploadSubmitted","defaultStyle","fileRef","useRef","icon","current","click","ref","accept","hidden","reader","FileReader","onload","textFile","result","doc","readAsText","DownloadDataForm","templates","sessionOptions","setSessionOptions","setSessionID","fetchSessions","readingSessions","session","userName","t","templateID","startTime","getScrollPositionData","a","getReadingSessionData","exportScrollData","entriesByText","scrollPosIndex","entries","slice","formatScrollPosEntriesForCsv","createCsv","exportReadingSessionData","readingSessionData","templateData","readingSession","endTime","exportSpeedTextData","stringify","speedText","sessionText","pauses","exportScrollTextData","scrollText","userFamiliarity","familiarity","userInterest","interest","scrollTextQuestionIDs","questionAnswers","sessionTextQuestionAnswerEntry","correctAnswer","userAnswer","answer","skip","yPosition","entry","filename","fieldSeparator","quoteStrings","decimalSeparator","showLabels","useBom","useKeysAsHeaders","ExportToCsv","generateCsv","handleExport","scrollPositionData","dimensions","viewportDimensions","d","float","ResearcherView","isFetching","setTextFiles","setTemplates","openTemplateCreator","setOpenTemplateCreator","openDownloadDataModal","setOpenDownloadDataModal","fetchTextFiles","fetchSessionTemplates","templatesResponse","temp","option","handleCreateTemplate","closeTemplateCreator","fileUsedInTemplate","usedAsSpeed","undefined","usedAsScroll","fileUsedAsScrollText","handleFileUpload","newFile","Container","Grid","Row","Column","curUrl","location","href","substr","handleUpdateFileQuestions","handleRemoveFileQuestion","handleUpdateFileStyles","handleRemoveFileStyle","f","handleDeleteFile","displayTextFiles","sessionTemplates","handleDeleteTemplate","displaySessionTemplates","SessionContext","createContext","SessionProvider","children","localStorage","getItem","setTemplate","isPaused","setIsPaused","hasStartedReading","setHasStartedReading","setFileNumber","setQuestionAnswers","initialiseVariables","setItem","Provider","PageError","Home","setUserName","templateError","setTemplateError","displayUserNameError","setDisplayUserNameError","useContext","speedTestRef","createRef","scrollTestRef","endPageRef","fetchSessionTemplate","toString","lastIndexOf","createSession","sessionCreated","date","viewportWidth","viewportHeight","newReadingSession","handleStartTask1","handleResumeSession","currentSession","hasOwnProperty","handleUserNameChange","userNameError","justifyContent","to","SpeedText","textStyleID","textStyle","setTextStyle","SpeedTestInstructions","PauseWindow","resume","SpeedTest","startTask2Ref","currentText","setCurrentText","textIsComplete","setTextIsComplete","initialiseTextIsComplete","onresize","debounce","startNextText","finishCurrentText","sessionUpdated","handleFinishText","updateSpeedTextPauses","currentTime","action","left","Menu","vertical","negative","displaySpeedText","DisplaySessionCompleted","SpeedTestWrapper","sessionIsComplete","setSessionIsComplete","EndPage","variablesCleared","setVariablesCleared","clearSessionVariables","removeItem","isBrowser","getScrollPosition","x","scrollX","y","scrollY","useScrollPosition","effect","wait","throttleTimeout","callBack","currPos","useLayoutEffect","handleScroll","setTimeout","addEventListener","removeEventListener","ScrollText","selectAnswerEnabled","intervalID","setInterval","entriesToInsert","clearInterval","parseInt","handleWordClick","ScrollTestInstructions","setFamiliarity","setInterest","clearData","displayFamiliarityQuestion","displayInterestQuestion","textObj","ComprehensionQuestion","questionNumber","disable","submitAnswer","setAnswer","questionObj","Card","TextArea","ClickQuestion","answerIsEnabled","enableAnswer","Transition","visible","animation","duration","Message","info","ConfirmSkipQuestionWindow","cancel","ConfirmDoneWindow","AnswerResponseWindow","isCorrect","tryAgain","continueReading","message","ScrollTest","scrollQuestionNumber","setScrollQuestionNumber","setSelectAnswerEnabled","display","answerResponseWindow","setAnswerResponseWindow","displayConfirmSkipMessage","setDisplayConfirmSkipMessage","displayConfirmDoneMessage","setDisplayConfirmDoneMessage","finishReadingSession","updateScrollTextPauses","handleAnswerQuestion","isInlineQuestion","displayScrollText","displayQuestions","ScrollTestWrapper","App","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAmBeA,EAjBS,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAC5C,OACE,eAACC,EAAA,EAAD,CACEC,KAAK,OACLC,KAAML,EACNM,MAAO,CAAEC,UAAW,SAAUC,QAAS,IAHzC,UAKE,eAACL,EAAA,EAAMM,OAAP,CAAcC,GAAG,KAAjB,uDAEE,0BAEF,cAACC,EAAA,EAAD,CAAQC,SAAO,EAACC,QAAQ,MAAMC,QAASb,IACvC,cAACU,EAAA,EAAD,CAAQE,QAAQ,KAAKC,QAASZ,Q,sECXvBa,EAAiB,aAMjBC,EAAa,SAACC,EAAUC,GACnC,MAAiB,UAAbD,EACKC,EAAQC,aAAeD,EAAQE,SAASC,UAAUC,MAAMC,OAAS,EAEzD,WAAbN,EACKC,EAAQC,aAAeD,EAAQE,SAASI,YAAYD,OAAS,OADtE,GAOWE,EAAc,WACzBC,OAAOC,SAAS,CACdC,IAAK,EACLC,SAAU,YAKDC,EAAuB,SAACC,EAAGC,GACtC,IAAMC,EAAYD,EAAeC,UAC3BC,EAAO,IAAIC,KAEjBC,IACGC,IAAI,0CAA2C,CAC9CC,GAAIL,EACJM,MAAOb,OAAOc,WACdC,OAAQf,OAAOgB,YACfR,KAAMA,IAEPS,OAAM,SAACC,GACNC,QAAQD,MAAM,oDAAqDA,OAI5DE,EAAoC,SAACd,EAAgBe,GAChE,IAEMC,EAAiB,CACrBD,KAAMA,EACNb,KAJW,IAAIC,KAKfF,UAAWD,EAAeC,UAC1BgB,WAAYjB,EAAeb,YAG7Ba,EAAekB,oBAAf,sBACKlB,EAAemB,kBADpB,CAEEH,M,SCaWI,EA/DsB,SAAC,GAI/B,IAIDC,EAPJC,EAGI,EAHJA,OACAC,EAEI,EAFJA,aACAC,EACI,EADJA,aACI,EACsBC,mBAAS,IAD/B,mBACGC,EADH,KACUC,EADV,KAMJC,qBAAU,WACRC,MACC,CAACP,IAEJ,IAAMO,EAAY,WAChBzB,IACG0B,IAAI,oCAAqC,CACxCC,OAAQ,CAAEC,IAAKV,KAEhBW,MAAK,SAACC,GACLP,EAASO,EAASC,KAAKC,KAAKC,MAAMtD,OAEnC4B,OAAM,SAACC,GACNC,QAAQD,MAAM,qCAAsCA,OAapD0B,EAAY,SAACC,GACjB,IAAMC,EAAWC,KAAKC,IAAInB,EAAaoB,WAAYpB,EAAaqB,UAC1DC,EAAWJ,KAAKK,IAAIvB,EAAaoB,WAAYpB,EAAaqB,UAChE,OAAIJ,GAAYD,GAASA,GAASM,GAAYA,EAAW,EAChD,SAEF,SAGT,OACE,cAACE,EAAA,EAAD,CAASzE,MAAO,CAAE0E,SAAU,OAAQC,UAAW,QAA/C,SACE,4BACGvB,EAAMwB,KAAI,SAACC,EAAMZ,GAAP,OACT,sBAEEa,YAAa,kBAAO/B,EAAiBkB,GACrCc,UAAW,kBAzBC,SAACd,GACjBlB,IAAmBkB,GACrBf,EACEiB,KAAKC,IAAIrB,EAAgBkB,GACzBE,KAAKK,IAAIzB,EAAgBkB,IAqBJe,CAAcf,IAC/BjE,MAAO,CAAEiF,gBAAiBjB,EAAUC,IAJtC,SAMGY,EAAO,KALHK,uBCyFFC,EA7Ie,SAAC,GAMxB,IALLzF,EAKI,EALJA,OACAsD,EAII,EAJJA,OACAoC,EAGI,EAHJA,OACAC,EAEI,EAFJA,YACAC,EACI,EADJA,MACI,EAC4BnC,mBAAS,IADrC,mBACGoC,EADH,KACaC,EADb,OAEoCrC,mBAAS,CAC/CkB,WAAY,EACZC,SAAU,IAJR,mBAEGrB,EAFH,KAEiBwC,EAFjB,OAMoDtC,oBAAS,GAN7D,mBAMGuC,EANH,KAMyBC,EANzB,OAUAxC,oBAAS,GAVT,mBAQFyC,EARE,KASFC,EATE,OAYF1C,oBAAS,GAZP,mBAWG2C,EAXH,KAW6BC,EAX7B,KAcEC,EAAuB,SAACC,GAC5BN,GAAwB,GACxBH,EAAYS,EAAMC,OAAOC,QAGrBC,EAA2B,SAACrD,EAAgBsD,GAChDN,GAA4B,GAC5BN,EAAgB,CAAEpB,WAAYtB,EAAgBuB,SAAU+B,KAGpDC,EAAoB,WACP,KAAbf,EAMS,WAAXH,GAC4B,IAA5BnC,EAAaoB,YACa,IAA1BpB,EAAaqB,UAMfkB,EAAY,IACZK,GAAoC,GACpCR,EAAYE,EAAUtC,GACtBwC,EAAgB,CAAEpB,WAAY,EAAGC,SAAU,IAC3CgB,KARES,GAA4B,GAT5BJ,GAAwB,IAoBtBY,EAAe,WACnBf,EAAY,IACZC,EAAgB,CAAEpB,WAAY,EAAGC,SAAU,IAC3CuB,GAAoC,GACpCE,GAA4B,GAC5BT,KAGIkB,EAAsB,WAC1B,GAAIV,EACF,OACE,uBAAO9F,MAAO,CAAEE,QAAS,GAAIuG,MAAO,OAApC,gEAyCAC,EAA0B,WAC9B,GAAe,WAAXtB,EACF,OACE,gCACE,cAAC/E,EAAA,EAAD,CACEsG,UAAQ,EACRpG,QAAQ,uBACRC,QAAS,kBACPqF,GACGD,MAINgB,QAMHA,EAA+B,WACnC,GAAIhB,EACF,OACE,sBACE5F,MAAO,CAAEE,QAAS,GAAIuG,MAAO,QAD/B,yCAE2BxD,EAAaoB,WAFxC,cAEwDpB,EAAaqB,SAFrE,QAON,OACE,eAACzE,EAAA,EAAD,CAAOE,KAAML,EAAQI,KAAK,QAAQE,MAAO,CAAEE,QAAS,IAApD,UAhE+B,WAC/B,GAAI0F,EACF,OACE,cAAC,EAAD,CACE5C,OAAQA,EACRC,aAAcA,EACdC,aAAckD,IA2DjBS,GAnDD,gCACGL,IACD,cAACM,EAAA,EAAD,CACE9G,MAAO,CAAE+G,aAAc,IACvBzE,MAAOoD,EACPsB,WAAS,EACTC,KAAK,OACLC,OAAK,EACLC,YAAY,wCACZC,SAAUpB,IAEXU,IACD,sBAAK1G,MAAO,CAAEqH,SAAU,WAAYC,MAAO,GAAIC,OAAQ,IAAvD,UACE,cAAClH,EAAA,EAAD,CAAQE,QAAQ,SAASC,QAAS+F,IAClC,cAAClG,EAAA,EAAD,CAAQC,SAAO,EAACC,QAAQ,eAAeC,QAAS8F,cCmC3CkB,EA5He,SAAC,GAQxB,IAPL9H,EAOI,EAPJA,OACAsD,EAMI,EANJA,OACAyE,EAKI,EALJA,UACArC,EAII,EAJJA,OACAsC,EAGI,EAHJA,oBACAC,EAEI,EAFJA,eACArC,EACI,EADJA,MACI,EAC0CnC,oBAAS,GADnD,mBACGyE,EADH,KACoBC,EADpB,OAEwC1E,mBAASiC,GAFjD,mBAEG0C,EAFH,KAEmBC,EAFnB,OAG0C5E,mBAAS,IAHnD,mBAGG6E,EAHH,KAGoBC,EAHpB,KAKJ3E,qBAAU,WACRyE,EAAkB3C,KACjB,CAACA,IAEJ9B,qBAAU,WACJ5D,GACFwI,MAED,CAACxI,IAEJ,IAAMwI,EAAyB,WAC7BpG,IACG0B,IAAI,0CACJG,MAAK,SAACC,GACLqE,EAAmBrE,EAASC,SAE7BxB,OAAM,SAACC,GACNC,QAAQD,MAAM,iCAAkCA,OAyBtD,OACE,eAACzC,EAAA,EAAD,CAAOG,MAAO,CAAEE,QAAS,IAAMH,KAAML,EAArC,UACE,cAACS,EAAA,EAAD,CAAQC,GAAG,KAAKG,QAAQ,cACxB,8BACE,cAAC4H,EAAA,EAAD,UACE,sBAAKC,UAAU,iBAAf,UACE,cAACD,EAAA,EAAKE,MAAN,UACE,sBAAKD,UAAU,oBAAf,UACE,uBACEnB,KAAK,QACLqB,SAAqB,KAAXlD,EACVmD,QAA4B,kBAAnBT,EACTV,SAAU,kBAAMW,EAAkB,oBAEpC,uDAGJ,cAACI,EAAA,EAAKE,MAAN,UACE,sBAAKD,UAAU,oBAAf,UACE,uBACEnB,KAAK,QACLqB,SAAqB,KAAXlD,EACVmD,QAA4B,WAAnBT,EACTV,SAAU,kBAAMW,EAAkB,aAEpC,uDAMV,cAAC1H,EAAA,EAAD,CACEsG,UAAQ,EACR2B,SAA6B,KAAnBR,EACVvH,QAAQ,eACRC,QAAS,kBAAMqH,GAAmB,MAEpC,cAACW,EAAA,EAAD,CAAMC,SAAO,EAACC,SAAO,EAACC,SAAO,EAA7B,SACGlB,EAAU7C,KAAI,SAACW,GAAD,OACb,cAACqD,EAAA,EAAD,UACE,sBAAKR,UAAU,UAAf,UACE,cAACQ,EAAA,EAAKC,YAAN,CAAkBtI,QAASgF,EAASA,WACpC,cAACqD,EAAA,EAAKC,YAAN,CACEtI,QAAO,qCAAgCgF,EAAStC,aAAaoB,WAAtD,cAAsEkB,EAAStC,aAAaqB,SAA5F,OAET,cAACjE,EAAA,EAAD,CACEyI,QAAQ,QACRR,SAAUN,EAAgBe,SAASxD,EAAS7B,KAC5CnD,QAAQ,SACRC,QAAS,kBAAMmH,EAAepC,UAVzBA,EAAS7B,UAgBxB,cAACsF,EAAA,EAAD,IACA,cAAC3I,EAAA,EAAD,CAAQyI,QAAQ,QAAQvI,QAAQ,QAAQC,QAAS8E,IAEjD,cAAC,EAAD,CACE5F,OAAQkI,EACR5E,OAAQA,EACRoC,OAAQ0C,EACRzC,YAnFc,SAACE,EAAUtC,GAC7BnB,IACGC,IAAI,4CAA6C,CAChDC,GAAIgB,EACJuC,SAAUA,EAAS0D,OACnBhG,aAAcA,EACd6E,eAAgBA,IAEjBnE,MAAK,SAACC,GAEL,IAAMsF,EAActF,EAASC,KAAK4D,UAAU0B,IAAI,GAChDzB,EAAoBwB,EAAapB,MAElCzF,OAAM,SAACC,GACNC,QAAQD,MACN,yDACAA,OAoEFgD,MAAO,kBAAMuC,GAAmB,UCdzBuB,EAlHY,SAAC,GAAiC,IAA/B1J,EAA8B,EAA9BA,OAAQ2J,EAAsB,EAAtBA,SAAU/D,EAAY,EAAZA,MAAY,EAC9BnC,mBAAS,IADqB,mBACnDmG,EADmD,KAC3CC,EAD2C,OAElCpG,oBAAU,GAFwB,mBAEnDrD,EAFmD,KAE7C0J,EAF6C,OAGtBrG,oBAAU,GAHY,mBAGnDsG,EAHmD,KAGvCC,EAHuC,OAINvG,oBAAS,GAJH,mBAInDwG,EAJmD,KAI/BC,EAJ+B,OAKVzG,oBAAS,GALC,mBAKnD0G,EALmD,KAKjCC,EALiC,OAME3G,oBAAS,GANX,mBAMnD4G,EANmD,KAM3BC,EAN2B,KAQpDC,EAAqB,SAAChE,GAC1B2D,GAAsB,GACtBL,EAAUtD,EAAMC,OAAOC,QAGnB+D,EAAmB,SAACjE,GACxB6D,GAAoB,GACpBN,EAAQvD,EAAMC,OAAOC,QAGjBgE,EAAyB,SAAClE,GAC9B+D,GAA0B,GAC1BN,EAAczD,EAAMC,OAAOC,QAsBvBiE,EAAiB,WAGrB,IAtBsB,WACtB,IAAIC,GAAc,EAelB,MAbe,KAAXf,IACFM,GAAsB,GACtBS,GAAc,IAEF,IAAVvK,IACFgK,GAAoB,GACpBO,GAAc,IAEI,IAAhBZ,IACFO,GAA0B,GAC1BK,GAAc,GAGTA,EAIaC,GAEF,CAChB,IAAMtK,EAAQ,CACZuK,WAAYjB,EAAOL,OACnBuB,SAAU1K,EACV2J,WAAYA,GAGdJ,EAASrJ,GAETuJ,EAAU,IACVC,GAAS,GACTE,GAAe,GAEfpE,MAIEiB,EAAe,WACnBgD,EAAU,IACVC,GAAS,GACTE,GAAe,GACfE,GAAsB,GACtBE,GAAoB,GACpBE,GAA0B,GAC1B1E,KAsCF,OACE,cAACzF,EAAA,EAAD,CAAOE,KAAML,EAAQI,KAAK,OAAOE,MAAO,CAAEE,QAAS,IAAnD,SAlCE,gCACE,cAAC4G,EAAA,EAAD,CACE9G,MAAO,CAAE+G,aAAc,IACvBzE,MAAOqH,EACP3C,WAAS,EACTC,KAAK,OACLC,OAAK,EACLC,YAAY,6BACZC,SAAU6C,IAEZ,cAACnD,EAAA,EAAD,CACE9G,MAAO,CAAE+G,aAAc,IACvBzE,MAAOuH,EACP5C,KAAK,SACLE,YAAY,gBACZC,SAAU8C,IAEZ,cAACpD,EAAA,EAAD,CACE9G,MAAO,CAAE+G,aAAc,IACvBzE,MAAOyH,EACP9C,KAAK,SACLE,YAAY,uBACZC,SAAU+C,IAGZ,sBAAKnK,MAAO,CAAEqH,SAAU,WAAYC,MAAO,GAAIC,OAAQ,IAAvD,UACE,cAAClH,EAAA,EAAD,CAAQE,QAAQ,SAASC,QAAS+F,IAClC,cAAClG,EAAA,EAAD,CAAQC,SAAO,EAACC,QAAQ,YAAYC,QAAS4J,aCfxCK,EApFY,SAAC,GAOrB,IANL/K,EAMI,EANJA,OACAsD,EAKI,EALJA,OACA0H,EAII,EAJJA,OACAC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,YACAtF,EACI,EADJA,MACI,EACoCnC,oBAAS,GAD7C,mBACG0H,EADH,KACiBC,EADjB,OAEoC3H,mBAAS,IAF7C,mBAEG4H,EAFH,KAEiBC,EAFjB,KAIJ1H,qBAAU,WACJ5D,GACFuL,MAED,CAACvL,IAEJ,IAAMuL,EAAsB,WAC1BnJ,IACG0B,IAAI,uCACJG,MAAK,SAACC,GACLoH,EAAgBpH,EAASC,SAE1BxB,OAAM,SAACC,GACNC,QAAQD,MAAM,8BAA+BA,OAoBnD,OACE,eAACzC,EAAA,EAAD,CAAOG,MAAO,CAAEE,QAAS,IAAMH,KAAML,EAArC,UACE,cAACS,EAAA,EAAD,CAAQC,GAAG,KAAKG,QAAQ,WAExB,cAACF,EAAA,EAAD,CACEsG,UAAQ,EACRpG,QAAQ,YACRC,QAAS,kBAAMsK,GAAgB,MAEjC,cAACtC,EAAA,EAAD,CAAMC,SAAO,EAACC,SAAO,EAACC,SAAO,EAA7B,SACG+B,EAAO9F,KAAI,SAAC5E,GAAD,OACV,cAAC4I,EAAA,EAAD,UACE,sBAAKR,UAAU,UAAf,UACE,cAACQ,EAAA,EAAKC,YAAN,CAAkBtI,QAAO,uBAAkBP,EAAMuK,cACjD,cAAC3B,EAAA,EAAKC,YAAN,CAAkBtI,QAAO,qBAAgBP,EAAMwK,YAC/C,cAAC5B,EAAA,EAAKC,YAAN,CAAkBtI,QAAO,uBAAkBP,EAAMyJ,cAEjD,cAACpJ,EAAA,EAAD,CACEyI,QAAQ,QACRR,SAAUyC,EAAahC,SAAS/I,EAAM0D,MAAQgH,EAAOzJ,OAAS,EAC9DV,QAAQ,SACRC,QAAS,kBAAMoK,EAAY5K,UAVtBA,EAAM0D,UAgBrB,cAACsF,EAAA,EAAD,IACA,cAAC3I,EAAA,EAAD,CAAQyI,QAAQ,QAAQvI,QAAQ,QAAQC,QAAS8E,IAEjD,cAAC,EAAD,CACE5F,OAAQmL,EACR7H,OAAQA,EACRqG,SAjDW,SAACrJ,GAChB8B,IACGC,IAAI,yCAA0C,CAC7CC,GAAIgB,EACJhD,MAAOA,IAER2D,MAAK,SAACC,GAEL,IAAMsH,EAAWtH,EAASC,KAAK6G,OAAOvB,IAAI,GAC1CwB,EAAiBO,MAElB7I,OAAM,SAACC,GACNC,QAAQD,MAAM,8BAA+BA,OAsC7CgD,MAAO,kBAAMwF,GAAgB,UC9CtBK,EAjCU,SAAC,GAA+B,IAA7BzL,EAA4B,EAA5BA,OAAQsD,EAAoB,EAApBA,OAAQsC,EAAY,EAAZA,MAAY,EAC9BnC,mBAAS,IADqB,mBAC/CW,EAD+C,KACzCsH,EADyC,KAGtD9H,qBAAU,WACJ5D,GACFoC,IACG0B,IAAI,oCAAqC,CACxCC,OAAQ,CAAEC,IAAKV,KAEhBW,MAAK,SAACC,GACLwH,EAAQxH,EAASC,KAAKC,SAEvBzB,OAAM,SAACC,GACNC,QAAQD,MAAM,2CAA4CA,QAG/D,CAAC5C,IAOJ,OACE,eAACG,EAAA,EAAD,CAAOG,MAAO,CAAEE,QAAS,IAAMH,KAAML,EAArC,UACE,cAAC+E,EAAA,EAAD,CAASzE,MAAO,CAAE0E,SAAU,OAAQC,UAAW,QAA/C,SACE,4BAAIb,MAEN,cAACzD,EAAA,EAAD,CAAQyI,QAAQ,QAAQvI,QAAQ,QAAQC,QAVxB,WAClB4K,EAAQ,IACR9F,WCgEW+F,EAjFE,SAAC,GASX,IARLC,EAQI,EARJA,KACAC,EAOI,EAPJA,eAEA7D,GAKI,EANJ8D,iBAMI,EALJ9D,qBACAC,EAII,EAJJA,eACAgD,EAGI,EAHJA,iBACAC,EAEI,EAFJA,YACAa,EACI,EADJA,WACI,EAC8CtI,oBAAS,GADvD,mBACGuI,EADH,KACsBC,EADtB,OAEwCxI,oBAAS,GAFjD,mBAEGyI,EAFH,KAEmBC,EAFnB,OAGoD1I,oBAAS,GAH7D,mBAGG2I,EAHH,KAGyBC,EAHzB,OAIkD5I,oBAAS,GAJ3D,mBAIG6I,EAJH,KAIwBC,EAJxB,KAMJ,OACE,eAACrD,EAAA,EAAD,WACE,cAACsD,EAAA,EAAD,CAAMpM,KAAK,QAAQqM,KAAK,iBACxB,eAACvD,EAAA,EAAKwD,QAAN,WACE,sBAAKhE,UAAU,UAAf,UACE,gCACE,cAACQ,EAAA,EAAKzI,OAAN,CAAaC,GAAG,KAAKJ,MAAO,CAAEqM,OAAQ,GAAK9L,QAAS+K,EAAKa,OACzD,cAACvD,EAAA,EAAKC,YAAN,CAAkBtI,QAAO,oBAAe+K,EAAKgB,cAC7C,cAAC1D,EAAA,EAAKC,YAAN,CACEtI,QAAO,2BAAsB+K,EAAKxD,qBAItC,sBAAKM,UAAU,sBAAf,UACE,cAAC/H,EAAA,EAAD,CACEE,QAAQ,YACRC,QAAS,kBAAMmL,GAAqB,MAEtC,cAACtL,EAAA,EAAD,CAAQE,QAAQ,SAASC,QAAS,kBAAMqL,GAAkB,SAG5D,sBAAKzD,UAAU,sBAAsBpI,MAAO,CAAEuM,WAAY,GAA1D,UACE,cAAClM,EAAA,EAAD,CACEE,QAAQ,YACRC,QAAS,kBAAMuL,GAAwB,MAEzC,cAAC1L,EAAA,EAAD,CACEiI,SAAUiD,EACVhL,QAAQ,SACRC,QAAS,kBAAMyL,GAAuB,YAK5C,cAAC,EAAD,CACEvM,OAAQgM,EACR1I,OAAQsI,EAAKkB,IACb/E,UAAW6D,EAAK7D,UAChBrC,OAAQkG,EAAKxD,eACbJ,oBAAqBA,EACrBC,eAAgBA,EAChBrC,MAAO,kBAAMqG,GAAqB,MAEpC,cAAC,EAAD,CACEjM,OAAQkM,EACR5I,OAAQsI,EAAKnF,MACbuE,OAAQY,EAAKZ,OACbC,iBAAkBA,EAClBC,YAAaA,EACbtF,MAAO,kBAAMuG,GAAkB,MAEjC,cAAC,EAAD,CACEnM,OAAQoM,EACR9I,OAAQsI,EAAKnF,MACbb,MAAO,kBAAMyG,GAAwB,MAEvC,cAAC,EAAD,CACErM,OAAQsM,EACRrM,UAAW8L,EACX7L,SAAU,kBAAMqM,GAAuB,a,kBCgGlCQ,EAtKa,SAAC,GAA4C,IAA1C/M,EAAyC,EAAzCA,OAAQoB,EAAiC,EAAjCA,SAAU4L,EAAuB,EAAvBA,UAAWpH,EAAY,EAAZA,MACpDqH,EAAe,SAAC7I,GACpB,MAAM,gBAAN,OACE4I,EACGE,MAAK,SAACC,GAAD,OAAQA,EAAG1G,QAAUrC,EAAKd,UAC/B0H,OAAOkC,MAAK,SAACE,GAAD,OAAOA,EAAEpJ,MAAQI,EAAKiJ,WAASxC,WAHhD,wBAKEmC,EACGE,MAAK,SAACC,GAAD,OAAQA,EAAG1G,QAAUrC,EAAKd,UAC/B0H,OAAOkC,MAAK,SAACE,GAAD,OAAOA,EAAEpJ,MAAQI,EAAKiJ,WAASvC,SAPhD,0BASEkC,EACGE,MAAK,SAACC,GAAD,OAAQA,EAAG1G,QAAUrC,EAAKd,UAC/B0H,OAAOkC,MAAK,SAACE,GAAD,OAAOA,EAAEpJ,MAAQI,EAAKiJ,WAAStD,aA2IlD,OACE,eAAC5J,EAAA,EAAD,CAAOE,KAAML,EAAQM,MAAO,CAAEmC,OAAQ,OAAQjC,QAAS,IAAvD,UACE,cAACC,EAAA,EAAD,CAAQC,GAAG,KAAKG,QAASO,EAASqL,OAtBlC,cAAC1H,EAAA,EAAD,CAASuI,OAAK,EAAChN,MAAO,CAAE0E,SAAU,OAAQC,UAAW,OAArD,SACE,cAACiE,EAAA,EAAD,UACE,eAACA,EAAA,EAAKwD,QAAN,WACE,cAAC5D,EAAA,EAAD,UACE,cAACI,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,YAAN,CAAkBtI,QAAO,mBAAcO,EAASmM,iBAtH1D,gCACE,cAACrE,EAAA,EAAKzI,OAAN,CAAaC,GAAG,KAAKG,QAAQ,cAC7B,eAACiI,EAAA,EAAD,WACE,cAACI,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,YAAN,kCAAoC/H,EAASC,UAAUmM,kBAEzD,eAACtE,EAAA,EAAD,WACE,cAACA,EAAA,EAAKzI,OAAN,CAAaC,GAAG,KAAKJ,MAAO,CAAEqM,OAAQ,GAAK9L,QAAQ,WACnD,cAACiI,EAAA,EAAD,CAAMxI,MAAO,CAAEuM,WAAY,IAAM7D,SAAO,EAACC,SAAO,EAAhD,SACG7H,EAASC,UAAUC,MAAM4D,KAAI,SAACd,GAAD,OAC5B,cAAC8E,EAAA,EAAD,UACE,eAACA,EAAA,EAAKwD,QAAN,WACE,cAACxD,EAAA,EAAKzI,OAAN,CACEC,GAAG,KACHG,QAAO,UACLO,EAASC,UAAUC,MAAMmM,QAAQrJ,GAAQ,EADpC,aAEFA,EAAKqI,QAEZ,cAACvD,EAAA,EAAKC,YAAN,CACEzI,GAAG,KACHJ,MAAO,CAAEoN,UAAW,EAAGrG,aAAc,GACrCxG,QAAQ,UAEV,cAACqI,EAAA,EAAKC,YAAN,CACE7I,MAAO,CAAEuM,WAAY,IACrBhM,QAASoM,EAAa7I,SAfjBA,EAAKd,sBAkHpB,cAACgG,EAAA,EAAD,IArFN,gCACE,cAACJ,EAAA,EAAKzI,OAAN,CAAaC,GAAG,KAAKG,QAAQ,gBAC7B,cAACiI,EAAA,EAAD,CAAMxI,MAAO,CAAEuM,WAAY,IAAM7D,SAAO,EAACC,SAAO,EAAhD,SACG7H,EAASI,YAAY0D,KAAI,SAACd,GAAD,OACxB,cAAC8E,EAAA,EAAD,UACE,eAACA,EAAA,EAAKwD,QAAN,WACE,cAACxD,EAAA,EAAKzI,OAAN,CACEC,GAAG,KACHG,QAAO,UAAKO,EAASI,YAAYiM,QAAQrJ,GAAQ,EAA1C,aACLA,EAAKqI,QAGT,cAACvD,EAAA,EAAKC,YAAN,CACE7I,MAAO,CAAEoN,UAAW,GACpB7M,QAAO,wBAAmBuD,EAAKoJ,aAAaG,QAE9C,cAACzE,EAAA,EAAKC,YAAN,CACEtI,SAEE,IADA+M,KAAKC,MAAMzJ,EAAKoJ,aAAaM,wBAEzB,uBACA,wBAGR,cAAC5E,EAAA,EAAKC,YAAN,CACEtI,SACwD,IAAtD+M,KAAKC,MAAMzJ,EAAKoJ,aAAaO,qBACzB,oBACA,qBAGR,cAAC7E,EAAA,EAAKC,YAAN,CACEzI,GAAG,KACHJ,MAAO,CAAEoN,UAAW,EAAGrG,aAAc,GACrCxG,QAAQ,UAEV,cAACqI,EAAA,EAAKC,YAAN,CACE7I,MAAO,CAAEuM,WAAY,IACrBhM,QAASoM,EAAa7I,KAExB,cAAC8E,EAAA,EAAKC,YAAN,CACEzI,GAAG,KACHJ,MAAO,CAAEoN,UAAW,EAAGrG,aAAc,GACrCxG,QAAQ,eAEV,cAACiI,EAAA,EAAD,CAAMxI,MAAO,CAAEuM,WAAY,IAA3B,SACGzI,EAAK4J,YAAY9I,KAAI,SAAC+I,GAAD,OACpB,cAAC/E,EAAA,EAAD,UACE,cAACA,EAAA,EAAKwD,QAAN,UACE,cAACxD,EAAA,EAAKC,YAAN,CACEtI,QAAO,UACLuD,EAAK4J,YAAYP,QAAQQ,GAAc,EADlC,aAILjB,EACGE,MAAK,SAACC,GAAD,OAAQA,EAAG1G,QAAUrC,EAAKd,UAC/ByE,UAAUmF,MAAK,SAACgB,GAAD,OAAOA,EAAElK,MAAQiK,KAChCpI,eAVAoI,YA3CR7J,EAAKd,uBA+FtB,cAAC3C,EAAA,EAAD,CACEL,MAAO,CAAEqH,SAAU,WAAYC,MAAO,GAAIC,OAAQ,IAClDhH,QAAQ,QACRC,QAAS8E,QCxJFuI,EAjBa,SAAC,GAAqC,IAAnCnO,EAAkC,EAAlCA,OAAQC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAChD,OACE,eAACC,EAAA,EAAD,CACEC,KAAK,OACLC,KAAML,EACNM,MAAO,CAAEC,UAAW,SAAUC,QAAS,IAHzC,UAKE,eAACL,EAAA,EAAMM,OAAP,CAAcC,GAAG,KAAjB,2DAEE,0BAEF,cAACC,EAAA,EAAD,CAAQC,SAAO,EAACC,QAAQ,MAAMC,QAASb,IACvC,cAACU,EAAA,EAAD,CAAQE,QAAQ,KAAKC,QAASZ,QCuErBkO,EAhFS,SAAC,GAA6C,IAA3ChN,EAA0C,EAA1CA,SAAU4L,EAAgC,EAAhCA,UAAWqB,EAAqB,EAArBA,eAAqB,EACnB5K,oBAAS,GADU,mBAC5D6K,EAD4D,KAC1CC,EAD0C,OAEL9K,oBAAS,GAFJ,mBAE5D+K,EAF4D,KAEnCC,EAFmC,KAInE,OACE,cAACvF,EAAA,EAAD,UACE,eAACA,EAAA,EAAKwD,QAAN,WACE,sBAAK5L,QAAS,kBAAMyN,GAAoB,IAAxC,UACE,cAACrF,EAAA,EAAKzI,OAAN,CAAaC,GAAG,KAAKJ,MAAO,CAAEqM,OAAQ,GAAK9L,QAASO,EAASqL,OAE7D,cAACvD,EAAA,EAAKC,YAAN,CACEzI,GAAG,KACHJ,MAAO,CAAEqM,OAAQ,GACjB9L,QAAQ,qBAEV,cAACiI,EAAA,EAAD,CAAMxI,MAAO,CAAEuM,WAAY,IAAM6B,YAAU,EAAC1F,SAAO,EAAnD,SACG5H,EAASC,UAAUC,MAAM4D,KAAI,SAACd,GAAD,OAC5B,cAAC8E,EAAA,EAAD,UACE,cAACA,EAAA,EAAKwD,QAAN,UACE,cAACxD,EAAA,EAAKC,YAAN,CACEtI,QAAO,UAAKO,EAASC,UAAUC,MAAMmM,QAAQrJ,GAAQ,EAA9C,aACLA,EAAKqI,WAJFrI,EAAKd,aAYpB,cAAC4F,EAAA,EAAKC,YAAN,CACEzI,GAAG,KACHJ,MAAO,CAAEqM,OAAQ,GACjB9L,QAAQ,sBAEV,cAACiI,EAAA,EAAD,CAAMxI,MAAO,CAAEuM,WAAY,IAAM6B,YAAU,EAAC1F,SAAO,EAAnD,SACG5H,EAASI,YAAY0D,KAAI,SAACd,GAAD,OACxB,cAAC8E,EAAA,EAAD,UACE,cAACA,EAAA,EAAKwD,QAAN,UACE,cAACxD,EAAA,EAAKC,YAAN,CACEtI,QAAO,UAAKO,EAASI,YAAYiM,QAAQrJ,GAAQ,EAA1C,aACLA,EAAKqI,WAJFrI,EAAKd,gBAYtB,sBAAKoF,UAAU,UAAf,UACE,cAACQ,EAAA,EAAKC,YAAN,CACE7I,MAAO,CAAEqM,OAAQ,GACjB9L,QAAO,eAAUO,EAASuN,OAG5B,cAAChO,EAAA,EAAD,CACEE,QAAQ,WACRC,QAAS,kBAAM8N,UAAUC,UAAUC,UAAU1N,EAASuN,QAExD,cAAChO,EAAA,EAAD,CACEE,QAAQ,SACRC,QAAS,kBAAM2N,GAA2B,SAI9C,cAAC,EAAD,CACEzO,OAAQsO,EACRlN,SAAUA,EACV4L,UAAWA,EACXpH,MAAO,kBAAM2I,GAAoB,MAEnC,cAAC,EAAD,CACEvO,OAAQwO,EACRvO,UAAWoO,EACXnO,SAAU,kBAAMuO,GAA2B,Y,SChBtCM,EAnDO,SAAC,GAAqD,IAAnD/O,EAAkD,EAAlDA,OAAQgP,EAA0C,EAA1CA,mBAAoBC,EAAsB,EAAtBA,gBAAsB,EACvBxL,mBAAS,IADc,mBAClEyL,EADkE,KAC/CC,EAD+C,OAEvB1L,mBAAS,IAFc,mBAElE2L,EAFkE,KAE/CC,EAF+C,KAIzEzL,qBAAU,WACRuL,EAAqBG,EAAwBN,MAC5C,CAACA,IAEJ,IAAMM,EAA0B,SAACvH,GAC/B,OAAOA,EAAU7C,KAAI,SAACW,GACpB,MAAO,CACLiH,IAAKjH,EAAS7B,IACdyC,MAAOZ,EAAS7B,IAChBI,KAAMyB,EAASA,cAKrB,OACE,eAAC1F,EAAA,EAAD,CAAOG,MAAO,CAAEE,QAAS,IAAMJ,KAAK,OAAOC,KAAML,EAAjD,UACE,cAACS,EAAA,EAAD,CAAQC,GAAG,KAAKG,QAAQ,wBACxB,cAAC0O,EAAA,EAAD,CACE9H,YAAY,iCACZD,OAAK,EACLgI,QAAM,EACNC,WAAS,EACTC,UAAQ,EACRC,QAAST,EACTxH,SAAU,SAAC3F,EAAGoC,GAAJ,OAAakL,EAAqBlL,EAAKsC,UAEnD,cAACqC,EAAA,EAAD,CAAMC,SAAO,EAACC,SAAO,EAACC,SAAO,EAA7B,SACGmG,EAAkBlK,KAAI,SAACW,GAAD,OACrB,cAACqD,EAAA,EAAD,UACE,cAACA,EAAA,EAAKC,YAAN,CACEtI,QACEmO,EAAmB9B,MAAK,SAACgB,GAAD,OAAOA,EAAElK,MAAQ6B,KAAUA,YAH9CA,QASf,cAACyD,EAAA,EAAD,IACA,cAAC3I,EAAA,EAAD,CACEyI,QAAQ,QACRvI,QAAQ,OACRC,QAAS,kBAAMmO,EAAgBG,UCIxBQ,EAzDI,SAAC,GAA8C,IAA5C5P,EAA2C,EAA3CA,OAAQ6P,EAAmC,EAAnCA,gBAAiBC,EAAkB,EAAlBA,YAAkB,EACnBrM,mBAAS,IADU,mBACxDsM,EADwD,KACxCC,EADwC,OAEjCvM,mBAASoM,EAAgB,GAAG7L,KAFK,mBAExDqJ,EAFwD,KAE/C4C,EAF+C,KAI/DrM,qBAAU,WACRoM,EAAkBE,EAAqBL,MACtC,CAACA,IAEJ,IAAMK,EAAuB,SAAClF,GAC5B,OAAOA,EAAO9F,KAAI,SAAC5E,GACjB,MAAO,CACLwM,IAAKxM,EAAM0D,IACXyC,MAAOnG,EAAM0D,IACbI,KAAK,WAAD,OAAa9D,EAAMuK,WAAnB,mBAAwCvK,EAAMwK,SAA9C,0BAAwExK,EAAMyJ,iBAKxF,OACE,eAAC5J,EAAA,EAAD,CAAOG,MAAO,CAAEE,QAAS,IAAMJ,KAAK,OAAOC,KAAML,EAAjD,UACE,cAACS,EAAA,EAAD,CAAQC,GAAG,KAAKG,QAAQ,YACxB,cAAC0O,EAAA,EAAD,CACE9H,YAAY,+BACZD,OAAK,EACLiI,WAAS,EACTE,QAASI,EACTrI,SAAU,SAAC3F,EAAGoC,GAAJ,OAAa8L,EAAW9L,EAAKsC,UAEzC,cAACyC,EAAA,EAAD,CAAM5I,MAAO,CAAEoN,UAAW,IAA1B,SACE,eAACxE,EAAA,EAAKwD,QAAN,WACE,cAACxD,EAAA,EAAKzI,OAAN,CAAaC,GAAG,KAAKG,QAAQ,oBAC7B,cAACqI,EAAA,EAAKC,YAAN,CACEtI,QAAO,uBACLgP,EAAgB3C,MAAK,SAACE,GAAD,OAAOA,EAAEpJ,MAAQqJ,KAASxC,cAGnD,cAAC3B,EAAA,EAAKC,YAAN,CACEtI,QAAO,qBACLgP,EAAgB3C,MAAK,SAACE,GAAD,OAAOA,EAAEpJ,MAAQqJ,KAASvC,YAGnD,cAAC5B,EAAA,EAAKC,YAAN,CACEtI,QAAO,uBACLgP,EAAgB3C,MAAK,SAACE,GAAD,OAAOA,EAAEpJ,MAAQqJ,KAAStD,mBAKvD,cAACpJ,EAAA,EAAD,CACEyI,QAAQ,QACRvI,QAAQ,OACRC,QAAS,kBAAMgP,EAAYzC,UCoCpB8C,EArFY,SAAC,GAUrB,IATL/L,EASI,EATJA,KACA4K,EAQI,EARJA,mBACAa,EAOI,EAPJA,gBACAO,EAMI,EANJA,aACAC,EAKI,EALJA,YACAC,EAII,EAJJA,gBACAC,EAGI,EAHJA,kBACAC,EAEI,EAFJA,6BACAC,EACI,EADJA,0BACI,EACsChN,oBAAS,GAD/C,mBACGiN,EADH,KACkBC,EADlB,OAEgClN,oBAAS,GAFzC,mBAEGmN,EAFH,KAEeC,EAFf,OAGoDpN,oBAAS,GAH7D,mBAGGqN,EAHH,KAGyBC,EAHzB,KAoBJ,OACE,cAAC7H,EAAA,EAAD,UACE,cAACA,EAAA,EAAKwD,QAAN,UACE,sBAAKhE,UAAU,UAAf,UACE,8BACE,cAACQ,EAAA,EAAKzI,OAAN,CAAaH,MAAO,CAAEqM,OAAQ,GAAK9L,QAASuD,EAAK4M,aAGnD,cAAC5J,EAAA,EAAD,CACEG,KAAK,OACL3E,MAAO2N,GAAqBO,EAC5BrJ,YAAY,6BACZC,SAAU,SAAC3F,GAAD,OA3Ba,SAACqC,EAAMoJ,GACtCuD,EAAyC,KAAjBvD,GACxB8C,EAAgBlM,EAAMoJ,GAyBGyD,CAAyB7M,EAAMrC,EAAEyE,OAAOC,UAG3D,gCACE,sBAAKiC,UAAU,cAAf,UACE,uBACEnB,KAAK,WACL2J,gBAAc,EACdpQ,QAAS0P,IAEX,wEAGF,sBAAK9H,UAAU,cAAf,UACE,uBACEnB,KAAK,WACL2J,gBAAc,EACdpQ,QAAS2P,IAEX,wEAIJ,cAAC9P,EAAA,EAAD,CAAQE,QAAQ,SAASC,QAAS,kBAAM+P,GAAc,MACtD,cAAClQ,EAAA,EAAD,CAAQE,QAAQ,YAAYC,QAAS,kBAAM6P,GAAiB,MAE5D,cAAC,EAAD,CACE3Q,OAAQ0Q,EACR1B,mBAAoBA,EACpBC,gBAnDc,SAACG,GACvBuB,GAAiB,GACjBP,EAAahM,EAAMgL,MAoDb,cAAC,EAAD,CACEpP,OAAQ4Q,EACRf,gBAAiBA,EACjBC,YApDU,SAACxP,GACnBuQ,GAAc,GACdR,EAAYjM,EAAM9D,YAIP8D,EAAKd,SCHL6N,EA7BW,SAAC,GAA4C,IAA1C/M,EAAyC,EAAzCA,KAAMyL,EAAmC,EAAnCA,gBAAiBQ,EAAkB,EAAlBA,YAAkB,EAChC5M,oBAAS,GADuB,mBAC7DmN,EAD6D,KACjDC,EADiD,KAQpE,OACE,cAAC3H,EAAA,EAAD,UACE,cAACA,EAAA,EAAKwD,QAAN,UACE,sBAAKhE,UAAU,UAAf,UACE,8BACE,cAACQ,EAAA,EAAKzI,OAAN,CAAaH,MAAO,CAAEqM,OAAQ,GAAK9L,QAASuD,EAAK4M,aAGnD,cAACrQ,EAAA,EAAD,CAAQE,QAAQ,SAASC,QAAS,kBAAM+P,GAAc,MAEtD,cAAC,EAAD,CACE7Q,OAAQ4Q,EACRf,gBAAiBA,EACjBC,YAlBU,SAACxP,GACnBuQ,GAAc,GACdR,EAAYjM,EAAM9D,YAIP8D,EAAKd,SCgYL8N,EA/XQ,SAAC,GAAkC,IAAhCpR,EAA+B,EAA/BA,OAAQ4F,EAAuB,EAAvBA,MAAOoH,EAAgB,EAAhBA,UAAgB,EACfvJ,mBAAS,IADM,mBAChD4N,EADgD,KAClCC,EADkC,OAEnB7N,mBAAS,IAFU,mBAEhD8N,EAFgD,KAEpCC,EAFoC,OAGG/N,mBAAS,IAHZ,mBAGhDgO,EAHgD,KAGzBC,EAHyB,OAIjBjO,mBAAS,IAJQ,mBAIhDjC,EAJgD,KAInCmQ,EAJmC,OAMrDlO,oBAAS,GAN4C,mBAKhDmO,EALgD,KAKtBC,EALsB,OAOLpO,mBAAS,IAPJ,mBAOhDqO,EAPgD,KAO7BC,EAP6B,KASvDnO,qBAAU,WACRmO,EAAqBC,EAAwBhF,MAC5C,CAACA,IAEJ,IAAMgF,EAA0B,SAAChF,GAC/B,OAAOA,EAAU9H,KAAI,SAAC0G,GACpB,MAAO,CACLkB,IAAKlB,EAAKkB,IACVrG,MAAOmF,EAAKnF,MACZrC,KAAMwH,EAAKa,UA+IXwF,EAAqB,SAAC7N,EAAMgL,GAChC,IAAM7K,EAAQ/C,EAAYiM,QAAQrJ,GAC5B8N,EAAkB1Q,EACxB0Q,EAAgB3N,GAAOyJ,YAAcoB,EACrCuC,EAAeO,IAGXC,EAA6B,SAAC/N,EAAMiJ,GACxC,IAAM9I,EAAQgN,EAAW9D,QAAQrJ,GAC3BgO,EAAiBb,EACvBa,EAAe7N,GAAO8I,QAAUA,EAChCmE,EAAcY,IAGVC,EAA8B,SAACjO,EAAMiJ,GACzC,IAAM9I,EAAQ/C,EAAYiM,QAAQrJ,GAC5B8N,EAAkB1Q,EACxB0Q,EAAgB3N,GAAO8I,QAAUA,EACjCsE,EAAeO,IAGXI,EAA4B,SAAClO,EAAMoJ,GACvC,IAAMjJ,EAAQ/C,EAAYiM,QAAQrJ,GAC5B8N,EAAkB1Q,EACxB0Q,EAAgB3N,GAAOiJ,aAAaG,KAAOH,EAC3CmE,EAAeO,IAGXK,EAAiB,SAACnO,EAAMyB,GAC5B,IAAMtB,EAAQ/C,EAAYiM,QAAQrJ,GAC5B8N,EAAkB1Q,EACxB,GAAiB,gBAAbqE,EAA4B,CAC9B,IAAM2M,GAAON,EAAgB3N,GAAOiJ,aAAaM,uBACjDoE,EAAgB3N,GAAOiJ,aAAaM,uBAAyB0E,EAE/D,GAAiB,aAAb3M,EAAyB,CAC3B,IAAM2M,GAAON,EAAgB3N,GAAOiJ,aAAaO,oBACjDmE,EAAgB3N,GAAOiJ,aAAaO,oBAAsByE,EAE5Db,EAAeO,IAWXO,EAAc,SAACC,EAAiBC,GAGpC,GAVArB,EAAgB,IAChBE,EAAc,IACdG,EAAe,IACfD,EAAyB,IACzBG,GAA4B,GAMxBa,EAAiB,CACnB,IAAMN,EAAiB,GACvBO,EAAatR,UAAUC,MAAMsR,SAAQ,SAACxO,GACpCgO,EAAeS,KAAK,CAClBvP,OAAQc,EAAKd,OACbmJ,KAAMO,EAAUE,MAAK,SAACC,GAAD,OAAQA,EAAG1G,QAAUrC,EAAKd,UAAQmJ,KACvDY,QAASjJ,EAAKiJ,aAIlB,IAAM6E,EAAkB,GACxBS,EAAanR,YAAYoR,SAAQ,SAACE,GAAD,OAC/BZ,EAAgBW,KAAK,CACnBvP,OAAQwP,EAAQxP,OAChBmJ,KAAMO,EAAUE,MAAK,SAACC,GAAD,OAAQA,EAAG1G,QAAUqM,EAAQxP,UAAQmJ,KAC1De,aAAcsF,EAAQtF,aACtBQ,YAAa8E,EAAQ9E,YACrBX,QAASyF,EAAQzF,aAIrB,IAAMjM,EAAW,CACf0L,IAAK6F,EAAa3O,IAClByI,KAAMkG,EAAalG,KACnBpL,UAAW,CACTC,MAAO8Q,EACP5E,aAAcmF,EAAatR,UAAUmM,cAEvChM,YAAa0Q,EACb3E,UAAWoF,EAAapF,UACxBoB,IAAKgE,EAAa3O,KAGpB4B,GAAM,EAAMxE,QAEZwE,GAAM,EAAO,OAkDjB,OACE,8BACE,eAACzF,EAAA,EAAD,CAAOE,KAAML,EAAQM,MAAO,CAAEmC,OAAQ,OAAQjC,QAAS,IAAvD,UACE,cAACC,EAAA,EAAD,CAAQC,GAAG,KAAKG,QAAQ,8BACxB,eAACkE,EAAA,EAAD,CAASzE,MAAO,CAAE0E,SAAU,OAAQC,UAAW,OAA/C,UACE,eAACF,EAAA,EAAD,WACE,cAACtE,EAAA,EAAD,CACEC,GAAG,KACHG,QAAQ,iBACRP,MAAO,CAAEyS,WAAY,EAAGC,YAAa,MAEvC,cAAC5L,EAAA,EAAD,CACEG,KAAK,OACL3E,MAAwB,KAAjByO,GAAuBO,EAC9BtK,WAAS,EACTE,OAAK,EACLC,YAAY,6BACZC,SAAU,SAAC3F,GAAD,OAAOuP,EAAgBvP,EAAEyE,OAAOC,aAI9C,eAAC1B,EAAA,EAAD,WACE,cAACtE,EAAA,EAAD,CACEC,GAAG,KACHG,QAAQ,2BACRP,MAAO,CAAEyS,WAAY,EAAGC,YAAa,MAEvC,cAAC5L,EAAA,EAAD,CACEG,KAAK,OACL3E,MAAiC,KAA1B6O,GAAgCG,EACvCpK,OAAK,EACLC,YAAY,gDACZC,SAAU,SAAC3F,GAAD,OAAO2P,EAAyB3P,EAAEyE,OAAOC,aAIvD,eAAC1B,EAAA,EAAD,WACE,cAACtE,EAAA,EAAD,CACEC,GAAG,KACHG,QAAQ,eACRP,MAAO,CAAEyS,WAAY,EAAGC,YAAa,MAEvC,cAACzD,EAAA,EAAD,CACE9H,YAAY,kCACZ7E,MAA6B,IAAtB2O,EAAWhQ,QAAgBqQ,EAClCpK,OAAK,EACLgI,QAAM,EACNC,WAAS,EACTC,UAAQ,EACRC,QAASmC,EACTpK,SApQkB,SAAC3F,EAAGoC,GAChC,GAA2B,gBAAvBpC,EAAEyE,OAAOkC,UACX,IADyC,IAAD,WAC/BuK,GAKP,IACmB,IALC9O,EAAKsC,MAAMgH,QAAQtJ,EAAKwL,QAAQsD,GAAGxM,QAMrD8K,EAAW2B,MAAK,SAACC,GAAD,OAAUA,EAAK7P,SAAWa,EAAKwL,QAAQsD,GAAGxM,SAK1D,OAHA+K,EACED,EAAW6B,QAAO,SAACD,GAAD,OAAUA,EAAK7P,SAAWa,EAAKwL,QAAQsD,GAAGxM,UAE9D,SAZKwM,EAAI,EAAGA,EAAI9O,EAAKwL,QAAQpO,OAAQ0R,IAAK,gBAArCA,GAYL,WAIJzB,EAAc,GAAD,mBACRD,GADQ,CAEX,CACEjO,OAAQa,EAAKsC,MAAMtC,EAAKsC,MAAMlF,OAAS,GACvCyP,SAAU7M,EAAKwL,QAAQzC,MACrB,SAACtB,GAAD,OAAUA,EAAKnF,QAAUtC,EAAKsC,MAAMtC,EAAKsC,MAAMlF,OAAS,MACxD6C,KACFiJ,QAASL,EAAUE,MACjB,SAACC,GAAD,OAAQA,EAAG1G,QAAUtC,EAAKsC,MAAMtC,EAAKsC,MAAMlF,OAAS,MACpDyJ,OAAO,GAAGhH,WA2IhB,cAAC8E,EAAA,EAAD,CAAMG,SAAO,EAACD,SAAO,EAArB,SACGuI,EAAWrM,KAAI,SAACd,GAAD,OACd,cAAC,EAAD,CAEEA,KAAMA,EACNyL,gBACE7C,EAAUE,MAAK,SAACtB,GAAD,OAAUA,EAAKkB,MAAQ1I,EAAKd,UAAQ0H,OAErDqF,YAAa8B,GALR/N,EAAKd,gBAgGZ,eAACyB,EAAA,EAAD,WACE,cAACtE,EAAA,EAAD,CACEC,GAAG,KACHG,QAAQ,oBACRP,MAAO,CAAEyS,WAAY,EAAGC,YAAa,MAEvC,cAACzD,EAAA,EAAD,CACE9H,YAAY,mCACZ7E,MAA8B,IAAvBpB,EAAYD,QAAgBqQ,EACnCpK,OAAK,EACLgI,QAAM,EACNC,WAAS,EACTC,UAAQ,EACRC,QAASmC,EACTpK,SAtPmB,SAAC3F,EAAGoC,GACjC,GAA2B,gBAAvBpC,EAAEyE,OAAOkC,UACX,IADyC,IAAD,WAC/BuK,GAKP,IACmB,IALC9O,EAAKsC,MAAMgH,QAAQtJ,EAAKwL,QAAQsD,GAAGxM,QAMrDjF,EAAY0R,MAAK,SAACC,GAAD,OAAUA,EAAK7P,SAAWa,EAAKwL,QAAQsD,GAAGxM,SAK3D,OAHAkL,EACEnQ,EAAY4R,QAAO,SAACD,GAAD,OAAUA,EAAK7P,SAAWa,EAAKwL,QAAQsD,GAAGxM,UAE/D,SAZKwM,EAAI,EAAGA,EAAI9O,EAAKwL,QAAQpO,OAAQ0R,IAAK,gBAArCA,GAYL,WAIJtB,EAAe,GAAD,mBACTnQ,GADS,CAEZ,CACE8B,OAAQa,EAAKsC,MAAMtC,EAAKsC,MAAMlF,OAAS,GACvCyP,SAAU7M,EAAKwL,QAAQzC,MACrB,SAACtB,GAAD,OAAUA,EAAKnF,QAAUtC,EAAKsC,MAAMtC,EAAKsC,MAAMlF,OAAS,MACxD6C,KACFoJ,aAAc,CACZG,KAAM,GACNG,wBAAwB,EACxBC,qBAAqB,GAEvBC,YAAa,GACbX,QAASL,EAAUE,MACjB,SAACC,GAAD,OAAQA,EAAG1G,QAAUtC,EAAKsC,MAAMtC,EAAKsC,MAAMlF,OAAS,MACpDyJ,OAAO,GAAGhH,WAqHhB,cAAC8E,EAAA,EAAD,CAAMG,SAAO,EAACD,SAAO,EAArB,SACGxH,EAAY0D,KAAI,SAACd,GAAD,OACf,cAAC,EAAD,CAEEA,KAAMA,EACN4K,mBACEhC,EAAUE,MAAK,SAACtB,GAAD,OAAUA,EAAKkB,MAAQ1I,EAAKd,UAAQyE,UAErD8H,gBACE7C,EAAUE,MAAK,SAACtB,GAAD,OAAUA,EAAKkB,MAAQ1I,EAAKd,UAAQ0H,OAErDoF,aAAc6B,EACd5B,YAAagC,EACb/B,gBAAiBgC,EACjB/B,kBAC6B,KAA3BnM,EAAKoJ,aAAaG,MAAeiE,EAEnCpB,6BAA8B,kBAC5B+B,EAAenO,EAAM,gBAEvBqM,0BAA2B,kBAAM8B,EAAenO,EAAM,cAjBjDA,EAAKd,mBAmGd,sBAAKhD,MAAO,CAAEqH,SAAU,WAAYC,MAAO,GAAIC,OAAQ,IAAvD,UACE,cAAClH,EAAA,EAAD,CAAQE,QAAQ,SAASC,QAAS,kBAAM2R,GAAY,EAAO,SAC3D,cAAC9R,EAAA,EAAD,CAAQsG,UAAQ,EAACpG,QAAQ,SAASC,QAnUrB,WAGnB,IAjCsB,WACtB,IAAI6J,GAAc,EAEU,KAAxB0G,EAAa9H,SACfsI,GAA4B,GAC5BlH,GAAc,GAEU,IAAtB4G,EAAWhQ,SACbsQ,GAA4B,GAC5BlH,GAAc,GAEW,IAAvBnJ,EAAYD,SACdsQ,GAA4B,GAC5BlH,GAAc,GAEqB,KAAjC8G,EAAsBlI,SACxBsI,GAA4B,GAC5BlH,GAAc,GAEhB,IAAK,IAAIsI,EAAI,EAAGA,EAAIzR,EAAYD,OAAQ0R,IACtC,GAAyC,KAArCzR,EAAYyR,GAAGzF,aAAaG,KAAa,CAC3CkE,GAA4B,GAC5BlH,GAAc,EACd,MAIJ,OAAOA,EAIaC,GAEF,CAGhB,IADA,IAAMyI,EAAQ,GACLJ,EAAI,EAAGA,EAAIzR,EAAYD,OAAQ0R,IACtCI,EAAMR,KAAK,CACTvP,OAAQ9B,EAAYyR,GAAG3P,OACvBkK,aAAchM,EAAYyR,GAAGzF,aAC7BQ,YAAaxM,EAAYyR,GAAGjF,YAC5BX,QAAS7L,EAAYyR,GAAG5F,UAI5B,IAAMjM,EAAW,CACfqL,KAAM4E,EAAa9H,OACnBlI,UAAW,CACTC,MAAOiQ,EACP/D,aAAciE,EAAsBlI,QAEtC/H,YAAa6R,EACb9F,UAAW,IAAIpL,MAGjBC,IACGkR,KAAK,8CAA+ClS,GACpD6C,MAAK,SAACC,GACLuO,GAAY,EAAMvO,EAASC,SAE5BxB,OAAM,SAACC,GACNC,QAAQD,MAAM,mCAAoCA,mBCvB7C2Q,EAvEI,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACdC,EAAe,CACnB5I,WAAY,aACZC,SAAU,GACVf,WAAY,IAGR2J,EAAUC,mBA0ChB,OAEE,cADA,CACA,iBACE,cAAChT,EAAA,EAAD,CACEL,MAAO,CAAEqH,SAAU,WAAYC,MAAO,IACtCX,UAAQ,EACRpG,QAAQ,cACR+S,KAAK,OACL9S,QAhDoB,WACxB4S,EAAQG,QAAQC,WAiDd,uBACEC,IAAKL,EACLnM,KAAK,OACLkF,KAAK,OACLuH,OAAO,OACPC,QAAM,EACNvM,SApDmB,SAACnB,GAExB,IAAMqF,EAAOrF,EAAMC,OAAO6M,MAAM,GAChC,GAAoB,qBAATzH,EAAsB,CAC/B,IAAMsI,EAAS,IAAIC,WACnBD,EAAOE,OAAS,SAAC7N,GACf,IAAM8N,EAAW,CACfjQ,KAAMmC,EAAMC,OAAO8N,OACnBtD,SAAUpF,EAAKa,KACf1E,UAAW,GACXK,eAAgB,GAChB4C,OAAQ,CAACyI,GACTlG,UAAW,IAAIpL,MAEjBC,IACGkR,KAAK,uCAAwCe,GAC7CpQ,MAAK,SAACC,GACL,IAAMqQ,EAAM,CACVzH,IAAK5I,EAASC,KAAKH,IACnByC,MAAOvC,EAASC,KAAKH,IACrByI,KAAMvI,EAASC,KAAK6M,SACpBjJ,UAAW,GACXK,eAAgB,GAChB4C,OAAQ,CAACyI,GACT7G,WAAY1I,EAASC,KAAKoJ,WAE5BiG,EAAgBe,MAEjB5R,OAAM,SAACC,GACNC,QAAQD,MAAM,6BAA8BA,OAGlDsR,EAAOM,WAAW5I,W,kCCuNT6I,EAnQU,SAAC,GAA6C,IAA3CzU,EAA0C,EAA1CA,OAAQ0U,EAAkC,EAAlCA,UAAW1H,EAAuB,EAAvBA,UAAWpH,EAAY,EAAZA,MAAY,EACxBnC,mBAAS,IADe,mBAC7DkR,EAD6D,KAC7CC,EAD6C,OAElCnR,mBAAS,IAFyB,mBAE7DxB,EAF6D,KAElD4S,EAFkD,KAIpEjR,qBAAU,WACJ5D,GACF8U,MAED,CAAC9U,IAEJ,IAAM8U,EAAgB,WACpB1S,IACG0B,IAAI,4CACJG,MAAK,SAACC,GACL,IAAM6Q,EAAkB7Q,EAASC,KAC3BwL,EAAU,GAChBoF,EAAgBnC,SAAQ,SAACoC,GACvBrF,EAAQkD,KAAK,CACX/F,IAAKkI,EAAQhR,IACbyC,MAAOuO,EAAQhR,IACfI,KAAK,SAAD,OAAW4Q,EAAQC,SAAnB,uBACFP,EAAUxH,MAAK,SAACgI,GAAD,OAAOA,EAAEpI,MAAQkI,EAAQG,cAAY1I,KADlD,yBAEauI,EAAQI,gBAG7BR,EAAkBjF,MAEnBhN,OAAM,SAACC,GACNC,QAAQD,MAAM,kCAAmCA,OAIjDyS,EAAqB,uCAAG,sBAAAC,EAAA,+EACrBlT,IACJ0B,IAAI,4CAA6C,CAChDC,OAAQ,CAAE9B,UAAWA,KAEtBgC,MAAK,SAACC,GACL,OAAOA,EAASC,SANQ,2CAAH,qDAUrBoR,EAAqB,uCAAG,sBAAAD,EAAA,+EACrBlT,IACJ0B,IAAI,0CAA2C,CAC9CC,OAAQ,CAAEC,IAAK/B,KAEhBgC,MAAK,SAACC,GACL,OAAOA,EAASC,SANQ,2CAAH,qDAUrBqR,EAAgB,uCAAG,WAAOrS,GAAP,yBAAAmS,EAAA,sDAOvB,IAJMG,EAAgB,GAElBxS,EAAa,EACbyS,EAAiB,EACZzC,EAAI,EAAGA,EAAI9P,EAAiB5B,OAAQ0R,IAEvChQ,IAAeE,EAAiB8P,GAAGhQ,aACrCwS,EAAc5C,KAAK,CACjB5P,WAAYA,EACZ0S,QAASxS,EAAiByS,MAAMF,EAAgBzC,KAElDhQ,EAAaE,EAAiB8P,GAAGhQ,WACjCyS,EAAiBzC,GAWrB,IANAwC,EAAc5C,KAAK,CACjB5P,WAAYA,EACZ0S,QAASxS,EAAiByS,MAAMF,KAIzBzC,EAAI,EAAGA,EAAIwC,EAAclU,OAAQ0R,IAElC9O,EAAO0R,EAA6BJ,EAAcxC,GAAG0C,SAC3DG,EAAU3R,EAAD,qBAAqBsR,EAAcxC,GAAGhQ,WAAtC,eA7BY,2CAAH,sDAiChB8S,EAA2B,SAACC,EAAoBC,GACpD,IAAMC,EAAiB,CACrBjB,SAAUe,EAAmBf,SAC7BG,UAAWY,EAAmBZ,UAC9Be,QAASH,EAAmBG,QAC5B9E,aAAc4E,EAAaxJ,KAC3BgF,sBAAuBwE,EAAa5U,UAAUmM,cAGhDsI,EAAU,CAACI,GAAF,yBAAqCF,EAAmBhS,OAG7DoS,EAAsB,SAACJ,EAAoBC,GAE/C,IAAM1E,EAAa3D,KAAKC,MAAMD,KAAKyI,UAAUJ,EAAa5U,UAAUC,QAEhE2B,EAAa,EACjBsO,EAAWqB,SAAQ,SAAC0D,GAClB,IACMhW,EADO0M,EAAUE,MAAK,SAACgI,GAAD,OAAOA,EAAEpI,MAAQwJ,EAAUhT,UACpC0H,OAAOkC,MAAK,SAACE,GAAD,OAAOA,EAAEpJ,MAAQsS,EAAUjJ,WACpDkJ,EAAcP,EAAmBzE,WAAWrE,MAChD,SAACgI,GAAD,OAAOA,EAAE5R,SAAWgT,EAAUhT,UAEhCgT,EAAUlB,UAAYmB,EAAYnB,UAClCkB,EAAUH,QAAUI,EAAYJ,QAChCG,EAAUzL,WAAavK,EAAMuK,WAC7ByL,EAAUxL,SAAWxK,EAAMwK,SAC3BwL,EAAUvM,WAAazJ,EAAMyJ,kBACtBuM,EAAUjJ,QAEjByI,EAAUS,EAAYC,OAAb,oBAAkCvT,EAAlC,YACTA,OAGF6S,EAAUvE,EAAY,eAGlBkF,EAAuB,SAACT,EAAoBC,GAEhD,IAAMzU,EAAcoM,KAAKC,MAAMD,KAAKyI,UAAUJ,EAAazU,cAEvDyB,EAAa,EACjBzB,EAAYoR,SAAQ,SAAC8D,GACnB,IAAMtS,EAAO4I,EAAUE,MAAK,SAACgI,GAAD,OAAOA,EAAEpI,MAAQ4J,EAAWpT,UAClDhD,EAAQ8D,EAAK4G,OAAOkC,MAAK,SAACE,GAAD,OAAOA,EAAEpJ,MAAQ0S,EAAWrJ,WACrDkJ,EAAcP,EAAmBxU,YAAY0L,MACjD,SAACgI,GAAD,OAAOA,EAAE5R,SAAWoT,EAAWpT,UAEjCoT,EAAWtB,UAAYmB,EAAYnB,UACnCsB,EAAWP,QAAUI,EAAYJ,QACjCO,EAAWlJ,aAAekJ,EAAWlJ,aAAaG,KAClD+I,EAAWtO,eAAiBhE,EAAKgE,eACjCsO,EAAWC,gBAAkBJ,EAAYK,YACzCF,EAAWG,aAAeN,EAAYO,SACtCJ,EAAW7L,WAAavK,EAAMuK,WAC9B6L,EAAW5L,SAAWxK,EAAMwK,SAC5B4L,EAAW3M,WAAazJ,EAAMyJ,WAE9B,IAAMgN,EAAwBL,EAAW1I,mBAElC0I,EAAWrJ,eACXqJ,EAAW1I,YAElB8H,EAAUS,EAAYC,OAAb,qBAAmCvT,EAAnC,YAGT,IADA,IAAM+T,EAAkB,GAvBU,WAwBzB/D,GACP,IAAMgE,EAAiCV,EAAYS,gBAAgB/D,GAC7DpN,EAAWzB,EAAK2D,UAAUmF,MAC9B,SAACgB,GAAD,OAAOA,EAAElK,MAAQ+S,EAAsB9D,MAEnCiE,EAAa,WAAOrR,EAAStC,aAAaoB,WAA7B,aAA4CkB,EAAStC,aAAaqB,SAAlE,KACnBoS,EAAgBnE,KAAK,CACnBhN,SAAUA,EAASA,SACnBsR,WAAYF,EAA+BG,OAC3CF,cAAeA,EACfG,KAAMJ,EAA+BI,KACrCC,UAAWL,EAA+BK,UAC1CpV,KAAM+U,EAA+B/U,QAZhC+Q,EAAI,EAAGA,EAAIsD,EAAYS,gBAAgBzV,OAAQ0R,IAAM,EAArDA,GAgBT6C,EAAUkB,EAAD,qBAAgC/T,EAAhC,qBACTA,OAGF6S,EAAUtU,EAAa,gBAGnBqU,EAA+B,SAACF,GACpC,OAAOA,EAAQzQ,KAAI,SAACqS,GAClB,MAAO,CAAExU,KAAMwU,EAAMxU,KAAMb,KAAMqV,EAAMrV,UAUrC4T,EAAY,SAAC3R,EAAMqT,GACvB,GAAIrT,EAAK5C,OAAS,EAAG,CACnB,IAAMoO,EAAU,CACd6H,SAAUA,EACVC,eAAgB,IAChBC,aAAc,IACdC,iBAAkB,IAClBC,YAAY,EACZC,QAAQ,EACRC,kBAAkB,GAGA,IAAIC,cAAYpI,GACxBqI,YAAY7T,KAItB8T,EAAY,uCAAG,kCAAA3C,EAAA,sEACcD,IADd,cACb6C,EADa,OAEnB1C,EAAiB0C,GAFE,SAIc3C,IAJd,OAIbS,EAJa,OAKbC,EAAevB,EAAUxH,MAC7B,SAACgI,GAAD,OAAOA,EAAEpI,MAAQkJ,EAAmBb,cA7BAgD,EAiCpCnC,EAAmBoC,mBADfA,EA/BCD,EAAWjT,KAAI,SAACmT,GACrB,MAAO,CAAE9V,MAAO8V,EAAE9V,MAAOE,OAAQ4V,EAAE5V,OAAQP,KAAMmW,EAAEnW,SAiCrD4T,EAAUsC,EAAoB,sBAE9BrC,EAAyBC,EAAoBC,GAC7CG,EAAoBJ,EAAoBC,GACxCQ,EAAqBT,EAAoBC,GAEzCxD,IAlBmB,kCAvBkB,IAAC0F,IAuBnB,OAAH,qDAqBZ1F,EAAc,WAClBmC,EAAkB,IAClBC,EAAa,IACbjP,KAGF,OACE,eAACzF,EAAA,EAAD,CAAOE,KAAML,EAAQM,MAAO,CAAEE,QAAS,IAAvC,UACE,cAACC,EAAA,EAAD,CACEC,GAAG,KACHG,QAAQ,qCACRN,UAAU,WAEZ,cAACgP,EAAA,EAAD,CACE9H,YAAY,iBACZD,OAAK,EACLgI,QAAM,EACNC,WAAS,EACTE,QAASgF,EACTjN,SAAU,SAAC3F,EAAGoC,GAAJ,OAAa0Q,EAAa1Q,EAAKsC,UAG3C,sBAAKnG,MAAO,CAAEgY,MAAO,QAASvF,WAAY,IAA1C,UACE,cAACpS,EAAA,EAAD,CACEC,SAAO,EACPC,QAAQ,sBACR+S,KAAK,WACL9S,QAASmX,IAEX,cAACtX,EAAA,EAAD,CAAQE,QAAQ,SAASC,QAAS2R,WCiG3B8F,GA1VQ,WAAO,IAAD,EACO9U,mBAAS,CAAEU,KAAM,GAAIqU,YAAY,IADxC,mBACpBxL,EADoB,KACTyL,EADS,OAEOhV,mBAAS,CAAEU,KAAM,GAAIqU,YAAY,IAFxC,mBAEpB9D,EAFoB,KAETgE,EAFS,OAG2BjV,oBAAS,GAHpC,mBAGpBkV,EAHoB,KAGCC,EAHD,OAI+BnV,oBAAS,GAJxC,mBAIpBoV,EAJoB,KAIGC,EAJH,KAM3BlV,qBAAU,WAERmV,MACC,IAEHnV,qBAAU,WAEHoJ,EAAUwL,YACbQ,MAED,CAAChM,EAAUwL,aAEd,IAAMO,EAAiB,WACrBN,EAAa,CAAEtU,KAAM6I,EAAU7I,KAAMqU,YAAY,IAEjDpW,IACG0B,IAAI,wBACJG,MAAK,SAACC,GACL,IAAMC,EAAOD,EAASC,KAChBkP,EAAQ,GACdlP,EAAKyO,SAAQ,SAAChH,GACZ,IAAMyI,EAAW,CACfvH,IAAKlB,EAAK5H,IACVyC,MAAOmF,EAAK5H,IACZyI,KAAMb,EAAKoF,SACXjJ,UAAW6D,EAAK7D,UAChBK,eAAgBwD,EAAKxD,eACrB4C,OAAQY,EAAKZ,OACb4B,WAAYhB,EAAK2B,WAEnB8F,EAAMR,KAAKwB,MAIboE,EAAa,CAAEtU,KAAMkP,EAAOmF,YAAY,OAEzC7V,OAAM,SAACC,GACNC,QAAQD,MAAM,wBAAyBA,OAIvCoW,EAAwB,WAC5BN,EAAa,CAAEvU,KAAMuQ,EAAUvQ,KAAMqU,YAAY,IACjDpW,IACG0B,IAAI,4BACJG,MAAK,SAACgV,GACL,IAAMtJ,EAAU,GACHsJ,EAAkB9U,KAC1ByO,SAAQ,SAACsG,GAEZ,IAAM3H,EAAa,GACnB2H,EAAK7X,UAAUC,MAAMsR,SAAQ,SAACxO,GAC5BmN,EAAWsB,KAAK,CACdvP,OAAQc,EAAKd,OACbmJ,KAAMO,EAAU7I,KAAK+I,MAAK,SAACC,GAAD,OAAQA,EAAG1G,QAAUrC,EAAKd,UAAQmJ,KAC5DY,QAASjJ,EAAKiJ,aAGlB,IAAM7L,EAAc,GACpB0X,EAAK1X,YAAYoR,SAAQ,SAACE,GACxBtR,EAAYqR,KAAK,CACfvP,OAAQwP,EAAQxP,OAChBmJ,KAAMO,EAAU7I,KAAK+I,MAAK,SAACC,GAAD,OAAQA,EAAG1G,QAAUqM,EAAQxP,UACpDmJ,KACHe,aAAcsF,EAAQtF,aACtBQ,YAAa8E,EAAQ9E,YACrBX,QAASyF,EAAQzF,aAIrB,IAAM8L,EAAS,CACbrM,IAAKoM,EAAKlV,IACVyI,KAAMyM,EAAKzM,KACXpL,UAAW,CACTC,MAAOiQ,EACP/D,aAAc0L,EAAK7X,UAAUmM,cAE/BhM,YAAaA,EACb+L,UAAW2L,EAAK3L,UAChBoB,IAAKuK,EAAKlV,KAGZ2L,EAAQkD,KAAKsG,MAIfT,EAAa,CAAEvU,KAAMwL,EAAS6I,YAAY,OAE3C7V,OAAM,SAACC,GACNC,QAAQD,MAAM,oCAAqCA,OAInDwW,EAAuB,WAC3BR,GAAuB,IAGnBS,EAAuB,SAAC3G,EAAiBtR,GACzCsR,GACFgG,EAAa,CACXvU,KAAK,GAAD,mBAAMuQ,EAAUvQ,MAAhB,CAAsB/C,IAC1BoX,YAAY,IAGhBI,GAAuB,IAwFnBU,EAAqB,SAAChW,GAC1B,IAAKoR,EAAU8D,WAAY,CACzB,IAAMe,OAGEC,IAFN9E,EAAUvQ,KAAK+I,MAAK,SAAC9L,GAAD,OAClBA,EAASC,UAAUC,MAAM4R,MAAK,SAAC9O,GAAD,OAAUA,EAAKd,SAAWA,QAGtDmW,EAAeC,EAAqBpW,GAC1C,OAAOiW,GAAeE,EAExB,OAAO,GAGHC,EAAuB,SAACpW,GAC5B,OAAKoR,EAAU8D,iBAILgB,IAFN9E,EAAUvQ,KAAK+I,MAAK,SAAC9L,GAAD,OAClBA,EAASI,YAAY0R,MAAK,SAAC9O,GAAD,OAAUA,EAAKd,SAAWA,SAOtDqW,EAAmB,SAAC/N,GACxBxJ,IACG0B,IAAI,oCAAqC,CACxCC,OAAQ,CAAEC,IAAK4H,EAAKkB,OAErB7I,MAAK,SAACC,GACL,IAAM0V,EAAUhO,EAChBgO,EAAQ5O,OAAO,GAAGhH,IAAME,EAASC,KAAK6G,OAAO,GAAGhH,IAChDyU,EAAa,CACXtU,KAAK,GAAD,mBAAM6I,EAAU7I,MAAhB,CAAsByV,IAC1BpB,YAAY,OAGf7V,OAAM,SAACC,GACNC,QAAQD,MAAM,qCAAsCA,OAmF1D,OACE,qBAAK8F,UAAU,aAAf,SACE,cAACmR,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,WACE,eAACA,EAAA,EAAKC,IAAN,WACE,cAACD,EAAA,EAAKE,OAAN,CAAazX,MAAO,EAApB,SApFe,WACvB,IAAM0X,EAASvY,OAAOwY,SAASC,KAI/B,GAAyC,UAArCF,EAAOG,OAAOH,EAAO1Y,OAAS,KAAmByL,EAAUwL,WAC7D,OACE,gCACE,cAAC/X,EAAA,EAAD,CAAQC,GAAG,KAAKH,UAAU,SAASM,QAAQ,mBAE3C,cAACkE,EAAA,EAAD,CAASzE,MAAO,CAAE0E,SAAU,OAAQC,UAAW,QAA/C,SACE,qBAAKyD,UAAU,gCAAf,SACGsE,EAAU7I,KAAKe,KAAI,SAAC0G,GAAD,OAClB,cAAC,EAAD,CAEEA,KAAMA,EACNC,eAAgByN,EAAmB1N,EAAKkB,KACxChB,iBAAkB4N,EAAqB9N,EAAKkB,KAC5C9E,oBAAqB,SAACwB,EAAapB,GAAd,OAjJH,SAACwD,EAAMpC,EAAapB,GACpD,IAAMiL,EAAQrG,EAAU7I,KAClBI,EAAQ8O,EAAM5F,QAAQ7B,GAC5ByH,EAAM9O,GAAOwD,UAAU8K,KAAKrJ,GAC5B6J,EAAM9O,GAAO6D,eAAiBA,EAE9BqQ,EAAa,CAAEtU,KAAMkP,EAAOmF,YAAY,IA4IxB6B,CAA0BzO,EAAMpC,EAAapB,IAE/CH,eAAgB,SAACpC,GAAD,OA3IC,SAAC+F,EAAM/F,GACtC,IAAMwN,EAAQrG,EAAU7I,KAClBI,EAAQ8O,EAAM5F,QAAQ7B,GAC5ByH,EAAM9O,GAAOwD,UAAYsL,EAAM9O,GAAOwD,UAAUqL,QAC9C,SAAClF,GAAD,OAAOA,IAAMrI,KAEf,IAAMuC,EACJiL,EAAM9O,GAAOwD,UAAUxG,OAAS,EAAI8R,EAAM9O,GAAO6D,eAAiB,GACpEiL,EAAM9O,GAAO6D,eAAiBA,EAE9BqQ,EAAa,CAAEtU,KAAMkP,EAAOmF,YAAY,IAExCpW,IACGC,IAAI,+CAAgD,CACnDiB,OAAQsI,EAAKkB,IACbmB,WAAYpI,EAAS7B,IACrBoE,eAAgBA,IAEjBzF,OAAM,SAACC,GACNC,QAAQD,MAAM,8CAA+CA,MAyHjD0X,CAAyB1O,EAAM/F,IAEjCoF,iBAAkB,SAAC3K,GAAD,OAvHH,SAACsL,EAAMJ,GACpC,IAAM6H,EAAQrG,EAAU7I,KAClBI,EAAQ8O,EAAM5F,QAAQ7B,GAC5ByH,EAAM9O,GAAOyG,OAAO6H,KAAKrH,GAEzBiN,EAAa,CAAEtU,KAAMkP,EAAOmF,YAAY,IAmHxB+B,CAAuB3O,EAAMtL,IAE/B4K,YAAa,SAAC5K,GAAD,OAlHC,SAACsL,EAAMtL,GACnC,IAAM+S,EAAQrG,EAAU7I,KAClBI,EAAQ8O,EAAM5F,QAAQ7B,GAC5ByH,EAAM9O,GAAOyG,OAASqI,EAAM9O,GAAOyG,OAAOoI,QAAO,SAAChG,GAAD,OAAOA,IAAM9M,KAE9DmY,EAAa,CAAEtU,KAAMkP,EAAOmF,YAAY,IAExCpW,IACGC,IAAI,4CAA6C,CAChDiB,OAAQsI,EAAKkB,IACbO,QAAS/M,EAAM0D,MAEhBrB,OAAM,SAACC,GACNC,QAAQD,MAAM,wCAAyCA,MAqGrB4X,CAAsB5O,EAAMtL,IACpDyL,WAAY,kBAlGH,SAACH,GACxB,IAAIyH,EAAQrG,EAAU7I,KACtBkP,EAAQA,EAAMD,QAAO,SAACqH,GAAD,OAAOA,IAAM7O,KAClC6M,EAAa,CAAEtU,KAAMkP,EAAOmF,YAAY,IAExCpW,IACGC,IAAI,uCAAwC,CAC3CiB,OAAQsI,EAAKkB,MAEdnK,OAAM,SAACC,GACNC,QAAQD,MAAM,sBAAuBA,MAwFT8X,CAAiB9O,KAd9BA,EAAKkB,YAoBlB,cAAC,EAAD,CAAY0G,gBAAiBmG,OAkDHgB,KACxB,cAACb,EAAA,EAAKE,OAAN,CAAazX,MAAO,EAApB,SA7CsB,WAC9B,IAAM0X,EAASvY,OAAOwY,SAASC,KAI/B,GAAyC,UAArCF,EAAOG,OAAOH,EAAO1Y,OAAS,KAAmBmT,EAAU8D,WAC7D,OACE,gCACE,cAAC/X,EAAA,EAAD,CAAQC,GAAG,KAAKH,UAAU,SAASM,QAAQ,uBAE3C,cAACkE,EAAA,EAAD,CAASzE,MAAO,CAAE0E,SAAU,OAAQC,UAAW,QAA/C,SACE,qBAAKyD,UAAU,gCAAf,SACGgM,EAAUvQ,KAAKe,KAAI,SAAC9D,GAAD,OAClB,cAAC,EAAD,CAEEA,SAAUA,EACV4L,UAAWA,EAAU7I,KACrBkK,eAAgB,kBAjHH,SAACjN,GAC5B,IAAIwZ,EAAmBlG,EAAUvQ,KACjCyW,EAAmBA,EAAiBxH,QAAO,SAAC8B,GAAD,OAAOA,IAAM9T,KACxDsX,EAAa,CAAEvU,KAAMyW,EAAkBpC,YAAY,IAEnDpW,IACGC,IAAI,uCAAwC,CAC3C8S,WAAY/T,EAAS0L,MAEtBnK,OAAM,SAACC,GACNC,QAAQD,MAAM,0BAA2BA,MAuGTiY,CAAqBzZ,KAHtCA,EAAS0L,YAStB,cAACnM,EAAA,EAAD,CACEL,MAAO,CAAEqH,SAAU,WAAYC,MAAO,IACtCX,UAAQ,EACRpG,QAAQ,kBACRC,QAASsY,IAEX,cAAC,EAAD,CACEpZ,OAAQ2Y,EACR/S,MAAOyT,EACPrM,UAAWA,EAAU7I,UAaG2W,QAE1B,eAAChB,EAAA,EAAKC,IAAN,WACE,cAACpZ,EAAA,EAAD,CACEsG,UAAQ,EACRpG,QAAQ,gBACRC,QAAS,kBAAMgY,GAAyB,MAE1C,cAAC,EAAD,CACE9Y,OAAQ6Y,EACRnE,UAAWA,EAAUvQ,KACrB6I,UAAWA,EAAU7I,KACrByB,MAAO,kBAAMkT,GAAyB,iB,SCtVvCiC,GAAiBC,0BAEjBC,GAAkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACfzX,mBAC9BmK,KAAKC,MAAMsN,aAAaC,QAAQ,qBAFa,mBACxCha,EADwC,KAC9Bia,EAD8B,OAIf5X,mBAC9BmK,KAAKC,MAAMsN,aAAaC,QAAQ,cALa,mBAIxCE,EAJwC,KAI9BC,EAJ8B,OAOG9X,mBAChDmK,KAAKC,MAAMsN,aAAaC,QAAQ,uBARa,mBAOxCI,EAPwC,KAOrBC,EAPqB,OAUXhY,mBAClCmK,KAAKC,MAAMsN,aAAaC,QAAQ,gBAXa,mBAUxCja,EAVwC,KAU5Bua,EAV4B,OAaCjY,mBAC9CmK,KAAKC,MAAMsN,aAAaC,QAAQ,sBAda,mBAaxCjY,EAbwC,KAatBD,EAbsB,OAgBHO,mBAC1C0X,aAAaC,QAAQ,mBAjBwB,mBAgBxChT,EAhBwC,KAgBxBC,EAhBwB,OAmBD5E,mBAC5CmK,KAAKC,MAAMsN,aAAaC,QAAQ,qBApBa,mBAmBxCpE,EAnBwC,KAmBvB2E,EAnBuB,OAwBblY,mBAAS0X,aAAaC,QAAQ,cAxBjB,mBAwBxCnZ,EAxBwC,KAwB7B4S,EAxB6B,KA6B/CjR,qBAAU,WAC6C,OAAjDgK,KAAKC,MAAMsN,aAAaC,QAAQ,cAClCQ,MAED,IAEH,IAAMA,EAAsB,WAC1BP,EAAY,MACZE,GAAY,GACZE,GAAqB,GACrBC,EAAc,GACdxY,EAAoB,IACpBmF,EAAkB,IAClBsT,EAAmB,IACnB9G,EAAa,KAsCf,OAnCAjR,qBAAU,WACRuX,aAAaU,QAAQ,kBAAmBjO,KAAKyI,UAAUjV,MACtD,CAACA,IAEJwC,qBAAU,WACRuX,aAAaU,QAAQ,WAAYjO,KAAKyI,UAAUiF,MAC/C,CAACA,IAEJ1X,qBAAU,WACRuX,aAAaU,QACX,oBACAjO,KAAKyI,UAAUmF,MAEhB,CAACA,IAEJ5X,qBAAU,WACRuX,aAAaU,QAAQ,aAAcjO,KAAKyI,UAAUlV,MACjD,CAACA,IAEJyC,qBAAU,WACRuX,aAAaU,QAAQ,mBAAoBjO,KAAKyI,UAAUlT,MACvD,CAACA,IAEJS,qBAAU,WACRuX,aAAaU,QAAQ,iBAAkBzT,KACtC,CAACA,IAEJxE,qBAAU,WACRuX,aAAaU,QAAQ,kBAAmBjO,KAAKyI,UAAUW,MACtD,CAACA,IAEJpT,qBAAU,WACRuX,aAAaU,QAAQ,YAAa5Z,KACjC,CAACA,IAGF,cAAC8Y,GAAee,SAAhB,CACErV,MAAO,CACLrF,WACAia,cACAC,WACAC,cACAC,oBACAC,uBACAta,aACAua,gBACAvY,mBACAD,sBACAkF,iBACAC,oBACA2O,kBACA2E,qBACA1Z,YACA4S,eACA+G,uBAlBJ,SAqBGV,KChGQa,GAXG,WAChB,OACE,gCACE,cAACtb,EAAA,EAAD,CAAQC,GAAG,KAAKG,QAAQ,eACxB,cAACkE,EAAA,EAAD,UACE,mBAAGzE,MAAO,CAAEyG,MAAO,OAAnB,qDCkLOiV,GAlLF,WAAO,IAAD,EACevY,mBAAS,IADxB,mBACVwR,EADU,KACAgH,EADA,OAEexY,mBAAS,MAFxB,mBAEVrC,EAFU,KAEAia,EAFA,OAGyB5X,oBAAS,GAHlC,mBAGVyY,EAHU,KAGKC,EAHL,OAIuC1Y,oBAAS,GAJhD,mBAIV2Y,EAJU,KAIYC,EAJZ,KAKXra,EAAiBsa,qBAAWvB,IAC5BwB,EAAeC,sBACfC,EAAgBD,sBAChBE,EAAaF,sBAEnB5Y,qBAAU,WACR+Y,MACC,IAEH,IAAMA,EAAuB,WAE3B,IAAMhO,EAAMjN,OAAOwY,SAASC,KAAKyC,WAC3BzH,EAAaxG,EAAIyL,OAAOzL,EAAIkO,YAAY,KAAO,GAGrDza,IACG0B,IAAI,2CAA4C,CAC/CC,OAAQ,CAAEC,IAAKmR,KAEhBlR,MAAK,SAACC,GACsB,cAAvBA,EAASC,KAAKsI,KAChB0P,GAAiB,GAEjBd,EAAYnX,EAASC,SAGxBxB,OAAM,SAACC,GACNC,QAAQD,MAAM,kCAAmCA,OAKjDka,EAAa,uCAAG,oCAAAxH,EAAA,6DAChByH,GAAiB,EACfC,EAAO,IAAI7a,KACX8a,EAAgBvb,OAAOc,WACvB0a,EAAiBxb,OAAOgB,YAExBya,EAAoB,CACxBlI,SAAUA,EAAS1L,OACnB6O,mBAAoB,CAClB,CACE7V,MAAO0a,EACPxa,OAAQya,EACRhb,KAAM8a,IAGV7H,WAAY/T,EAAS4C,IACrBoR,UAAW4H,GAhBO,SAmBd5a,IACHkR,KAAK,6CAA8C6J,GACnDlZ,MAAK,SAACC,GACLlC,EAAe6S,aAAa3Q,EAASC,KAAKH,KAC1C+Y,GAAiB,KAElBpa,OAAM,SAACC,GACNC,QAAQD,MAAM,wBAAyBA,MA1BvB,gCA6Bbma,GA7Ba,2CAAH,qDAgCbK,EAAmB,WACC,KAApBnI,EAAS1L,OAKUuT,MAGrB9a,EAAeqZ,YAAYja,GAC3Bmb,EAAa1I,QAAQC,SARrBuI,GAAwB,IAYtBgB,EAAsB,WAC1Bjb,IACG0B,IAAI,0CAA2C,CAC9CC,OAAQ,CAAEC,IAAKhC,EAAeC,aAE/BgC,MAAK,SAACC,GACL,IAAMoZ,EAAiBpZ,EAASC,KAE9BmZ,EAAe9b,YAAYD,SAAWH,EAASI,YAAYD,QAC3D+b,EAAe9b,YAAYiI,IAAI,GAAG8T,eAAe,WAEjDb,EAAW7I,QAAQC,QACVwJ,EAAe9b,YAAYD,OAAS,EAC7Ckb,EAAc5I,QAAQC,QAEtByI,EAAa1I,QAAQC,YAKvB0J,EAAuB,SAACjX,GAC5B8V,GAAwB,GACxBJ,EAAY1V,EAAMC,OAAOC,QAGrBgX,EAAgB,WACpB,GAAIrB,EACF,OACE,uBAAO9b,MAAO,CAAEE,QAAS,GAAI8X,MAAO,QAASvR,MAAO,OAApD,uCAyDN,OACE,gCACE,8BAnDEmV,EACK,cAAC,GAAD,IAE0B,KAA7Bla,EAAeC,UAEf,qBAAK3B,MAAO,CAAEC,UAAW,UAAzB,SACE,eAACsZ,EAAA,EAAD,CAAWzV,MAAI,EAAf,UACE,0CACA,cAACW,EAAA,EAAD,yFAIA,sBAAK2D,UAAU,UAAUpI,MAAO,CAAEod,eAAgB,UAAlD,UACE,cAACtW,EAAA,EAAD,CACEG,KAAK,OACLE,YAAY,yBACZC,SAAU8V,IAEZ,cAAC7c,EAAA,EAAD,CACEC,SAAO,EACPC,QAAQ,eACRC,QAASsc,IAGVK,YAOP,qBAAKnd,MAAO,CAAEC,UAAW,UAAzB,SACE,eAACsZ,EAAA,EAAD,CAAWzV,MAAI,EAAf,UACE,cAACW,EAAA,EAAD,kFAIA,cAACpE,EAAA,EAAD,CACEC,SAAO,EACPC,QAAQ,iBACRC,QAASuc,WAYnB,cAAC,KAAD,CAAMM,GAAG,aAAa1J,QAAM,EAACF,IAAKwI,IAClC,cAAC,KAAD,CAAMoB,GAAG,cAAc1J,QAAM,EAACF,IAAK0I,IACnC,cAAC,KAAD,CAAMkB,GAAG,OAAO1J,QAAM,EAACF,IAAK2I,QC7InBkB,GAnCG,SAAC,GAA6B,IAA3Bta,EAA0B,EAA1BA,OAAQua,EAAkB,EAAlBA,YAAkB,EACrBpa,mBAAS,IADY,mBACtCW,EADsC,KAChCsH,EADgC,OAEXjI,mBAAS,MAFE,mBAEtCqa,EAFsC,KAE3BC,EAF2B,KAI7Cna,qBAAU,WACRC,MACC,CAACP,IAEJ,IAAMO,EAAY,WAChBzB,IACG0B,IAAI,oCAAqC,CACxCC,OAAQ,CAAEC,IAAKV,KAEhBW,MAAK,SAACC,GACLwH,EAAQxH,EAASC,KAAKC,MAEtB,IAAM9D,EAAQ4D,EAASC,KAAK6G,OAAOkC,MAAK,SAACE,GAAD,OAAOA,EAAEpJ,MAAQ6Z,KACzDE,EAAa,CACXlT,WAAYvK,EAAMuK,WAClBC,SAAS,GAAD,OAAKxK,EAAMwK,SAAX,MACRf,WAAW,GAAD,OAAKzJ,EAAMyJ,WAAX,WAGbpH,OAAM,SAACC,GACNC,QAAQD,MAAM,oCAAqCA,OAIzD,OACE,cAACiX,EAAA,EAAD,CAAWzV,MAAI,EAAC9D,MAAOwd,EAAvB,SACG1Z,K,UCSQ4Z,GAtCe,SAAC,GAAsC,IAApChe,EAAmC,EAAnCA,OAAQwN,EAA2B,EAA3BA,aAAclK,EAAa,EAAbA,OAC/CtB,EAAiBsa,qBAAWvB,IAwBlC,OACE,eAAC5a,EAAA,EAAD,CAAOC,KAAK,OAAOC,KAAML,EAAQM,MAAO,CAAE0E,SAAU,OAAQxE,QAAS,IAArE,UACE,cAACL,EAAA,EAAMgJ,YAAP,CAAmBzI,GAAG,KAAKG,QAAS2M,IACpC,cAAC7M,EAAA,EAAD,CACEyI,QAAQ,QACRxI,SAAO,EACPC,QAAQ,QACRC,QA7BkB,WACtB,IAAMmB,EAAYD,EAAeC,UAC3BmT,EAAY,IAAIjT,KAEtBC,IACGC,IAAI,wCAAyC,CAC5CC,GAAIL,EACJqB,OAAQA,EACR8R,UAAWA,IAEZnR,MAAK,WAEJjC,EAAeyZ,sBAAqB,MAErC9Y,OAAM,SAACC,GACNC,QAAQD,MACN,qDACAA,aCVKqb,GAbK,SAAC,GAAwB,IAAtBje,EAAqB,EAArBA,OAAQke,EAAa,EAAbA,OAC7B,OACE,eAAC/d,EAAA,EAAD,CACEC,KAAK,OACLC,KAAML,EACNM,MAAO,CAAEC,UAAW,SAAUC,QAAS,IAHzC,UAKE,cAACL,EAAA,EAAMM,OAAP,CAAcC,GAAG,KAAjB,sCACA,cAACC,EAAA,EAAD,CAAQC,SAAO,EAACC,QAAQ,QAAQC,QAASod,Q,UC4MhCC,GA1MG,WAChB,IAAMnc,EAAiBsa,qBAAWvB,IAC5BqD,EAAgB5B,sBAFA,EAGkB/Y,mBAAS,IAH3B,mBAGf+J,EAHe,KAGD8C,EAHC,OAIgB7M,mBACpCzB,EAAeZ,SAASC,UAAUC,MAAMU,EAAeb,aALnC,mBAIfkd,EAJe,KAIFC,EAJE,OAOsB7a,oBAAS,GAP/B,mBAOf8a,EAPe,KAOCC,EAPD,KAStB5a,qBAAU,WACR0M,EAAgBtO,EAAeZ,SAASC,UAAUmM,cAClDiR,IACA/c,OAAOgd,SAAWC,qBAChB,SAAC5c,GAAD,OAAOD,EAAqBC,EAAGC,KAC/B,OAED,IAEH4B,qBAAU,WACR0a,EACEtc,EAAeZ,SAASC,UAAUC,MAAMU,EAAeb,eAExD,CAACa,EAAeb,aAEnB,IAAMsd,EAA2B,WAC/Brc,IACG0B,IAAI,0CAA2C,CAC9CC,OAAQ,CAAEC,IAAKhC,EAAeC,aAE/BgC,MAAK,SAACC,GACL,IAAMoZ,EAAiBpZ,EAASC,KAGhC,GAAImZ,EAAeC,eAAe,cAAe,CAC/C,IAAMnZ,EAAOkZ,EAAe/L,WAAWrE,MACrC,SAACgI,GAAD,OAAOA,EAAE5R,SAAW+a,EAAY/a,UAEd,qBAATc,GACToa,EAAkBpa,EAAKmZ,eAAe,iBAM1CqB,EAAgB,SAACtb,GACrB,IAAMrB,EAAYD,EAAeC,UAC3BmT,EAAY,IAAIjT,KAEtBC,IACGC,IAAI,wCAAyC,CAC5CC,GAAIL,EACJqB,OAAQA,EACR8R,UAAWA,IAEZzS,OAAM,SAACC,GACNC,QAAQD,MACN,sDACAA,OAKFic,EAAiB,uCAAG,gCAAAvJ,EAAA,6DACpBwJ,GAAiB,EACf7c,EAAYD,EAAeC,UAC3BkU,EAAU,IAAIhU,KAGpBC,IACGC,IAAI,+CAAgD,CACnDC,GAAIL,EACJqB,OAAQ+a,EAAY/a,OACpB6S,QAASA,IAEVlS,MAAK,WACJ6a,GAAiB,KAElBnc,OAAM,SAACC,GACNC,QAAQD,MACN,mEACAA,MAlBkB,kBAsBjBkc,GAtBiB,2CAAH,qDAyBjBC,EAAgB,uCAAG,8BAAAzJ,EAAA,sDAEjBwJ,EAAiBD,IAEjB1d,EAAaa,EAAeb,WAE9B2d,IACE9d,EAAW,QAASgB,IACtBA,EAAe0Z,cAAc,GAC7B1Z,EAAeyZ,sBAAqB,GACpC2C,EAAcvK,QAAQC,UAGtB8K,EACE5c,EAAeZ,SAASC,UAAUC,MAAMH,EAAa,GAAGmC,QAE1DtB,EAAe0Z,cAAcva,EAAa,GAC1CM,MAjBmB,2CAAH,qDAuBhBud,EAAqB,uCAAG,WAAO1D,GAAP,mBAAAhG,EAAA,sDACtBrT,EAAYD,EAAeC,UAC3Bgd,EAAc,IAAI9c,KAClB+c,EAAS5D,EAAW,QAAU,SAGpClZ,IACGC,IAAI,qDAAsD,CACzDC,GAAIL,EACJqB,OAAQ+a,EAAY/a,OACpB4b,OAAQA,EACRhd,KAAM+c,IAEPtc,OAAM,SAACC,GACNC,QAAQD,MACN,0DACAA,MAhBsB,2CAAH,sDA6E3B,OACE,gCA7CE,qBACEtC,MAAO,CACLsB,IAAK,EACLud,KAAM,EACN5c,MAAO,OACPoF,SAAU,SALd,SAQE,eAACyX,GAAA,EAAD,CAAMC,UAAQ,EAAC7X,OAAK,EAAClH,MAAO,CAAEC,UAAW,UAAzC,UACE,cAAC6e,GAAA,EAAKlW,KAAN,UACE,cAACvI,EAAA,EAAD,CACEC,SAAO,EACP4G,OAAK,EACLoB,SAAU2V,EACV1d,QAAQ,OACRC,QAASie,MAGb,cAAC,KAAD,CAAMpB,GAAG,cAAc1J,QAAM,EAACF,IAAKqK,IACnC,cAACgB,GAAA,EAAKlW,KAAN,UACE,cAACvI,EAAA,EAAD,CACE2e,UAAQ,EACR9X,OAAK,EACLoB,SAAU2V,EACV1d,QAAQ,QACRC,QAAS,kBApCnBke,GAAsB,QACtBhd,EAAeuZ,aAAY,aA2CJ,WACvB,GAAIvZ,EAAewZ,kBACjB,OACE,cAAC,GAAD,CACElY,OAAQ+a,EAAY/a,OACpBua,YAAaQ,EAAYhR,UAS5BkS,GAED,cAAC,GAAD,CACEvf,QAA6C,IAArCgC,EAAewZ,kBACvBhO,aAAcA,EACdlK,OAAQ+a,EAAY/a,SAEtB,cAAC,GAAD,CAAatD,OAAQgC,EAAesZ,SAAU4C,OA7D5B,WACpBc,GAAsB,GACtBhd,EAAeuZ,aAAY,UC1IhBiE,GAViB,WAC9B,OACE,qBAAKlf,MAAO,CAAEC,UAAW,UAAzB,SACE,cAACsZ,EAAA,EAAD,CAAWzV,MAAI,EAAf,SACE,kECsBOqb,GAvBU,WACvB,IAAMzd,EAAiBsa,qBAAWvB,IADL,EAEqBtX,mBAAS,MAF9B,mBAEtBic,EAFsB,KAEHC,EAFG,KAI7B/b,qBAAU,WACR+b,EAC+B,OAA7B3d,EAAeC,WAAmD,KAA7BD,EAAeC,aAErD,CAACD,EAAeC,YAYnB,OAT4B,IAAtByd,EACK,cAAC,GAAD,KACwB,IAAtBA,EACF,cAAC,GAAD,IAEA,yBCWEE,GA5BC,WACd,IAAM5d,EAAiBsa,qBAAWvB,IADd,EAE4BtX,oBAAS,GAFrC,mBAEboc,EAFa,KAEKC,EAFL,KAIpBlc,qBAAU,WACHic,IACHE,IACA/d,EAAe4Z,qBAAoB,GACnCkE,GAAoB,MAErB,CAAC9d,IAEJ,IAAM+d,EAAwB,WAC5B5E,aAAa6E,WAAW,YACxB7E,aAAa6E,WAAW,yBAG1B,OACE,qBAAK1f,MAAO,CAAEC,UAAW,UAAzB,SACE,cAACwE,EAAA,EAAD,UACE,cAAC8U,EAAA,EAAD,CAAWzV,MAAI,EAAf,SACE,cAAC3D,EAAA,EAAD,CAAQC,GAAG,KAAKG,QAAQ,0CCrB5Bof,GAA8B,qBAAXve,OAEZwe,GAAoB,WAC/B,OAAQD,GAA6B,CAAEE,EAAGze,OAAO0e,QAASC,EAAG3e,OAAO4e,SAAhD,CAAEH,EAAG,EAAGE,EAAG,IA6BlBE,GA1BW,SAACC,EAAQC,GACjC,IAAIC,EAAkB,KAEhBC,EAAW,WACf,IAAMC,EAAUV,KAChBM,EAAOI,GACPF,EAAkB,MAGpBG,2BAAgB,WACd,IAAMC,EAAe,WACfL,EACsB,OAApBC,GACFK,WAAWJ,EAAUF,GAGvBE,KAMJ,OAFAjf,OAAOsf,iBAAiB,SAAUF,GAE3B,kBAAMpf,OAAOuf,oBAAoB,SAAUH,QCmEvCI,GAxFI,SAAC,GAKb,IAJL5d,EAII,EAJJA,OACAua,EAGI,EAHJA,YACAsD,EAEI,EAFJA,oBACA3d,EACI,EADJA,aAEMxB,EAAiBsa,qBAAWvB,IAD9B,EAEsBtX,mBAAS,IAF/B,mBAEGC,EAFH,KAEUC,EAFV,OAG8BF,mBAAS,MAHvC,mBAGGqa,EAHH,KAGcC,EAHd,KAKJna,qBAAU,WACRC,MACC,CAACP,IAEJ,IAAMO,EAAY,WAChBzB,IACG0B,IAAI,oCAAqC,CACxCC,OAAQ,CAAEC,IAAKV,KAEhBW,MAAK,SAACC,GACLP,EAASO,EAASC,KAAKC,KAAKC,MAAMtD,IAElC,IAAMT,EAAQ4D,EAASC,KAAK6G,OAAOkC,MAAK,SAACE,GAAD,OAAOA,EAAEpJ,MAAQ6Z,KACzDE,EAAa,CACXlT,WAAYvK,EAAMuK,WAClBC,SAAS,GAAD,OAAKxK,EAAMwK,SAAX,MACRf,WAAW,GAAD,OAAKzJ,EAAMyJ,WAAX,QAGZ/H,EAAeqG,kBAAkBnE,EAASC,KAAKiE,gBAC/CpG,EAAe2Z,mBACbzX,EAASC,KAAK4D,UAAU7C,KAAI,SAACgJ,GAC3B,OAAOA,EAAE3K,oBAIdZ,OAAM,SAACC,GACNC,QAAQD,MAAM,qCAAsCA,OAM1DgB,qBAAU,WACR,IAAMwd,EAAaC,aAAY,WAC7B,IAAMC,EAAkBtf,EAAemB,iBACnCme,EAAgB/f,OAAS,IAC3BS,EAAekB,oBAAoB,IACnCd,IACGkR,KAAK,+CAAgDgO,GACrD3e,OAAM,SAACC,GACNC,QAAQD,MAAM,+BAAgCA,SAGnD,KACH,OAAO,kBAAM2e,cAAcH,MAC1B,CAACpf,EAAemB,mBASnBod,IAP0B,SAACK,IACO,IAA5B5e,EAAesZ,UACjBxY,EAAkCd,EAAgBwf,SAASZ,EAAQP,MAKlC,IAQrC,OACE,cAACxG,EAAA,EAAD,CACEzV,MAAI,EACJsE,UAAWyY,EAAsB,cAAgB,GACjD7gB,MAAOwd,EAHT,SAKGpa,EAAMwB,KAAI,SAACC,EAAMZ,GAAP,OACT,sBAAsBzD,QAAS,kBAbb,SAACyD,GACnB4c,GACF3d,EAAae,GAAO,GAWmBkd,CAAgBld,IAArD,SACGY,EAAO,KADCK,qBCoGJkc,GA1LgB,SAAC,GAA6B,IAA3B1hB,EAA0B,EAA1BA,OAAQoE,EAAkB,EAAlBA,KAAMwB,EAAY,EAAZA,MACxC5D,EAAiBsa,qBAAWvB,IADwB,EAEpBtX,mBAAS,mBAFW,mBAEnDmT,EAFmD,KAEtC+K,EAFsC,OAG1Ble,mBAAS,qBAHiB,mBAGnDqT,EAHmD,KAGzC8K,EAHyC,KAsCpDC,EAAY,WAChBF,EAAe,mBACfC,EAAY,sBA+Hd,OACE,eAACzhB,EAAA,EAAD,CACEC,KAAK,OACLC,KAAML,EACNM,MAAO,CAAEC,UAAW,SAAUyE,SAAU,OAAQxE,QAAS,IAH3D,UAKE,cAACL,EAAA,EAAMgJ,YAAP,CAAmBzI,GAAG,KAAKG,QAASuD,EAAKoJ,aAAaG,OAlIvB,WACjC,IAA6D,IAAzDC,KAAKC,MAAMzJ,EAAKoJ,aAAaM,wBAC/B,OACE,sBAAKpF,UAAU,UAAUpI,MAAO,CAAEC,UAAW,UAA7C,UACE,0EACA,sBAAKmI,UAAU,gBAAf,UACE,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,uBACEnB,KAAK,QACLsB,QAAyB,oBAAhB+N,EACTlP,SAAU,SAAC3F,GAAD,OAAO4f,EAAe,sBAElC,yDAGJ,qBAAKjZ,UAAU,QAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,uBACEnB,KAAK,QACLsB,QAAyB,eAAhB+N,EACTlP,SAAU,SAAC3F,GAAD,OAAO4f,EAAe,iBAElC,oDAGJ,qBAAKjZ,UAAU,QAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,uBACEnB,KAAK,QACLsB,QAAyB,YAAhB+N,EACTlP,SAAU,SAAC3F,GAAD,OAAO4f,EAAe,cAElC,iDAGJ,qBAAKjZ,UAAU,QAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,uBACEnB,KAAK,QACLsB,QAAyB,aAAhB+N,EACTlP,SAAU,SAAC3F,GAAD,OAAO4f,EAAe,eAElC,kDAGJ,qBAAKjZ,UAAU,QAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,uBACEnB,KAAK,QACLsB,QAAyB,kBAAhB+N,EACTlP,SAAU,SAAC3F,GAAD,OAAO4f,EAAe,oBAElC,6DA8ETG,GArE2B,WAC9B,IAA0D,IAAtDlU,KAAKC,MAAMzJ,EAAKoJ,aAAaO,qBAC/B,OACE,sBAAKrF,UAAU,UAAf,UACE,4EACA,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,uBACEnB,KAAK,QACLsB,QAAsB,sBAAbiO,EACTpP,SAAU,SAAC3F,GAAD,OAAO6f,EAAY,wBAE/B,2DAGJ,qBAAKlZ,UAAU,QAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,uBACEnB,KAAK,QACLsB,QAAsB,iBAAbiO,EACTpP,SAAU,SAAC3F,GAAD,OAAO6f,EAAY,mBAE/B,sDAGJ,qBAAKlZ,UAAU,QAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,uBACEnB,KAAK,QACLsB,QAAsB,YAAbiO,EACTpP,SAAU,SAAC3F,GAAD,OAAO6f,EAAY,cAE/B,iDAGJ,qBAAKlZ,UAAU,QAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,uBACEnB,KAAK,QACLsB,QAAsB,eAAbiO,EACTpP,SAAU,SAAC3F,GAAD,OAAO6f,EAAY,iBAE/B,oDAGJ,qBAAKlZ,UAAU,QAAf,SACE,sBAAKA,UAAU,oBAAf,UACE,uBACEnB,KAAK,QACLsB,QAAsB,oBAAbiO,EACTpP,SAAU,SAAC3F,GAAD,OAAO6f,EAAY,sBAE/B,+DAiBTG,GACD,cAACphB,EAAA,EAAD,CACEyI,QAAQ,QACRxI,SAAO,EACPC,QAAQ,QACRC,QA/KkB,WACtB,IAAMmB,EAAYD,EAAeC,UAC3BmT,EAAY,IAAIjT,KAEhB6f,EAAU,CACd1f,GAAIL,EACJqB,OAAQc,EAAKd,OACb8R,UAAWA,IAGgD,IAAzDxH,KAAKC,MAAMzJ,EAAKoJ,aAAaM,0BAC/BkU,EAAQpL,YAAcA,IAGkC,IAAtDhJ,KAAKC,MAAMzJ,EAAKoJ,aAAaO,uBAC/BiU,EAAQlL,SAAWA,GAGrB1U,IACGC,IAAI,yCAA0C2f,GAC9C/d,MAAK,WAEJ4d,IACAjc,OAEDjD,OAAM,SAACC,GACNC,QAAQD,MACN,oEACAA,a,oBCkDKqf,GApFe,SAAC,GAMxB,IALL5D,EAKI,EALJA,YACA6D,EAII,EAJJA,eACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,aACA/K,EACI,EADJA,KACI,EAC4B5T,mBAAS,IADrC,mBACGoC,EADH,KACaC,EADb,OAEwBrC,mBAAS,IAFjC,mBAEG2T,EAFH,KAEWiL,EAFX,KAIJze,qBAAU,WACR,IAAMN,EAAS+a,EAAY/a,OACrB2K,EAAaoQ,EAAYrQ,YAAYkU,GAE3C9f,IACG0B,IAAI,oCAAqC,CACxCC,OAAQ,CAAEC,IAAKV,KAEhBW,MAAK,SAACC,GACL,IAAMoe,EAAcpe,EAASC,KAAK4D,UAAUmF,MAC1C,SAACgB,GAAD,OAAOA,EAAElK,MAAQiK,KAEQ,qBAAhBqU,GACTxc,EAAYwc,EAAYzc,aAG3BlD,OAAM,SAACC,GACNC,QAAQD,MAAM,qCAAsCA,QAEvD,CAACyb,EAAa6D,IAgBjB,OACE,cAACK,GAAA,EAAD,CAAM/a,OAAK,EAAX,SACE,eAAC+a,GAAA,EAAK7V,QAAN,WACE,cAAC6V,GAAA,EAAK9hB,OAAN,CAAaI,QAAQ,cACrB,cAAC0hB,GAAA,EAAKpZ,YAAN,CAAkBtI,QAASgF,IAC3B,cAAC4C,EAAA,EAAD,CAAMnI,MAAO,CAAEoN,UAAW,GAAIrG,aAAc,IAA5C,SACE,cAACoB,EAAA,EAAKE,MAAN,UACE,cAAC6Z,GAAA,EAAD,CACE/a,YAAY,2BACZhB,MAAO2Q,EACP1P,SAxBe,SAACnB,GAC1B8b,EAAU9b,EAAMC,OAAOC,cA2BnB,eAACqT,EAAA,EAAD,WACE,cAACA,EAAA,EAAKE,OAAN,CAAazX,MAAM,IAAnB,SACE,cAAC5B,EAAA,EAAD,CACE6G,OAAK,EACL5G,SAAO,EACPgI,SAAUuZ,GAAsB,KAAX/K,EACrBvW,QAAQ,SACRC,QA/BS,WACnBshB,EAAahL,GAAQ,GACrBiL,EAAU,SAgCJ,cAACvI,EAAA,EAAKE,OAAN,CAAazX,MAAM,IAAnB,SACE,cAAC5B,EAAA,EAAD,CACE6G,OAAK,EACL8X,UAAQ,EACR1W,SAAUuZ,EACVthB,QAAQ,OACRC,QAnCO,WACjBuW,IACAgL,EAAU,kB,oBC2BCI,GArEO,SAAC,GAOhB,IANLpE,EAMI,EANJA,YACA6D,EAKI,EALJA,eACAC,EAII,EAJJA,QACAO,EAGI,EAHJA,gBACAC,EAEI,EAFJA,aACAtL,EACI,EADJA,KACI,EAC4B5T,mBAAS,IADrC,mBACGoC,EADH,KACaC,EADb,KAwBJ,OArBAlC,qBAAU,WACR,IAAMN,EAAS+a,EAAY/a,OACrB2K,EAAaoQ,EAAYrQ,YAAYkU,GAE3C9f,IACG0B,IAAI,oCAAqC,CACxCC,OAAQ,CAAEC,IAAKV,KAEhBW,MAAK,SAACC,GACL,IAAMoe,EAAcpe,EAASC,KAAK4D,UAAUmF,MAC1C,SAACgB,GAAD,OAAOA,EAAElK,MAAQiK,KAEQ,qBAAhBqU,GACTxc,EAAYwc,EAAYzc,aAG3BlD,OAAM,SAACC,GACNC,QAAQD,MAAM,qCAAsCA,QAEvD,CAACyb,EAAa6D,IAGf,cAACK,GAAA,EAAD,CAAM/a,OAAK,EAAX,SACE,eAAC+a,GAAA,EAAK7V,QAAN,WACE,cAAC6V,GAAA,EAAK9hB,OAAN,CAAaI,QAAQ,cACrB,cAAC0hB,GAAA,EAAKpZ,YAAN,CAAkB7I,MAAO,CAAE+G,aAAc,IAAMxG,QAASgF,IACxD,eAACiU,EAAA,EAAD,WACE,cAACA,EAAA,EAAKE,OAAN,CAAazX,MAAM,IAAnB,SACE,cAAC5B,EAAA,EAAD,CACE6G,OAAK,EACL8F,OAAQoV,EACRzb,UAAQ,EACR2B,SAAUuZ,EACVthB,QAAQ,SACRC,QAAS6hB,MAGb,cAAC7I,EAAA,EAAKE,OAAN,CAAazX,MAAM,IAAnB,SACE,cAAC5B,EAAA,EAAD,CACE6G,OAAK,EACL8X,UAAQ,EACR1W,SAAUuZ,EACVthB,QAAQ,OACRC,QAASuW,SAIf,cAACuL,GAAA,EAAD,CAAYC,QAASH,EAAiBI,UAAU,OAAOC,SAAU,IAAjE,SACE,cAACC,GAAA,EAAD,CACEC,MAAI,EACJhP,QAASyO,EACT7hB,QAAQ,6DC7CLqiB,GAlBmB,SAAC,GAA8B,IAA5BljB,EAA2B,EAA3BA,OAAQqX,EAAmB,EAAnBA,KAAM8L,EAAa,EAAbA,OACjD,OACE,eAAChjB,EAAA,EAAD,CACEC,KAAK,OACLC,KAAML,EACNM,MAAO,CAAEC,UAAW,SAAUC,QAAS,IAHzC,UAKE,eAACL,EAAA,EAAMM,OAAP,CAAcC,GAAG,KAAjB,yDAEE,uBAFF,oDAKA,cAACC,EAAA,EAAD,CAAQC,SAAO,EAACC,QAAQ,MAAMC,QAASuW,IACvC,cAAC1W,EAAA,EAAD,CAAQE,QAAQ,KAAKC,QAASqiB,QCKrBC,GAlBW,SAAC,GAAuB,IAArBpjB,EAAoB,EAApBA,OAAQ4F,EAAY,EAAZA,MACnC,OACE,eAACzF,EAAA,EAAD,CACEC,KAAK,OACLC,KAAML,EACNM,MAAO,CAAEC,UAAW,SAAUC,QAAS,IAHzC,UAKE,eAACL,EAAA,EAAMM,OAAP,CAAcC,GAAG,KAAjB,mEAEE,uBAFF,oEAMA,cAACC,EAAA,EAAD,CAAQC,SAAO,EAACC,QAAQ,KAAKC,QAAS8E,QC6B7Byd,GA1Cc,SAAC,GAKvB,IAJLrjB,EAII,EAJJA,OACAsjB,EAGI,EAHJA,UACAC,EAEI,EAFJA,SACAC,EACI,EADJA,gBAEMC,EAAUH,EAAY,kBAAoB,2BAuBhD,OACE,eAACnjB,EAAA,EAAD,CACEC,KAAK,OACLC,KAAML,EACNM,MAAO,CAAEC,UAAW,SAAUC,QAAS,IAHzC,UAKE,cAACL,EAAA,EAAMM,OAAP,CAAcC,GAAG,KAAjB,SAAuB+iB,IA3BrBH,EACK,cAAC3iB,EAAA,EAAD,CAAQyI,QAAQ,QAAQvI,QAAQ,KAAKC,QAAS0iB,IAGnD,gCACE,cAAC7iB,EAAA,EAAD,CACEyI,QAAQ,QACRxI,SAAO,EACPC,QAAQ,YACRC,QAASyiB,IAEX,cAAC5iB,EAAA,EAAD,CACEyI,QAAQ,QACRvI,QAAQ,mBACRC,QAAS0iB,WC+UNE,GAjVI,WACjB,IAAM1hB,EAAiBsa,qBAAWvB,IAC5B2B,EAAaF,sBAFI,EAGe/Y,mBACpCzB,EAAeZ,SAASI,YAAYQ,EAAeb,aAJ9B,mBAGhBkd,EAHgB,KAGHC,EAHG,OAMiC7a,mBACtDmK,KAAKC,MAAMsN,aAAaC,QAAQ,0BAPX,mBAMhBuI,EANgB,KAMMC,EANN,OAS+BngB,oBAAS,GATxC,mBAShB0d,EATgB,KASK0C,EATL,OAUiCpgB,mBAAS,CAC/DqgB,SAAS,EACTR,WAAW,IAZU,mBAUhBS,EAVgB,KAUMC,EAVN,OAerBvgB,oBAAS,GAfY,mBAchBwgB,EAdgB,KAcWC,EAdX,OAiBrBzgB,oBAAS,GAjBY,mBAgBhB0gB,EAhBgB,KAgBWC,EAhBX,OAkBqB3gB,oBAAS,GAlB9B,mBAkBhB8a,EAlBgB,KAkBAC,EAlBA,KAoBvB5a,qBAAU,WAC6C,OAAjDuX,aAAaC,QAAQ,yBACvBwI,EAAwB,GAE1BnF,IACA/c,OAAOgd,SAAWC,qBAChB,SAAC5c,GAAD,OAAOD,EAAqBC,EAAGC,KAC/B,OAED,IAEH4B,qBAAU,WACRuX,aAAaU,QACX,uBACAjO,KAAKyI,UAAUsN,MAEhB,CAACA,IAEJ/f,qBAAU,WACR0a,EACEtc,EAAeZ,SAASI,YAAYQ,EAAeb,eAEpD,CAACa,EAAeb,aAEnB,IAAMsd,EAA2B,WAC/Brc,IACG0B,IAAI,0CAA2C,CAC9CC,OAAQ,CAAEC,IAAKhC,EAAeC,aAE/BgC,MAAK,SAACC,GACL,IAAMoZ,EAAiBpZ,EAASC,KAGhC,GAAImZ,EAAeC,eAAe,eAAgB,CAChD,IAAMnZ,EAAOkZ,EAAe9b,YAAY0L,MACtC,SAACgI,GAAD,OAAOA,EAAE5R,SAAW+a,EAAY/a,UAEd,qBAATc,GACToa,EAAkBpa,EAAKmZ,eAAe,iBAM1CsB,EAAiB,uCAAG,8BAAAvJ,EAAA,6DAClBrT,EAAYD,EAAeC,UAC3BkU,EAAU,IAAIhU,KAGpBC,IACGC,IAAI,gDAAiD,CACpDC,GAAIL,EACJqB,OAAQ+a,EAAY/a,OACpB6S,QAASA,IAEVxT,OAAM,SAACC,GACNC,QAAQD,MACN,yEACAA,MAdkB,kBAkBjBuT,GAlBiB,2CAAH,qDAqBjBkO,EAAoB,uCAAG,WAAOlO,GAAP,eAAAb,EAAA,sDACrBrT,EAAYD,EAAeC,UAGjCG,IACGC,IAAI,mCAAoC,CACvCC,GAAIL,EACJC,KAAMiU,IAEPxT,OAAM,SAACC,GACNC,QAAQD,MAAM,yCAA0CA,MAVjC,2CAAH,sDAcpBmc,EAAgB,uCAAG,8BAAAzJ,EAAA,2DACnBqO,EAAuBtF,EAAYrQ,YAAYzM,QAD5B,gBAErB6iB,GAA6B,GAFR,uCAKCvF,IALD,UAKf1I,EALe,OAOfhV,EAAaa,EAAeb,YAG9BH,EAAW,SAAUgB,GAVJ,kCAWbqiB,EAAqBlO,GAXR,QAYnBuG,EAAW7I,QAAQC,QAZA,wBAenB8P,EAAwB,GACxB5hB,EAAe0Z,cAAcva,EAAa,GAC1CM,IACAO,EAAeyZ,sBAAqB,GAlBjB,4CAAH,qDAyBhB6I,EAAsB,uCAAG,WAAOhJ,GAAP,mBAAAhG,EAAA,sDACvBrT,EAAYD,EAAeC,UAC3Bgd,EAAc,IAAI9c,KAClB+c,EAAS5D,EAAW,QAAU,SAGpClZ,IACGC,IAAI,sDAAuD,CAC1DC,GAAIL,EACJqB,OAAQ+a,EAAY/a,OACpB4b,OAAQA,EACRhd,KAAM+c,IAEPtc,OAAM,SAACC,GACNC,QAAQD,MACN,2DACAA,MAhBuB,2CAAH,sDA+BtB2hB,EAAuB,SAACnN,EAAQC,GACpC,IAAMmN,EAAqD,WAAlCxiB,EAAeoG,eAClCnG,EAAYD,EAAeC,UAC3Bgd,EAAc,IAAI9c,KAClBY,EAAOye,SAAStB,KAAoBG,GAE1Cje,IACGC,IAAI,2DAA4D,CAC/DJ,UAAWA,EACXqB,OAAQ+a,EAAY/a,OACpB8T,OAAQA,EACRC,KAAMA,EACNtU,KAAMA,EACNb,KAAM+c,IAEPhb,MAAK,WACJ,GAAIugB,EAAkB,CACpB,IAAIlB,GAAY,EAEdthB,EAAegV,gBAAgB2M,GAAsBhf,YACnDyS,GACFA,GACEpV,EAAegV,gBAAgB2M,GAAsB/e,WAEvDgf,EAAwBD,EAAuB,GAC/CL,GAAY,GAGVjM,EACFuM,EAAwBD,EAAuB,GAE/CK,EAAwB,CAAEF,SAAS,EAAMR,UAAWA,SAGtDM,EAAwBD,EAAuB,MAGlDhhB,OAAM,SAACC,GACNC,QAAQD,MACN,oEACAA,OAqGR,OACE,gCAjFE,qBACEtC,MAAO,CACLsB,IAAK,EACLud,KAAM,EACN5c,MAAO,OACPoF,SAAU,SALd,SAQE,eAACyX,GAAA,EAAD,CAAMC,UAAQ,EAAC7X,OAAK,EAAClH,MAAO,CAAEC,UAAW,UAAzC,UACE,cAAC6e,GAAA,EAAKlW,KAAN,UACE,cAACvI,EAAA,EAAD,CACEC,SAAO,EACP4G,OAAK,EACLoB,SAAU2V,EACV1d,QAAQ,OACRC,QAASie,MAGb,cAAC,KAAD,CAAMpB,GAAG,OAAO1J,QAAM,EAACF,IAAK2I,IAC5B,cAAC0C,GAAA,EAAKlW,KAAN,UACE,cAACvI,EAAA,EAAD,CACE2e,UAAQ,EACR9X,OAAK,EACLoB,SAAU2V,EACV1d,QAAQ,QACRC,QAAS,kBA/FnBwjB,GAAuB,QACvBtiB,EAAeuZ,aAAY,aAsGH,WACxB,GAAIvZ,EAAewZ,kBACjB,OACE,cAAC,GAAD,CACElY,OAAQ+a,EAAY/a,OACpBua,YAAaQ,EAAYhR,QACzB8T,oBAAqBA,EACrB3d,aAAc+gB,IA4CjBE,GAtCoB,WACvB,GAAId,EAAuBtF,EAAYrQ,YAAYzM,OACjD,OACE,qBACEjB,MAAO,CACLsB,IAAK,MACLgG,MAAO,MACPrF,MAAO,OACPoF,SAAU,SALd,SAQqC,kBAAlC3F,EAAeoG,eACd,cAAC,GAAD,CACEiW,YAAaA,EACb6D,eAAgByB,EAChBxB,QAAS5D,EACT6D,aAAcmC,EACdlN,KAAM,kBAAM6M,GAA6B,MAG3C,cAAC,GAAD,CACE7F,YAAaA,EACb6D,eAAgByB,EAChBxB,QAAS5D,EACTmE,gBAAiBvB,EACjBwB,aAAc,kBAAMkB,GAAwB1C,IAC5C9J,KAAM,kBAAM6M,GAA6B,QAchDQ,GAED,cAAC,GAAD,CACE1kB,OAAQ+jB,EAAqBD,QAC7BR,UAAWS,EAAqBT,UAChCC,SAAU,kBACRS,EAAwB,CAAEF,SAAS,EAAOR,WAAW,KAEvDE,gBAAiB,WACfQ,EAAwB,CAAEF,SAAS,EAAOR,WAAW,IACrDO,GAAuB,MAI3B,cAAC,GAAD,CACE7jB,OAAQikB,EACR5M,KAtHe,WACnBkN,EAAqB,IAAI,GACzBV,GAAuB,GACvBK,GAA6B,IAoHzBf,OAAQ,kBAAMe,GAA6B,MAG7C,cAAC,GAAD,CACElkB,OAAQmkB,EACRve,MAAO,kBAAMwe,GAA6B,MAG5C,cAAC,GAAD,CACEpkB,QAA6C,IAArCgC,EAAewZ,kBACvBpX,KAAMia,EACNzY,MA5HoC,WACxC5D,EAAeyZ,sBAAqB,GACpC3Y,EACEd,EACAwf,SAAStB,KAAoBG,OA0H7B,cAAC,GAAD,CAAargB,OAAQgC,EAAesZ,SAAU4C,OAtL5B,WACpBoG,GAAuB,GACvBtiB,EAAeuZ,aAAY,UClJhBoJ,GAvBW,WACxB,IAAM3iB,EAAiBsa,qBAAWvB,IADJ,EAEoBtX,mBAAS,MAF7B,mBAEvBic,EAFuB,KAEJC,EAFI,KAI9B/b,qBAAU,WACR+b,EAC+B,OAA7B3d,EAAeC,WAAmD,KAA7BD,EAAeC,aAErD,CAACD,EAAeC,YAYnB,OAT4B,IAAtByd,EACK,cAAC,GAAD,KACwB,IAAtBA,EACF,cAAC,GAAD,IAEA,yBCEEkF,GAdH,WACV,OACE,gCACE,cAAC,IAAD,CAAOC,KAAI,cAAiBC,UAAWvM,KACvC,eAAC,GAAD,WACE,cAAC,IAAD,CAAOsM,KAAI,QAAWC,UAAW9I,KACjC,cAAC,IAAD,CAAO6I,KAAI,aAAgBC,UAAWrF,KACtC,cAAC,IAAD,CAAOoF,KAAI,cAAiBC,UAAWH,KACvC,cAAC,IAAD,CAAOE,KAAI,OAAUC,UAAWlF,Y,OCVxCmF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,KAAD,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.fa3b5056.chunk.js","sourcesContent":["import { Modal, Button } from \"semantic-ui-react\";\n\nconst DeleteTextModal = ({ isOpen, answerYes, answerNo }) => {\n  return (\n    <Modal\n      size=\"tiny\"\n      open={isOpen}\n      style={{ textAlign: \"center\", padding: 10 }}\n    >\n      <Modal.Header as=\"h4\">\n        Are you sure you want to delete this text?\n        <br />\n      </Modal.Header>\n      <Button primary content=\"Yes\" onClick={answerYes} />\n      <Button content=\"No\" onClick={answerNo} />\n    </Modal>\n  );\n};\n\nexport default DeleteTextModal;\n","/** Variables and Functions that are used in multiple components in the app */\nimport axios from \"axios\";\n\nexport const wordSeparators = /[\\s\\r\\n,]+/;\n\n/** Functions */\n\n// Check if this is the last text.\n// Used in SpeedTest and ScrollTest.\nexport const isLastText = (testType, context) => {\n  if (testType === \"speed\") {\n    return context.fileNumber === context.template.speedTest.texts.length - 1;\n  }\n  if (testType === \"scroll\") {\n    return context.fileNumber === context.template.scrollTexts.length - 1;\n  }\n};\n\n// Scroll to the top of the page.\n// Used in SpeedTest and ScrollTest for when the next text is loaded.\nexport const scrollToTop = () => {\n  window.scrollTo({\n    top: 0,\n    behavior: \"smooth\",\n  });\n};\n\n// Adds the latest viewport width and height to ReadingSession.viewportDimensions array.\nexport const recordViewportResize = (e, sessionContext) => {\n  const sessionID = sessionContext.sessionID;\n  const time = new Date();\n\n  axios\n    .put(\"http://localhost:3001/addViewportChange\", {\n      id: sessionID,\n      width: window.innerWidth,\n      height: window.innerHeight,\n      time: time,\n    })\n    .catch((error) => {\n      console.error(\"Error updating readingSession.viewportDimensions:\", error);\n    });\n};\n\nexport const addScrollPosEntryToSessionContext = (sessionContext, yPos) => {\n  const date = new Date();\n\n  const scrollPosEntry = {\n    yPos: yPos,\n    time: date,\n    sessionID: sessionContext.sessionID,\n    textNumber: sessionContext.fileNumber,\n  };\n\n  sessionContext.setScrollPosEntries([\n    ...sessionContext.scrollPosEntries,\n    scrollPosEntry,\n  ]);\n};\n\nexport const prettyDate = (date) => {\n  let prettyDate =\n    date.getDate() +\n    \"/\" +\n    date.getMonth() +\n    \"/\" +\n    date.getFullYear() +\n    \" \" +\n    date.getHours() +\n    \":\" +\n    date.getMinutes() +\n    \":\" +\n    date.getSeconds() +\n    \".\" +\n    date.getMilliseconds();\n  return prettyDate;\n};\n\nexport const prettyMongoDate = (date) => {\n  let prettyMongoDate = date;\n  return prettyMongoDate;\n};\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { v4 as uuid_v4 } from \"uuid\";\nimport { wordSeparators } from \"../../../utilities\";\nimport { Segment } from \"semantic-ui-react\";\n\nconst TextAnswersConfigurationView = ({\n  fileID,\n  answerRegion,\n  selectAnswer,\n}) => {\n  const [words, setWords] = useState([]);\n\n  // Variable to store index of the word the user began highlighting from.\n  let mouseDownIndex;\n\n  useEffect(() => {\n    fetchText();\n  }, [fileID]);\n\n  const fetchText = () => {\n    axios\n      .get(\"http://localhost:3001/getTextFile\", {\n        params: { _id: fileID },\n      })\n      .then((response) => {\n        setWords(response.data.text.split(wordSeparators));\n      })\n      .catch((error) => {\n        console.error(\"Error fetching text in ScrollText:\", error);\n      });\n  };\n\n  const handleMouseUp = (index) => {\n    if (mouseDownIndex !== index) {\n      selectAnswer(\n        Math.min(mouseDownIndex, index),\n        Math.max(mouseDownIndex, index)\n      );\n    }\n  };\n\n  const wordColor = (index) => {\n    const minIndex = Math.min(answerRegion.startIndex, answerRegion.endIndex);\n    const maxIndex = Math.max(answerRegion.startIndex, answerRegion.endIndex);\n    if (minIndex <= index && index <= maxIndex && maxIndex > 0) {\n      return \"yellow\";\n    }\n    return \"white\";\n  };\n\n  return (\n    <Segment style={{ overflow: \"auto\", maxHeight: \"65vh\" }}>\n      <p>\n        {words.map((word, index) => (\n          <span\n            key={uuid_v4()}\n            onMouseDown={() => (mouseDownIndex = index)}\n            onMouseUp={() => handleMouseUp(index)}\n            style={{ backgroundColor: wordColor(index) }}\n          >\n            {word + \" \"}\n          </span>\n        ))}\n      </p>\n    </Segment>\n  );\n};\n\nexport default TextAnswersConfigurationView;\n","import { useState } from \"react\";\nimport { Modal, Button, Input } from \"semantic-ui-react\";\nimport TextAnswersConfigurationView from \"./TextAnswersConfigurationView\";\n\nconst AddQuestionToTextFile = ({\n  isOpen,\n  fileID,\n  format,\n  addQuestion,\n  close,\n}) => {\n  const [question, setQuestion] = useState(\"\");\n  const [answerRegion, setAnswerRegion] = useState({\n    startIndex: 0,\n    endIndex: 0,\n  });\n  const [displayQuestionError, setDisplayQuestionError] = useState(false);\n  const [\n    displayAnswerRegionConfiguration,\n    setDisplayAnswerRegionConfiguration,\n  ] = useState(false);\n  const [displayAnswerRegionError, setDisplayAnswerRegionError] =\n    useState(false);\n\n  const handleQuestionChange = (event) => {\n    setDisplayQuestionError(false);\n    setQuestion(event.target.value);\n  };\n\n  const handleSelectAnswerRegion = (mouseDownIndex, mouseUpIndex) => {\n    setDisplayAnswerRegionError(false);\n    setAnswerRegion({ startIndex: mouseDownIndex, endIndex: mouseUpIndex });\n  };\n\n  const handleAddQuestion = () => {\n    if (question === \"\") {\n      setDisplayQuestionError(true);\n      return;\n    }\n\n    if (\n      format === \"inline\" &&\n      answerRegion.startIndex === 0 &&\n      answerRegion.endIndex === 0\n    ) {\n      setDisplayAnswerRegionError(true);\n      return;\n    }\n\n    setQuestion(\"\");\n    setDisplayAnswerRegionConfiguration(false);\n    addQuestion(question, answerRegion);\n    setAnswerRegion({ startIndex: 0, endIndex: 0 });\n    close();\n  };\n\n  const handleCancel = () => {\n    setQuestion(\"\");\n    setAnswerRegion({ startIndex: 0, endIndex: 0 });\n    setDisplayAnswerRegionConfiguration(false);\n    setDisplayAnswerRegionError(false);\n    close();\n  };\n\n  const displayErrorMessage = () => {\n    if (displayAnswerRegionError) {\n      return (\n        <label style={{ padding: 10, color: \"red\" }}>\n          Please select an answer region for this question!\n        </label>\n      );\n    }\n  };\n\n  const displayConfigurationView = () => {\n    if (displayAnswerRegionConfiguration) {\n      return (\n        <TextAnswersConfigurationView\n          fileID={fileID}\n          answerRegion={answerRegion}\n          selectAnswer={handleSelectAnswerRegion}\n        />\n      );\n    }\n  };\n\n  const displayQuestionAndButtons = () => {\n    return (\n      <div>\n        {displayErrorMessage()}\n        <Input\n          style={{ marginBottom: 10 }}\n          error={displayQuestionError}\n          autoFocus\n          type=\"text\"\n          fluid\n          placeholder=\"Type a question for this text here...\"\n          onChange={handleQuestionChange}\n        />\n        {displayInlineComponents()}\n        <div style={{ position: \"absolute\", right: 10, bottom: 10 }}>\n          <Button content=\"Cancel\" onClick={handleCancel} />\n          <Button primary content=\"Add Question\" onClick={handleAddQuestion} />\n        </div>\n      </div>\n    );\n  };\n\n  const displayInlineComponents = () => {\n    if (format === \"inline\") {\n      return (\n        <div>\n          <Button\n            positive\n            content=\"Select Answer Region\"\n            onClick={() =>\n              setDisplayAnswerRegionConfiguration(\n                !displayAnswerRegionConfiguration\n              )\n            }\n          />\n          {displayAnswerRegionSelection()}\n        </div>\n      );\n    }\n  };\n\n  const displayAnswerRegionSelection = () => {\n    if (displayAnswerRegionConfiguration) {\n      return (\n        <span\n          style={{ padding: 10, color: \"blue\" }}\n        >{`Answer Region: words [${answerRegion.startIndex} - ${answerRegion.endIndex}]`}</span>\n      );\n    }\n  };\n\n  return (\n    <Modal open={isOpen} size=\"small\" style={{ padding: 10 }}>\n      {displayConfigurationView()}\n      {displayQuestionAndButtons()}\n    </Modal>\n  );\n};\n\nexport default AddQuestionToTextFile;\n","import { useEffect, useState } from \"react\";\nimport {\n  Modal,\n  List,\n  Item,\n  Divider,\n  Button,\n  Header,\n  Form,\n} from \"semantic-ui-react\";\nimport AddQuestionToTextFile from \"./AddQuestionToTextFile\";\nimport axios from \"axios\";\n\nconst TextFileQuestionsView = ({\n  isOpen,\n  fileID,\n  questions,\n  format,\n  updateFileQuestions,\n  removeQuestion,\n  close,\n}) => {\n  const [openAddQuestion, setOpenAddQuestion] = useState(false);\n  const [questionFormat, setQuestionFormat] = useState(format);\n  const [usedQuestionIDs, setUsedQuestionIDs] = useState([]);\n\n  useEffect(() => {\n    setQuestionFormat(format);\n  }, [format]);\n\n  useEffect(() => {\n    if (isOpen) {\n      fetchTemplateQuestions();\n    }\n  }, [isOpen]);\n\n  const fetchTemplateQuestions = () => {\n    axios\n      .get(\"http://localhost:3001/getUsedQuestions\")\n      .then((response) => {\n        setUsedQuestionIDs(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching used questions:\", error);\n      });\n  };\n\n  const addQuestion = (question, answerRegion) => {\n    axios\n      .put(\"http://localhost:3001/addTextFileQuestion\", {\n        id: fileID,\n        question: question.trim(),\n        answerRegion: answerRegion,\n        questionFormat: questionFormat,\n      })\n      .then((response) => {\n        // Return the latest question just added.\n        const newQuestion = response.data.questions.at(-1);\n        updateFileQuestions(newQuestion, questionFormat);\n      })\n      .catch((error) => {\n        console.error(\n          \"Error updating file.questions and file.questionFormat:\",\n          error\n        );\n      });\n  };\n\n  return (\n    <Modal style={{ padding: 10 }} open={isOpen}>\n      <Header as=\"h4\" content=\"Questions\" />\n      <div>\n        <Form>\n          <div className=\"grouped fields\">\n            <Form.Field>\n              <div className=\"ui radio checkbox\">\n                <input\n                  type=\"radio\"\n                  disabled={format !== \"\"}\n                  checked={questionFormat === \"comprehension\"}\n                  onChange={() => setQuestionFormat(\"comprehension\")}\n                />\n                <label>Comprehension</label>\n              </div>\n            </Form.Field>\n            <Form.Field>\n              <div className=\"ui radio checkbox\">\n                <input\n                  type=\"radio\"\n                  disabled={format !== \"\"}\n                  checked={questionFormat === \"inline\"}\n                  onChange={() => setQuestionFormat(\"inline\")}\n                />\n                <label>Inline</label>\n              </div>\n            </Form.Field>\n          </div>\n        </Form>\n      </div>\n      <Button\n        positive\n        disabled={questionFormat === \"\"}\n        content=\"Add Question\"\n        onClick={() => setOpenAddQuestion(true)}\n      />\n      <List ordered divided relaxed>\n        {questions.map((question) => (\n          <Item key={question._id}>\n            <div className=\"wrapper\">\n              <Item.Description content={question.question} />\n              <Item.Description\n                content={`Word Index Answer Region: [${question.answerRegion.startIndex}...${question.answerRegion.endIndex}]`}\n              />\n              <Button\n                floated=\"right\"\n                disabled={usedQuestionIDs.includes(question._id)}\n                content=\"Remove\"\n                onClick={() => removeQuestion(question)}\n              />\n            </div>\n          </Item>\n        ))}\n      </List>\n      <Divider />\n      <Button floated=\"right\" content=\"Close\" onClick={close} />\n\n      <AddQuestionToTextFile\n        isOpen={openAddQuestion}\n        fileID={fileID}\n        format={questionFormat}\n        addQuestion={addQuestion}\n        close={() => setOpenAddQuestion(false)}\n      />\n    </Modal>\n  );\n};\n\nexport default TextFileQuestionsView;\n","import { useState } from \"react\";\nimport { Input, Button, Modal } from \"semantic-ui-react\";\n\nconst AddStyleToTextFile = ({ isOpen, addStyle, close }) => {\n  const [family, setFamily] = useState(\"\");\n  const [size, setSize] = useState(-1);\n  const [lineHeight, setLineHeight] = useState(-1);\n  const [displayFamilyError, setDisplayFamilyError] = useState(false);\n  const [displaySizeError, setDisplaySizeError] = useState(false);\n  const [displayLineHeightError, setDisplayLineHeightError] = useState(false);\n\n  const handleFamilyChange = (event) => {\n    setDisplayFamilyError(false);\n    setFamily(event.target.value);\n  };\n\n  const handleSizeChange = (event) => {\n    setDisplaySizeError(false);\n    setSize(event.target.value);\n  };\n\n  const handleLineHeightChange = (event) => {\n    setDisplayLineHeightError(false);\n    setLineHeight(event.target.value);\n  };\n\n  const checkFormInputs = () => {\n    let emptyFields = false;\n\n    if (family === \"\") {\n      setDisplayFamilyError(true);\n      emptyFields = true;\n    }\n    if (size === -1) {\n      setDisplaySizeError(true);\n      emptyFields = true;\n    }\n    if (lineHeight === -1) {\n      setDisplayLineHeightError(true);\n      emptyFields = true;\n    }\n\n    return emptyFields;\n  };\n\n  const handleAddStyle = () => {\n    const emptyFields = checkFormInputs();\n\n    if (!emptyFields) {\n      const style = {\n        fontFamily: family.trim(),\n        fontSize: size,\n        lineHeight: lineHeight,\n      };\n\n      addStyle(style);\n\n      setFamily(\"\");\n      setSize(-1);\n      setLineHeight(-1);\n\n      close();\n    }\n  };\n\n  const handleCancel = () => {\n    setFamily(\"\");\n    setSize(-1);\n    setLineHeight(-1);\n    setDisplayFamilyError(false);\n    setDisplaySizeError(false);\n    setDisplayLineHeightError(false);\n    close();\n  };\n\n  const displayStyleAndButtons = () => {\n    return (\n      <div>\n        <Input\n          style={{ marginBottom: 10 }}\n          error={displayFamilyError}\n          autoFocus\n          type=\"text\"\n          fluid\n          placeholder=\"Type a font family here...\"\n          onChange={handleFamilyChange}\n        />\n        <Input\n          style={{ marginBottom: 10 }}\n          error={displaySizeError}\n          type=\"Number\"\n          placeholder=\"Size (pixels)\"\n          onChange={handleSizeChange}\n        />\n        <Input\n          style={{ marginBottom: 10 }}\n          error={displayLineHeightError}\n          type=\"Number\"\n          placeholder=\"Line height (pixels)\"\n          onChange={handleLineHeightChange}\n        />\n\n        <div style={{ position: \"absolute\", right: 10, bottom: 10 }}>\n          <Button content=\"Cancel\" onClick={handleCancel} />\n          <Button primary content=\"Add Style\" onClick={handleAddStyle} />\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <Modal open={isOpen} size=\"tiny\" style={{ padding: 10 }}>\n      {displayStyleAndButtons()}\n    </Modal>\n  );\n};\n\nexport default AddStyleToTextFile;\n","import { useEffect, useState } from \"react\";\nimport { Modal, Divider, Button, Header, List, Item } from \"semantic-ui-react\";\nimport AddStyleToTextFile from \"./AddStyleToTextFile\";\nimport axios from \"axios\";\n\nconst TextFileStylesView = ({\n  isOpen,\n  fileID,\n  styles,\n  updateFileStyles,\n  removeStyle,\n  close,\n}) => {\n  const [openAddStyle, setOpenAddStyle] = useState(false);\n  const [usedStyleIDs, setUsedStyleIDs] = useState([]);\n\n  useEffect(() => {\n    if (isOpen) {\n      fetchTemplateStyles();\n    }\n  }, [isOpen]);\n\n  const fetchTemplateStyles = () => {\n    axios\n      .get(\"http://localhost:3001/getUsedStyles\")\n      .then((response) => {\n        setUsedStyleIDs(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching used styles:\", error);\n      });\n  };\n\n  const addStyle = (style) => {\n    axios\n      .put(\"http://localhost:3001/addTextFileStyle\", {\n        id: fileID,\n        style: style,\n      })\n      .then((response) => {\n        // Return the latest style just added.\n        const newStyle = response.data.styles.at(-1);\n        updateFileStyles(newStyle);\n      })\n      .catch((error) => {\n        console.error(\"Error updating file.styles:\", error);\n      });\n  };\n\n  return (\n    <Modal style={{ padding: 10 }} open={isOpen}>\n      <Header as=\"h4\" content=\"Styles\" />\n\n      <Button\n        positive\n        content=\"Add Style\"\n        onClick={() => setOpenAddStyle(true)}\n      />\n      <List ordered divided relaxed>\n        {styles.map((style) => (\n          <Item key={style._id}>\n            <div className=\"wrapper\">\n              <Item.Description content={`font-family: ${style.fontFamily}`} />\n              <Item.Description content={`font-size: ${style.fontSize}`} />\n              <Item.Description content={`line-height: ${style.lineHeight}`} />\n\n              <Button\n                floated=\"right\"\n                disabled={usedStyleIDs.includes(style._id) || styles.length < 2}\n                content=\"Remove\"\n                onClick={() => removeStyle(style)}\n              />\n            </div>\n          </Item>\n        ))}\n      </List>\n      <Divider />\n      <Button floated=\"right\" content=\"Close\" onClick={close} />\n\n      <AddStyleToTextFile\n        isOpen={openAddStyle}\n        fileID={fileID}\n        addStyle={addStyle}\n        close={() => setOpenAddStyle(false)}\n      />\n    </Modal>\n  );\n};\n\nexport default TextFileStylesView;\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Button, Modal, Segment } from \"semantic-ui-react\";\n\nconst TextFileTextView = ({ isOpen, fileID, close }) => {\n  const [text, setText] = useState(\"\");\n\n  useEffect(() => {\n    if (isOpen) {\n      axios\n        .get(\"http://localhost:3001/getTextFile\", {\n          params: { _id: fileID },\n        })\n        .then((response) => {\n          setText(response.data.text);\n        })\n        .catch((error) => {\n          console.error(\"Error fetching text in TextFileTextView:\", error);\n        });\n    }\n  }, [isOpen]);\n\n  const handleClose = () => {\n    setText(\"\");\n    close();\n  };\n\n  return (\n    <Modal style={{ padding: 10 }} open={isOpen}>\n      <Segment style={{ overflow: \"auto\", maxHeight: \"65vh\" }}>\n        <p>{text}</p>\n      </Segment>\n      <Button floated=\"right\" content=\"Close\" onClick={handleClose} />\n    </Modal>\n  );\n};\n\nexport default TextFileTextView;\n","import { useState } from \"react\";\nimport { Item, Icon, Button } from \"semantic-ui-react\";\nimport DeleteTextModal from \"./textFiles/DeleteTextModal\";\nimport TextFileQuestionsView from \"./textFiles/TextFileQuestionsView\";\nimport TextFileStylesView from \"./textFiles/TextFileStylesView\";\nimport TextFileTextView from \"./textFiles/TextFileTextView\";\n\nconst TextFile = ({\n  file,\n  usedInTemplate,\n  usedAsScrollText,\n  updateFileQuestions,\n  removeQuestion,\n  updateFileStyles,\n  removeStyle,\n  deleteFile,\n}) => {\n  const [openViewQuestions, setOpenViewQuestions] = useState(false);\n  const [openViewStyles, setOpenViewStyles] = useState(false);\n  const [openTextFileTextView, setOpenTextFileTextView] = useState(false);\n  const [openDeleteTextModal, setOpenDeleteTextModal] = useState(false);\n\n  return (\n    <Item>\n      <Icon size=\"large\" name=\"file outline\" />\n      <Item.Content>\n        <div className=\"wrapper\">\n          <div>\n            <Item.Header as=\"h4\" style={{ margin: 5 }} content={file.name} />\n            <Item.Description content={`Uploaded: ${file.uploadedAt}`} />\n            <Item.Description\n              content={`Question Format: ${file.questionFormat}`}\n            />\n          </div>\n\n          <div className=\"ui vertical buttons\">\n            <Button\n              content=\"Questions\"\n              onClick={() => setOpenViewQuestions(true)}\n            />\n            <Button content=\"Styles\" onClick={() => setOpenViewStyles(true)} />\n          </div>\n\n          <div className=\"ui vertical buttons\" style={{ marginLeft: 5 }}>\n            <Button\n              content=\"View Text\"\n              onClick={() => setOpenTextFileTextView(true)}\n            />\n            <Button\n              disabled={usedInTemplate}\n              content=\"Delete\"\n              onClick={() => setOpenDeleteTextModal(true)}\n            />\n          </div>\n        </div>\n\n        <TextFileQuestionsView\n          isOpen={openViewQuestions}\n          fileID={file.key}\n          questions={file.questions}\n          format={file.questionFormat}\n          updateFileQuestions={updateFileQuestions}\n          removeQuestion={removeQuestion}\n          close={() => setOpenViewQuestions(false)}\n        />\n        <TextFileStylesView\n          isOpen={openViewStyles}\n          fileID={file.value}\n          styles={file.styles}\n          updateFileStyles={updateFileStyles}\n          removeStyle={removeStyle}\n          close={() => setOpenViewStyles(false)}\n        />\n        <TextFileTextView\n          isOpen={openTextFileTextView}\n          fileID={file.value}\n          close={() => setOpenTextFileTextView(false)}\n        />\n        <DeleteTextModal\n          isOpen={openDeleteTextModal}\n          answerYes={deleteFile}\n          answerNo={() => setOpenDeleteTextModal(false)}\n        />\n      </Item.Content>\n    </Item>\n  );\n};\n\nexport default TextFile;\n","import { useEffect } from \"react\";\nimport {\n  Button,\n  Header,\n  Modal,\n  List,\n  Item,\n  Segment,\n  Divider,\n} from \"semantic-ui-react\";\n\nconst SessionTemplateView = ({ isOpen, template, textFiles, close }) => {\n  const styleContent = (text) => {\n    return `font-family: ${\n      textFiles\n        .find((tf) => tf.value === text.fileID)\n        .styles.find((s) => s._id === text.styleID).fontFamily\n    }, font-size: ${\n      textFiles\n        .find((tf) => tf.value === text.fileID)\n        .styles.find((s) => s._id === text.styleID).fontSize\n    }, line-height: ${\n      textFiles\n        .find((tf) => tf.value === text.fileID)\n        .styles.find((s) => s._id === text.styleID).lineHeight\n    }`;\n  };\n\n  const speedTestInfo = () => {\n    return (\n      <div>\n        <Item.Header as=\"h3\" content=\"Speedtest\" />\n        <List>\n          <Item>\n            <Item.Description>{`Instructions: ${template.speedTest.instructions}`}</Item.Description>\n          </Item>\n          <Item>\n            <Item.Header as=\"h4\" style={{ margin: 5 }} content=\"Texts:\" />\n            <List style={{ marginLeft: 20 }} divided relaxed>\n              {template.speedTest.texts.map((text) => (\n                <Item key={text.fileID}>\n                  <Item.Content>\n                    <Item.Header\n                      as=\"h5\"\n                      content={`${\n                        template.speedTest.texts.indexOf(text) + 1\n                      }. ${text.name}`}\n                    />\n                    <Item.Description\n                      as=\"h5\"\n                      style={{ marginTop: 5, marginBottom: 0 }}\n                      content=\"Style\"\n                    />\n                    <Item.Description\n                      style={{ marginLeft: 20 }}\n                      content={styleContent(text)}\n                    />\n                  </Item.Content>\n                </Item>\n              ))}\n            </List>\n          </Item>\n        </List>\n      </div>\n    );\n  };\n\n  const scrollTestInfo = () => {\n    return (\n      <div>\n        <Item.Header as=\"h3\" content=\"ScrollTexts\" />\n        <List style={{ marginLeft: 20 }} divided relaxed>\n          {template.scrollTexts.map((text) => (\n            <Item key={text.fileID}>\n              <Item.Content>\n                <Item.Header\n                  as=\"h5\"\n                  content={`${template.scrollTexts.indexOf(text) + 1}. ${\n                    text.name\n                  }`}\n                />\n                <Item.Description\n                  style={{ marginTop: 5 }}\n                  content={`Instructions: ${text.instructions.main}`}\n                />\n                <Item.Description\n                  content={\n                    JSON.parse(text.instructions.hasFamiliarityQuestion) ===\n                    true\n                      ? \"Ask familiarity: Yes\"\n                      : \"Ask familiarity: No\"\n                  }\n                />\n                <Item.Description\n                  content={\n                    JSON.parse(text.instructions.hasInterestQuestion) === true\n                      ? \"Ask interest: Yes\"\n                      : \"Ask interest: No\"\n                  }\n                />\n                <Item.Description\n                  as=\"h5\"\n                  style={{ marginTop: 5, marginBottom: 0 }}\n                  content=\"Style\"\n                />\n                <Item.Description\n                  style={{ marginLeft: 20 }}\n                  content={styleContent(text)}\n                />\n                <Item.Description\n                  as=\"h5\"\n                  style={{ marginTop: 5, marginBottom: 0 }}\n                  content=\"Questions:\"\n                />\n                <List style={{ marginLeft: 20 }}>\n                  {text.questionIDs.map((questionID) => (\n                    <Item key={questionID}>\n                      <Item.Content>\n                        <Item.Description\n                          content={`${\n                            text.questionIDs.indexOf(questionID) + 1\n                          }. ${\n                            // Get the question from the textFile\n                            textFiles\n                              .find((tf) => tf.value === text.fileID)\n                              .questions.find((q) => q._id === questionID)\n                              .question\n                          }`}\n                        />\n                      </Item.Content>\n                    </Item>\n                  ))}\n                </List>\n              </Item.Content>\n            </Item>\n          ))}\n        </List>\n      </div>\n    );\n  };\n\n  const displayTemplateInfo = () => {\n    return (\n      <Segment basic style={{ overflow: \"auto\", maxHeight: \"75%\" }}>\n        <Item>\n          <Item.Content>\n            <List>\n              <Item>\n                <Item.Description content={`Created: ${template.createdAt}`} />\n              </Item>\n            </List>\n\n            {speedTestInfo()}\n\n            <Divider />\n\n            {scrollTestInfo()}\n          </Item.Content>\n        </Item>\n      </Segment>\n    );\n  };\n\n  return (\n    <Modal open={isOpen} style={{ height: \"70vh\", padding: 10 }}>\n      <Header as=\"h1\" content={template.name} />\n\n      {displayTemplateInfo()}\n      <Button\n        style={{ position: \"absolute\", right: 10, bottom: 10 }}\n        content=\"Close\"\n        onClick={close}\n      />\n    </Modal>\n  );\n};\n\nexport default SessionTemplateView;\n","import { Modal, Button } from \"semantic-ui-react\";\n\nconst DeleteTemplateModal = ({ isOpen, answerYes, answerNo }) => {\n  return (\n    <Modal\n      size=\"tiny\"\n      open={isOpen}\n      style={{ textAlign: \"center\", padding: 10 }}\n    >\n      <Modal.Header as=\"h4\">\n        Are you sure you want to delete this template?\n        <br />\n      </Modal.Header>\n      <Button primary content=\"Yes\" onClick={answerYes} />\n      <Button content=\"No\" onClick={answerNo} />\n    </Modal>\n  );\n};\n\nexport default DeleteTemplateModal;\n","import { List, Item, Button } from \"semantic-ui-react\";\nimport SessionTemplateView from \"./templates/SessionTemplateView\";\nimport { useState } from \"react\";\nimport DeleteTemplateModal from \"./templates/DeleteTemplateModal\";\n\nconst SessionTemplate = ({ template, textFiles, deleteTemplate }) => {\n  const [openTemplateView, setOpenTemplateView] = useState(false);\n  const [openDeleteTemplateModal, setOpenDeleteTemplateModal] = useState(false);\n\n  return (\n    <Item>\n      <Item.Content>\n        <div onClick={() => setOpenTemplateView(true)}>\n          <Item.Header as=\"h3\" style={{ margin: 5 }} content={template.name} />\n\n          <Item.Description\n            as=\"h5\"\n            style={{ margin: 5 }}\n            content=\"Speedtest texts:\"\n          />\n          <List style={{ marginLeft: 20 }} horizontal divided>\n            {template.speedTest.texts.map((text) => (\n              <Item key={text.fileID}>\n                <Item.Content>\n                  <Item.Description\n                    content={`${template.speedTest.texts.indexOf(text) + 1}. ${\n                      text.name\n                    }`}\n                  />\n                </Item.Content>\n              </Item>\n            ))}\n          </List>\n\n          <Item.Description\n            as=\"h5\"\n            style={{ margin: 5 }}\n            content=\"Scrolltest texts:\"\n          />\n          <List style={{ marginLeft: 20 }} horizontal divided>\n            {template.scrollTexts.map((text) => (\n              <Item key={text.fileID}>\n                <Item.Content>\n                  <Item.Description\n                    content={`${template.scrollTexts.indexOf(text) + 1}. ${\n                      text.name\n                    }`}\n                  />\n                </Item.Content>\n              </Item>\n            ))}\n          </List>\n        </div>\n        <div className=\"wrapper\">\n          <Item.Description\n            style={{ margin: 5 }}\n            content={`URL: ${template.url}`}\n          />\n\n          <Button\n            content=\"Copy URL\"\n            onClick={() => navigator.clipboard.writeText(template.url)}\n          />\n          <Button\n            content=\"Delete\"\n            onClick={() => setOpenDeleteTemplateModal(true)}\n          />\n        </div>\n\n        <SessionTemplateView\n          isOpen={openTemplateView}\n          template={template}\n          textFiles={textFiles}\n          close={() => setOpenTemplateView(false)}\n        />\n        <DeleteTemplateModal\n          isOpen={openDeleteTemplateModal}\n          answerYes={deleteTemplate}\n          answerNo={() => setOpenDeleteTemplateModal(false)}\n        />\n      </Item.Content>\n    </Item>\n  );\n};\n\nexport default SessionTemplate;\n","import { useEffect, useState } from \"react\";\nimport {\n  Modal,\n  List,\n  Item,\n  Divider,\n  Button,\n  Header,\n  Dropdown,\n} from \"semantic-ui-react\";\n\nconst QuestionsView = ({ isOpen, availableQuestions, updateQuestions }) => {\n  const [dropdownQuestions, setDropdownQuestions] = useState([]);\n  const [selectedQuestions, setSelectedQuestions] = useState([]);\n\n  useEffect(() => {\n    setDropdownQuestions(formatDropdownQuestions(availableQuestions));\n  }, [availableQuestions]);\n\n  const formatDropdownQuestions = (questions) => {\n    return questions.map((question) => {\n      return {\n        key: question._id,\n        value: question._id,\n        text: question.question,\n      };\n    });\n  };\n\n  return (\n    <Modal style={{ padding: 10 }} size=\"tiny\" open={isOpen}>\n      <Header as=\"h4\" content=\"Selected Questions:\" />\n      <Dropdown\n        placeholder=\"Select questions for this text\"\n        fluid\n        search\n        selection\n        multiple\n        options={dropdownQuestions}\n        onChange={(e, data) => setSelectedQuestions(data.value)}\n      />\n      <List ordered divided relaxed>\n        {selectedQuestions.map((question) => (\n          <Item key={question}>\n            <Item.Description\n              content={\n                availableQuestions.find((q) => q._id === question).question\n              }\n            />\n          </Item>\n        ))}\n      </List>\n      <Divider />\n      <Button\n        floated=\"right\"\n        content=\"Save\"\n        onClick={() => updateQuestions(selectedQuestions)}\n      />\n    </Modal>\n  );\n};\n\nexport default QuestionsView;\n","import { useEffect, useState } from \"react\";\nimport { Modal, Item, Button, Header, Dropdown } from \"semantic-ui-react\";\n\nconst StylesView = ({ isOpen, availableStyles, updateStyle }) => {\n  const [dropdownStyles, setDropdownStyles] = useState([]);\n  const [styleID, setStyleID] = useState(availableStyles[0]._id);\n\n  useEffect(() => {\n    setDropdownStyles(formatDropdownStyles(availableStyles));\n  }, [availableStyles]);\n\n  const formatDropdownStyles = (styles) => {\n    return styles.map((style) => {\n      return {\n        key: style._id,\n        value: style._id,\n        text: `family: ${style.fontFamily}, size: ${style.fontSize}, line-height: ${style.lineHeight}`,\n      };\n    });\n  };\n\n  return (\n    <Modal style={{ padding: 10 }} size=\"tiny\" open={isOpen}>\n      <Header as=\"h4\" content=\"Styles:\" />\n      <Dropdown\n        placeholder=\"Select a style for this text\"\n        fluid\n        selection\n        options={dropdownStyles}\n        onChange={(e, data) => setStyleID(data.value)}\n      />\n      <Item style={{ marginTop: 10 }}>\n        <Item.Content>\n          <Item.Header as=\"h5\" content=\"Selected Style:\" />\n          <Item.Description\n            content={`font-family: ${\n              availableStyles.find((s) => s._id === styleID).fontFamily\n            }`}\n          />\n          <Item.Description\n            content={`font-size: ${\n              availableStyles.find((s) => s._id === styleID).fontSize\n            }`}\n          />\n          <Item.Description\n            content={`line-height: ${\n              availableStyles.find((s) => s._id === styleID).lineHeight\n            }`}\n          />\n        </Item.Content>\n      </Item>\n      <Button\n        floated=\"right\"\n        content=\"Save\"\n        onClick={() => updateStyle(styleID)}\n      />\n    </Modal>\n  );\n};\n\nexport default StylesView;\n","import { useState } from \"react\";\nimport { Input, Item, Button } from \"semantic-ui-react\";\nimport QuestionsView from \"./QuestionsView\";\nimport StylesView from \"./StylesView\";\n\nconst ScrollTextListItem = ({\n  text,\n  availableQuestions,\n  availableStyles,\n  addQuestions,\n  selectStyle,\n  setInstructions,\n  instructionsError,\n  toggleHasFamiliarityQuestion,\n  toggleHasInterestQuestion,\n}) => {\n  const [viewQuestions, setViewQuestions] = useState(false);\n  const [viewStyles, setViewStyles] = useState(false);\n  const [instructionsAreEmpty, setInstructionsAreEmpty] = useState(true);\n\n  const handleInstructionsChange = (text, instructions) => {\n    setInstructionsAreEmpty(instructions === \"\");\n    setInstructions(text, instructions);\n  };\n\n  const updateQuestions = (selectedQuestions) => {\n    setViewQuestions(false);\n    addQuestions(text, selectedQuestions);\n  };\n\n  const updateStyle = (style) => {\n    setViewStyles(false);\n    selectStyle(text, style);\n  };\n\n  return (\n    <Item key={text.fileID}>\n      <Item.Content>\n        <div className=\"wrapper\">\n          <div>\n            <Item.Header style={{ margin: 5 }} content={text.fileName} />\n          </div>\n\n          <Input\n            type=\"text\"\n            error={instructionsError && instructionsAreEmpty}\n            placeholder=\"Write instructions here...\"\n            onChange={(e) => handleInstructionsChange(text, e.target.value)}\n          />\n\n          <div>\n            <div className=\"ui checkbox\">\n              <input\n                type=\"checkbox\"\n                defaultChecked\n                onClick={toggleHasFamiliarityQuestion}\n              />\n              <label>Ask user about their familiarity</label>\n            </div>\n\n            <div className=\"ui checkbox\">\n              <input\n                type=\"checkbox\"\n                defaultChecked\n                onClick={toggleHasInterestQuestion}\n              />\n              <label>Ask user about their interest</label>\n            </div>\n          </div>\n\n          <Button content=\"Styles\" onClick={() => setViewStyles(true)} />\n          <Button content=\"Questions\" onClick={() => setViewQuestions(true)} />\n\n          <QuestionsView\n            isOpen={viewQuestions}\n            availableQuestions={availableQuestions}\n            updateQuestions={updateQuestions}\n          />\n\n          <StylesView\n            isOpen={viewStyles}\n            availableStyles={availableStyles}\n            updateStyle={updateStyle}\n          />\n        </div>\n      </Item.Content>\n    </Item>\n  );\n};\n\nexport default ScrollTextListItem;\n","import { useState } from \"react\";\nimport { Item, Button } from \"semantic-ui-react\";\nimport StylesView from \"./StylesView\";\n\nconst SpeedTextListItem = ({ text, availableStyles, selectStyle }) => {\n  const [viewStyles, setViewStyles] = useState(false);\n\n  const updateStyle = (style) => {\n    setViewStyles(false);\n    selectStyle(text, style);\n  };\n\n  return (\n    <Item key={text.fileID}>\n      <Item.Content>\n        <div className=\"wrapper\">\n          <div>\n            <Item.Header style={{ margin: 5 }} content={text.fileName} />\n          </div>\n\n          <Button content=\"Styles\" onClick={() => setViewStyles(true)} />\n\n          <StylesView\n            isOpen={viewStyles}\n            availableStyles={availableStyles}\n            updateStyle={updateStyle}\n          />\n        </div>\n      </Item.Content>\n    </Item>\n  );\n};\n\nexport default SpeedTextListItem;\n","import { useEffect, useState } from \"react\";\nimport {\n  Button,\n  Header,\n  Segment,\n  Modal,\n  Dropdown,\n  List,\n  Input,\n} from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport ScrollTextListItem from \"./ScrollTextListItem\";\nimport SpeedTextListItem from \"./SpeedTextListItem\";\n\nconst CreateTemplate = ({ isOpen, close, textFiles }) => {\n  const [templateName, setTemplateName] = useState(\"\");\n  const [speedTexts, setSpeedTexts] = useState([]);\n  const [speedTestInstructions, setSpeedTestInstructions] = useState(\"\");\n  const [scrollTexts, setScrollTexts] = useState([]);\n  const [displayMissingInputError, setDisplayMissingInputError] =\n    useState(false);\n  const [dropdownTextFiles, setDropdownTextFiles] = useState([]);\n\n  useEffect(() => {\n    setDropdownTextFiles(formatDropdownTextFiles(textFiles));\n  }, [textFiles]);\n\n  const formatDropdownTextFiles = (textFiles) => {\n    return textFiles.map((file) => {\n      return {\n        key: file.key,\n        value: file.value,\n        text: file.name,\n      };\n    });\n  };\n\n  const checkFormInputs = () => {\n    let emptyFields = false;\n\n    if (templateName.trim() === \"\") {\n      setDisplayMissingInputError(true);\n      emptyFields = true;\n    }\n    if (speedTexts.length === 0) {\n      setDisplayMissingInputError(true);\n      emptyFields = true;\n    }\n    if (scrollTexts.length === 0) {\n      setDisplayMissingInputError(true);\n      emptyFields = true;\n    }\n    if (speedTestInstructions.trim() === \"\") {\n      setDisplayMissingInputError(true);\n      emptyFields = true;\n    }\n    for (let i = 0; i < scrollTexts.length; i++) {\n      if (scrollTexts[i].instructions.main === \"\") {\n        setDisplayMissingInputError(true);\n        emptyFields = true;\n        break;\n      }\n    }\n\n    return emptyFields;\n  };\n\n  const handleCreate = () => {\n    const emptyFields = checkFormInputs();\n\n    if (!emptyFields) {\n      // Create scrollTexts field.\n      const files = [];\n      for (let i = 0; i < scrollTexts.length; i++) {\n        files.push({\n          fileID: scrollTexts[i].fileID,\n          instructions: scrollTexts[i].instructions,\n          questionIDs: scrollTexts[i].questionIDs,\n          styleID: scrollTexts[i].styleID,\n        });\n      }\n\n      const template = {\n        name: templateName.trim(),\n        speedTest: {\n          texts: speedTexts,\n          instructions: speedTestInstructions.trim(),\n        },\n        scrollTexts: files,\n        createdAt: new Date(),\n      };\n\n      axios\n        .post(\"http://localhost:3001/createSessionTemplate\", template)\n        .then((response) => {\n          handleClose(true, response.data);\n        })\n        .catch((error) => {\n          console.error(\"Error creating session template:\", error);\n        });\n    }\n  };\n\n  const handleSelectSpeedText = (e, data) => {\n    if (e.target.className === \"delete icon\") {\n      for (let i = 0; i < data.options.length; i++) {\n        const optionIndex = data.value.indexOf(data.options[i].value);\n\n        // IF this element is not found in data.value array, and it is still\n        // in speedTexts, remove it from speedTexts.\n        if (\n          optionIndex === -1 &&\n          speedTexts.some((elem) => elem.fileID === data.options[i].value)\n        ) {\n          setSpeedTexts(\n            speedTexts.filter((elem) => elem.fileID !== data.options[i].value)\n          );\n          break;\n        }\n      }\n    } else {\n      setSpeedTexts([\n        ...speedTexts,\n        {\n          fileID: data.value[data.value.length - 1],\n          fileName: data.options.find(\n            (file) => file.value === data.value[data.value.length - 1]\n          ).text,\n          styleID: textFiles.find(\n            (tf) => tf.value === data.value[data.value.length - 1]\n          ).styles[0]._id,\n        },\n      ]);\n    }\n  };\n\n  const handleSelectScrollText = (e, data) => {\n    if (e.target.className === \"delete icon\") {\n      for (let i = 0; i < data.options.length; i++) {\n        const optionIndex = data.value.indexOf(data.options[i].value);\n\n        // IF this element is not found in data.value array, and it is still\n        // in scrollTexts, remove it from scrollTexts.\n        if (\n          optionIndex === -1 &&\n          scrollTexts.some((elem) => elem.fileID === data.options[i].value)\n        ) {\n          setScrollTexts(\n            scrollTexts.filter((elem) => elem.fileID !== data.options[i].value)\n          );\n          break;\n        }\n      }\n    } else {\n      setScrollTexts([\n        ...scrollTexts,\n        {\n          fileID: data.value[data.value.length - 1],\n          fileName: data.options.find(\n            (file) => file.value === data.value[data.value.length - 1]\n          ).text,\n          instructions: {\n            main: \"\",\n            hasFamiliarityQuestion: true,\n            hasInterestQuestion: true,\n          },\n          questionIDs: [],\n          styleID: textFiles.find(\n            (tf) => tf.value === data.value[data.value.length - 1]\n          ).styles[0]._id,\n        },\n      ]);\n    }\n  };\n\n  const handleAddQuestions = (text, selectedQuestions) => {\n    const index = scrollTexts.indexOf(text);\n    const tempScrollTexts = scrollTexts;\n    tempScrollTexts[index].questionIDs = selectedQuestions;\n    setScrollTexts(tempScrollTexts);\n  };\n\n  const handleSelectSpeedTextStyle = (text, styleID) => {\n    const index = speedTexts.indexOf(text);\n    const tempSpeedTexts = speedTexts;\n    tempSpeedTexts[index].styleID = styleID;\n    setSpeedTexts(tempSpeedTexts);\n  };\n\n  const handleSelectScrollTextStyle = (text, styleID) => {\n    const index = scrollTexts.indexOf(text);\n    const tempScrollTexts = scrollTexts;\n    tempScrollTexts[index].styleID = styleID;\n    setScrollTexts(tempScrollTexts);\n  };\n\n  const setScrollTextInstructions = (text, instructions) => {\n    const index = scrollTexts.indexOf(text);\n    const tempScrollTexts = scrollTexts;\n    tempScrollTexts[index].instructions.main = instructions;\n    setScrollTexts(tempScrollTexts);\n  };\n\n  const setAskQuestion = (text, question) => {\n    const index = scrollTexts.indexOf(text);\n    const tempScrollTexts = scrollTexts;\n    if (question === \"familiarity\") {\n      const ask = !tempScrollTexts[index].instructions.hasFamiliarityQuestion;\n      tempScrollTexts[index].instructions.hasFamiliarityQuestion = ask;\n    }\n    if (question === \"interest\") {\n      const ask = !tempScrollTexts[index].instructions.hasInterestQuestion;\n      tempScrollTexts[index].instructions.hasInterestQuestion = ask;\n    }\n    setScrollTexts(tempScrollTexts);\n  };\n\n  const clearData = () => {\n    setTemplateName(\"\");\n    setSpeedTexts([]);\n    setScrollTexts([]);\n    setSpeedTestInstructions(\"\");\n    setDisplayMissingInputError(false);\n  };\n\n  const handleClose = (templateCreated, responseData) => {\n    clearData();\n\n    if (templateCreated) {\n      const tempSpeedTexts = [];\n      responseData.speedTest.texts.forEach((text) => {\n        tempSpeedTexts.push({\n          fileID: text.fileID,\n          name: textFiles.find((tf) => tf.value === text.fileID).name,\n          styleID: text.styleID,\n        });\n      });\n\n      const tempScrollTexts = [];\n      responseData.scrollTexts.forEach((fileObj) =>\n        tempScrollTexts.push({\n          fileID: fileObj.fileID,\n          name: textFiles.find((tf) => tf.value === fileObj.fileID).name,\n          instructions: fileObj.instructions,\n          questionIDs: fileObj.questionIDs,\n          styleID: fileObj.styleID,\n        })\n      );\n\n      const template = {\n        key: responseData._id,\n        name: responseData.name,\n        speedTest: {\n          texts: tempSpeedTexts,\n          instructions: responseData.speedTest.instructions,\n        },\n        scrollTexts: tempScrollTexts,\n        createdAt: responseData.createdAt,\n        url: responseData._id,\n      };\n\n      close(true, template);\n    } else {\n      close(false, null);\n    }\n  };\n\n  const displaySpeedTexts = () => {\n    return (\n      <List relaxed divided>\n        {speedTexts.map((text) => (\n          <SpeedTextListItem\n            key={text.fileID}\n            text={text}\n            availableStyles={\n              textFiles.find((file) => file.key === text.fileID).styles\n            }\n            selectStyle={handleSelectSpeedTextStyle}\n          />\n        ))}\n      </List>\n    );\n  };\n\n  const displayScrollTexts = () => {\n    return (\n      <List relaxed divided>\n        {scrollTexts.map((text) => (\n          <ScrollTextListItem\n            key={text.fileID}\n            text={text}\n            availableQuestions={\n              textFiles.find((file) => file.key === text.fileID).questions\n            }\n            availableStyles={\n              textFiles.find((file) => file.key === text.fileID).styles\n            }\n            addQuestions={handleAddQuestions}\n            selectStyle={handleSelectScrollTextStyle}\n            setInstructions={setScrollTextInstructions}\n            instructionsError={\n              text.instructions.main === \"\" && displayMissingInputError\n            }\n            toggleHasFamiliarityQuestion={() =>\n              setAskQuestion(text, \"familiarity\")\n            }\n            toggleHasInterestQuestion={() => setAskQuestion(text, \"interest\")}\n          />\n        ))}\n      </List>\n    );\n  };\n\n  return (\n    <div>\n      <Modal open={isOpen} style={{ height: \"70vh\", padding: 10 }}>\n        <Header as=\"h1\" content=\"Create a Session Template\" />\n        <Segment style={{ overflow: \"auto\", maxHeight: \"75%\" }}>\n          <Segment>\n            <Header\n              as=\"h3\"\n              content=\"Template Name:\"\n              style={{ paddingTop: 5, marginRight: 10 }}\n            />\n            <Input\n              type=\"text\"\n              error={templateName === \"\" && displayMissingInputError}\n              autoFocus\n              fluid\n              placeholder=\"Type template name here...\"\n              onChange={(e) => setTemplateName(e.target.value)}\n            />\n          </Segment>\n\n          <Segment>\n            <Header\n              as=\"h3\"\n              content=\"Speed Test Instructions:\"\n              style={{ paddingTop: 5, marginRight: 10 }}\n            />\n            <Input\n              type=\"text\"\n              error={speedTestInstructions === \"\" && displayMissingInputError}\n              fluid\n              placeholder=\"Write instructions for the speed test here...\"\n              onChange={(e) => setSpeedTestInstructions(e.target.value)}\n            />\n          </Segment>\n\n          <Segment>\n            <Header\n              as=\"h3\"\n              content=\"Speed Texts:\"\n              style={{ paddingTop: 5, marginRight: 10 }}\n            />\n            <Dropdown\n              placeholder=\"Select texts for the speed test\"\n              error={speedTexts.length === 0 && displayMissingInputError}\n              fluid\n              search\n              selection\n              multiple\n              options={dropdownTextFiles}\n              onChange={handleSelectSpeedText}\n            />\n            {displaySpeedTexts()}\n          </Segment>\n\n          <Segment>\n            <Header\n              as=\"h3\"\n              content=\"Scrollable Texts:\"\n              style={{ paddingTop: 5, marginRight: 10 }}\n            />\n            <Dropdown\n              placeholder=\"Select texts for the scroll test\"\n              error={scrollTexts.length === 0 && displayMissingInputError}\n              fluid\n              search\n              selection\n              multiple\n              options={dropdownTextFiles}\n              onChange={handleSelectScrollText}\n            />\n            {displayScrollTexts()}\n          </Segment>\n        </Segment>\n\n        <div style={{ position: \"absolute\", right: 10, bottom: 10 }}>\n          <Button content=\"Cancel\" onClick={() => handleClose(false, null)} />\n          <Button positive content=\"Create\" onClick={handleCreate} />\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default CreateTemplate;\n","import axios from \"axios\";\nimport { useRef } from \"react\";\nimport { Button } from \"semantic-ui-react\";\n\nconst FileUpload = ({ uploadSubmitted }) => {\n  const defaultStyle = {\n    fontFamily: \"sans-serif\",\n    fontSize: 15,\n    lineHeight: 20,\n  };\n\n  const fileRef = useRef();\n\n  const handleButtonClick = () => {\n    fileRef.current.click();\n  };\n\n  const handleFileSelect = (event) => {\n    // https://stackoverflow.com/questions/51272255/how-to-use-filereader-in-react/51278185\n    const file = event.target.files[0];\n    if (typeof file !== \"undefined\") {\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        const textFile = {\n          text: event.target.result,\n          fileName: file.name,\n          questions: [],\n          questionFormat: \"\",\n          styles: [defaultStyle],\n          createdAt: new Date(),\n        };\n        axios\n          .post(\"http://localhost:3001/uploadTextFile\", textFile)\n          .then((response) => {\n            const doc = {\n              key: response.data._id,\n              value: response.data._id,\n              name: response.data.fileName,\n              questions: [],\n              questionFormat: \"\",\n              styles: [defaultStyle],\n              uploadedAt: response.data.createdAt,\n            };\n            uploadSubmitted(doc);\n          })\n          .catch((error) => {\n            console.error(\"Error uploading text file:\", error);\n          });\n      };\n      reader.readAsText(file);\n    }\n  };\n\n  return (\n    //https://stackoverflow.com/questions/55464274/react-input-type-file-semantic-ui-react\n    <div>\n      <Button\n        style={{ position: \"absolute\", right: 10 }}\n        positive\n        content=\"Upload Text\"\n        icon=\"file\"\n        onClick={handleButtonClick}\n      />\n      <input\n        ref={fileRef}\n        type=\"file\"\n        name=\"file\"\n        accept=\".txt\"\n        hidden\n        onChange={handleFileSelect}\n      />\n    </div>\n  );\n};\n\nexport default FileUpload;\n","import { useEffect, useState } from \"react\";\nimport { Modal, Button, Dropdown, Header } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport { ExportToCsv } from \"export-to-csv\";\n\nconst DownloadDataForm = ({ isOpen, templates, textFiles, close }) => {\n  const [sessionOptions, setSessionOptions] = useState([]);\n  const [sessionID, setSessionID] = useState(\"\");\n\n  useEffect(() => {\n    if (isOpen) {\n      fetchSessions();\n    }\n  }, [isOpen]);\n\n  const fetchSessions = () => {\n    axios\n      .get(\"http://localhost:3001/getReadingSessions\")\n      .then((response) => {\n        const readingSessions = response.data;\n        const options = [];\n        readingSessions.forEach((session) => {\n          options.push({\n            key: session._id,\n            value: session._id,\n            text: `User: ${session.userName}, Template: ${\n              templates.find((t) => t.key === session.templateID).name\n            }, Start Time: ${session.startTime}`,\n          });\n        });\n        setSessionOptions(options);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching ReadingSessions:\", error);\n      });\n  };\n\n  const getScrollPositionData = async () => {\n    return axios\n      .get(\"http://localhost:3001/getScrollPosEntries\", {\n        params: { sessionID: sessionID },\n      })\n      .then((response) => {\n        return response.data;\n      });\n  };\n\n  const getReadingSessionData = async () => {\n    return axios\n      .get(\"http://localhost:3001/getReadingSession\", {\n        params: { _id: sessionID },\n      })\n      .then((response) => {\n        return response.data;\n      });\n  };\n\n  const exportScrollData = async (scrollPosEntries) => {\n    // List of lists of entries, each one associated with an\n    // individual text from and individual session.\n    const entriesByText = [];\n\n    let textNumber = 0;\n    let scrollPosIndex = 0;\n    for (let i = 0; i < scrollPosEntries.length; i++) {\n      // Create separate lists of entries associated with each text.\n      if (textNumber !== scrollPosEntries[i].textNumber) {\n        entriesByText.push({\n          textNumber: textNumber,\n          entries: scrollPosEntries.slice(scrollPosIndex, i),\n        });\n        textNumber = scrollPosEntries[i].textNumber;\n        scrollPosIndex = i;\n      }\n    }\n\n    // Add the last text's list of entries to entriesByText.\n    entriesByText.push({\n      textNumber: textNumber,\n      entries: scrollPosEntries.slice(scrollPosIndex),\n    });\n\n    // Export a csv file for each text.\n    for (let i = 0; i < entriesByText.length; i++) {\n      // Format scroll position entries for exporting to csv.\n      const data = formatScrollPosEntriesForCsv(entriesByText[i].entries);\n      createCsv(data, `scrollText_${entriesByText[i].textNumber}_positions`);\n    }\n  };\n\n  const exportReadingSessionData = (readingSessionData, templateData) => {\n    const readingSession = {\n      userName: readingSessionData.userName,\n      startTime: readingSessionData.startTime,\n      endTime: readingSessionData.endTime,\n      templateName: templateData.name,\n      speedTestInstructions: templateData.speedTest.instructions,\n    };\n\n    createCsv([readingSession], `readingSession_${readingSessionData._id}`);\n  };\n\n  const exportSpeedTextData = (readingSessionData, templateData) => {\n    // Deep copy this array to not change the objects in it through changes to the speedTexts variable.\n    const speedTexts = JSON.parse(JSON.stringify(templateData.speedTest.texts));\n\n    let textNumber = 0;\n    speedTexts.forEach((speedText) => {\n      const text = textFiles.find((t) => t.key === speedText.fileID);\n      const style = text.styles.find((s) => s._id === speedText.styleID);\n      const sessionText = readingSessionData.speedTexts.find(\n        (t) => t.fileID === speedText.fileID\n      );\n      speedText.startTime = sessionText.startTime;\n      speedText.endTime = sessionText.endTime;\n      speedText.fontFamily = style.fontFamily;\n      speedText.fontSize = style.fontSize;\n      speedText.lineHeight = style.lineHeight;\n      delete speedText.styleID;\n\n      createCsv(sessionText.pauses, `speedText_${textNumber}_pauses`);\n      textNumber++;\n    });\n\n    createCsv(speedTexts, \"speedTexts\");\n  };\n\n  const exportScrollTextData = (readingSessionData, templateData) => {\n    // Deep copy this array to not change the objects in it through changes to the scrollTexts variable.\n    const scrollTexts = JSON.parse(JSON.stringify(templateData.scrollTexts));\n\n    let textNumber = 0;\n    scrollTexts.forEach((scrollText) => {\n      const text = textFiles.find((t) => t.key === scrollText.fileID);\n      const style = text.styles.find((s) => s._id === scrollText.styleID);\n      const sessionText = readingSessionData.scrollTexts.find(\n        (t) => t.fileID === scrollText.fileID\n      );\n      scrollText.startTime = sessionText.startTime;\n      scrollText.endTime = sessionText.endTime;\n      scrollText.instructions = scrollText.instructions.main;\n      scrollText.questionFormat = text.questionFormat;\n      scrollText.userFamiliarity = sessionText.familiarity;\n      scrollText.userInterest = sessionText.interest;\n      scrollText.fontFamily = style.fontFamily;\n      scrollText.fontSize = style.fontSize;\n      scrollText.lineHeight = style.lineHeight;\n\n      const scrollTextQuestionIDs = scrollText.questionIDs;\n\n      delete scrollText.styleID;\n      delete scrollText.questionIDs;\n\n      createCsv(sessionText.pauses, `scrollText_${textNumber}_pauses`);\n\n      const questionAnswers = [];\n      for (let i = 0; i < sessionText.questionAnswers.length; i++) {\n        const sessionTextQuestionAnswerEntry = sessionText.questionAnswers[i];\n        const question = text.questions.find(\n          (q) => q._id === scrollTextQuestionIDs[i]\n        );\n        const correctAnswer = `[${question.answerRegion.startIndex}, ${question.answerRegion.endIndex}]`;\n        questionAnswers.push({\n          question: question.question,\n          userAnswer: sessionTextQuestionAnswerEntry.answer,\n          correctAnswer: correctAnswer,\n          skip: sessionTextQuestionAnswerEntry.skip,\n          yPosition: sessionTextQuestionAnswerEntry.yPosition,\n          time: sessionTextQuestionAnswerEntry.time,\n        });\n      }\n\n      createCsv(questionAnswers, `scrollText_${textNumber}_questionAnswers`);\n      textNumber++;\n    });\n\n    createCsv(scrollTexts, \"scrollTexts\");\n  };\n\n  const formatScrollPosEntriesForCsv = (entries) => {\n    return entries.map((entry) => {\n      return { yPos: entry.yPos, time: entry.time };\n    });\n  };\n\n  const formatViewportDimensionsForCsv = (dimensions) => {\n    return dimensions.map((d) => {\n      return { width: d.width, height: d.height, time: d.time };\n    });\n  };\n\n  const createCsv = (data, filename) => {\n    if (data.length > 0) {\n      const options = {\n        filename: filename,\n        fieldSeparator: \",\",\n        quoteStrings: '\"',\n        decimalSeparator: \".\",\n        showLabels: true,\n        useBom: true,\n        useKeysAsHeaders: true,\n      };\n\n      const csvExporter = new ExportToCsv(options);\n      csvExporter.generateCsv(data);\n    }\n  };\n\n  const handleExport = async () => {\n    const scrollPositionData = await getScrollPositionData();\n    exportScrollData(scrollPositionData);\n\n    const readingSessionData = await getReadingSessionData();\n    const templateData = templates.find(\n      (t) => t.key === readingSessionData.templateID\n    );\n\n    const viewportDimensions = formatViewportDimensionsForCsv(\n      readingSessionData.viewportDimensions\n    );\n    createCsv(viewportDimensions, \"viewportDimensions\");\n\n    exportReadingSessionData(readingSessionData, templateData);\n    exportSpeedTextData(readingSessionData, templateData);\n    exportScrollTextData(readingSessionData, templateData);\n\n    handleClose();\n  };\n\n  const handleClose = () => {\n    setSessionOptions([]);\n    setSessionID(\"\");\n    close();\n  };\n\n  return (\n    <Modal open={isOpen} style={{ padding: 10 }}>\n      <Header\n        as=\"h2\"\n        content=\"Select reading session to download\"\n        textAlign=\"center\"\n      />\n      <Dropdown\n        placeholder=\"Select Session\"\n        fluid\n        search\n        selection\n        options={sessionOptions}\n        onChange={(e, data) => setSessionID(data.value)}\n      />\n\n      <div style={{ float: \"right\", paddingTop: 10 }}>\n        <Button\n          primary\n          content=\"Export Session Data\"\n          icon=\"download\"\n          onClick={handleExport}\n        />\n        <Button content=\"Cancel\" onClick={handleClose} />\n      </div>\n    </Modal>\n  );\n};\n\nexport default DownloadDataForm;\n","import TextFile from \"./TextFile.jsx\";\nimport { Segment, Container, Grid, Header, Button } from \"semantic-ui-react\";\nimport { useState, useEffect } from \"react\";\nimport SessionTemplate from \"./SessionTemplate.jsx\";\nimport axios from \"axios\";\nimport CreateTemplate from \"./templateCreation/CreateTemplate.jsx\";\nimport FileUpload from \"./FileUpload.jsx\";\nimport DownloadDataForm from \"./DownloadDataForm.jsx\";\n\nconst ResearcherView = () => {\n  const [textFiles, setTextFiles] = useState({ data: [], isFetching: true });\n  const [templates, setTemplates] = useState({ data: [], isFetching: true });\n  const [openTemplateCreator, setOpenTemplateCreator] = useState(false);\n  const [openDownloadDataModal, setOpenDownloadDataModal] = useState(false);\n\n  useEffect(() => {\n    // Fetch text files only on first render.\n    fetchTextFiles();\n  }, []);\n\n  useEffect(() => {\n    // Fetch session templates only after text files have been fetched.\n    if (!textFiles.isFetching) {\n      fetchSessionTemplates();\n    }\n  }, [textFiles.isFetching]);\n\n  const fetchTextFiles = () => {\n    setTextFiles({ data: textFiles.data, isFetching: true });\n\n    axios\n      .get(\"/api/getAllTextFiles\")\n      .then((response) => {\n        const data = response.data;\n        const files = [];\n        data.forEach((file) => {\n          const textFile = {\n            key: file._id,\n            value: file._id,\n            name: file.fileName,\n            questions: file.questions,\n            questionFormat: file.questionFormat,\n            styles: file.styles,\n            uploadedAt: file.createdAt,\n          };\n          files.push(textFile);\n        });\n\n        // Set text files for rendering, and indicate that they are no longer being fetched.\n        setTextFiles({ data: files, isFetching: false });\n      })\n      .catch((error) => {\n        console.error(\"Error fetching files:\", error);\n      });\n  };\n\n  const fetchSessionTemplates = () => {\n    setTemplates({ data: templates.data, isFetching: true });\n    axios\n      .get(\"/api/getSessionTemplates\")\n      .then((templatesResponse) => {\n        const options = [];\n        const data = templatesResponse.data;\n        data.forEach((temp) => {\n          // Get names of text files this template references.\n          const speedTexts = [];\n          temp.speedTest.texts.forEach((text) => {\n            speedTexts.push({\n              fileID: text.fileID,\n              name: textFiles.data.find((tf) => tf.value === text.fileID).name,\n              styleID: text.styleID,\n            });\n          });\n          const scrollTexts = [];\n          temp.scrollTexts.forEach((fileObj) => {\n            scrollTexts.push({\n              fileID: fileObj.fileID,\n              name: textFiles.data.find((tf) => tf.value === fileObj.fileID)\n                .name,\n              instructions: fileObj.instructions,\n              questionIDs: fileObj.questionIDs,\n              styleID: fileObj.styleID,\n            });\n          });\n\n          const option = {\n            key: temp._id,\n            name: temp.name,\n            speedTest: {\n              texts: speedTexts,\n              instructions: temp.speedTest.instructions,\n            },\n            scrollTexts: scrollTexts,\n            createdAt: temp.createdAt,\n            url: temp._id,\n          };\n\n          options.push(option);\n        });\n\n        // Set templates for rendering, and indicate that they are no longer being fetched.\n        setTemplates({ data: options, isFetching: false });\n      })\n      .catch((error) => {\n        console.error(\"Error fetching session templates:\", error);\n      });\n  };\n\n  const handleCreateTemplate = () => {\n    setOpenTemplateCreator(true);\n  };\n\n  const closeTemplateCreator = (templateCreated, template) => {\n    if (templateCreated) {\n      setTemplates({\n        data: [...templates.data, template],\n        isFetching: false,\n      });\n    }\n    setOpenTemplateCreator(false);\n  };\n\n  const handleUpdateFileQuestions = (file, newQuestion, questionFormat) => {\n    const files = textFiles.data;\n    const index = files.indexOf(file);\n    files[index].questions.push(newQuestion);\n    files[index].questionFormat = questionFormat;\n\n    setTextFiles({ data: files, isFetching: false });\n  };\n\n  const handleRemoveFileQuestion = (file, question) => {\n    const files = textFiles.data;\n    const index = files.indexOf(file);\n    files[index].questions = files[index].questions.filter(\n      (q) => q !== question\n    );\n    const questionFormat =\n      files[index].questions.length > 0 ? files[index].questionFormat : \"\";\n    files[index].questionFormat = questionFormat;\n\n    setTextFiles({ data: files, isFetching: false });\n\n    axios\n      .put(\"http://localhost:3001/removeTextFileQuestion\", {\n        fileID: file.key,\n        questionID: question._id,\n        questionFormat: questionFormat,\n      })\n      .catch((error) => {\n        console.error(\"Error removing question from file.questions\", error);\n      });\n  };\n\n  const handleUpdateFileStyles = (file, newStyle) => {\n    const files = textFiles.data;\n    const index = files.indexOf(file);\n    files[index].styles.push(newStyle);\n\n    setTextFiles({ data: files, isFetching: false });\n  };\n\n  const handleRemoveFileStyle = (file, style) => {\n    const files = textFiles.data;\n    const index = files.indexOf(file);\n    files[index].styles = files[index].styles.filter((s) => s !== style);\n\n    setTextFiles({ data: files, isFetching: false });\n\n    axios\n      .put(\"http://localhost:3001/removeTextFileStyle\", {\n        fileID: file.key,\n        styleID: style._id,\n      })\n      .catch((error) => {\n        console.error(\"Error removing style from file.styles\", error);\n      });\n  };\n\n  const handleDeleteFile = (file) => {\n    let files = textFiles.data;\n    files = files.filter((f) => f !== file);\n    setTextFiles({ data: files, isFetching: false });\n\n    axios\n      .put(\"http://localhost:3001/deleteTextFile\", {\n        fileID: file.key,\n      })\n      .catch((error) => {\n        console.error(\"Error deleting file\", error);\n      });\n  };\n\n  const handleDeleteTemplate = (template) => {\n    let sessionTemplates = templates.data;\n    sessionTemplates = sessionTemplates.filter((t) => t !== template);\n    setTemplates({ data: sessionTemplates, isFetching: false });\n\n    axios\n      .put(\"http://localhost:3001/deleteTemplate\", {\n        templateID: template.key,\n      })\n      .catch((error) => {\n        console.error(\"Error deleting template\", error);\n      });\n  };\n\n  const fileUsedInTemplate = (fileID) => {\n    if (!templates.isFetching) {\n      const usedAsSpeed =\n        templates.data.find((template) =>\n          template.speedTest.texts.some((text) => text.fileID === fileID)\n        ) !== undefined;\n\n      const usedAsScroll = fileUsedAsScrollText(fileID);\n      return usedAsSpeed || usedAsScroll;\n    }\n    return false;\n  };\n\n  const fileUsedAsScrollText = (fileID) => {\n    if (!templates.isFetching) {\n      return (\n        templates.data.find((template) =>\n          template.scrollTexts.some((text) => text.fileID === fileID)\n        ) !== undefined\n      );\n    }\n    return false;\n  };\n\n  const handleFileUpload = (file) => {\n    axios\n      .get(\"http://localhost:3001/getTextFile\", {\n        params: { _id: file.key },\n      })\n      .then((response) => {\n        const newFile = file;\n        newFile.styles[0]._id = response.data.styles[0]._id;\n        setTextFiles({\n          data: [...textFiles.data, newFile],\n          isFetching: false,\n        });\n      })\n      .catch((error) => {\n        console.error(\"Error fetching text in ScrollText:\", error);\n      });\n  };\n\n  const displayTextFiles = () => {\n    const curUrl = window.location.href;\n\n    // Do not render text files if the researcher is looking at the data page,\n    // or if the files are still being fetched from the database.\n    if (curUrl.substr(curUrl.length - 5) !== \"/data\" && !textFiles.isFetching) {\n      return (\n        <div>\n          <Header as=\"h1\" textAlign=\"center\" content=\"Uploaded Texts\" />\n\n          <Segment style={{ overflow: \"auto\", maxHeight: \"75vh\" }}>\n            <div className=\"ui link divided relaxed items\">\n              {textFiles.data.map((file) => (\n                <TextFile\n                  key={file.key}\n                  file={file}\n                  usedInTemplate={fileUsedInTemplate(file.key)}\n                  usedAsScrollText={fileUsedAsScrollText(file.key)}\n                  updateFileQuestions={(newQuestion, questionFormat) =>\n                    handleUpdateFileQuestions(file, newQuestion, questionFormat)\n                  }\n                  removeQuestion={(question) =>\n                    handleRemoveFileQuestion(file, question)\n                  }\n                  updateFileStyles={(style) =>\n                    handleUpdateFileStyles(file, style)\n                  }\n                  removeStyle={(style) => handleRemoveFileStyle(file, style)}\n                  deleteFile={() => handleDeleteFile(file)}\n                />\n              ))}\n            </div>\n          </Segment>\n\n          <FileUpload uploadSubmitted={handleFileUpload} />\n        </div>\n      );\n    }\n  };\n\n  const displaySessionTemplates = () => {\n    const curUrl = window.location.href;\n\n    // Do not render session templates if the researcher is looking at the data page,\n    // or if the session templates are still being fetched from the database.\n    if (curUrl.substr(curUrl.length - 5) !== \"/data\" && !templates.isFetching) {\n      return (\n        <div>\n          <Header as=\"h1\" textAlign=\"center\" content=\"Existing Templates\" />\n\n          <Segment style={{ overflow: \"auto\", maxHeight: \"75vh\" }}>\n            <div className=\"ui link divided relaxed items\">\n              {templates.data.map((template) => (\n                <SessionTemplate\n                  key={template.key}\n                  template={template}\n                  textFiles={textFiles.data}\n                  deleteTemplate={() => handleDeleteTemplate(template)}\n                />\n              ))}\n            </div>\n          </Segment>\n\n          <Button\n            style={{ position: \"absolute\", right: 10 }}\n            positive\n            content=\"Create Template\"\n            onClick={handleCreateTemplate}\n          />\n          <CreateTemplate\n            isOpen={openTemplateCreator}\n            close={closeTemplateCreator}\n            textFiles={textFiles.data}\n          />\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div className=\"researcher\">\n      <Container>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width={8}>{displayTextFiles()}</Grid.Column>\n            <Grid.Column width={8}>{displaySessionTemplates()}</Grid.Column>\n          </Grid.Row>\n          <Grid.Row>\n            <Button\n              positive\n              content=\"Download data\"\n              onClick={() => setOpenDownloadDataModal(true)}\n            />\n            <DownloadDataForm\n              isOpen={openDownloadDataModal}\n              templates={templates.data}\n              textFiles={textFiles.data}\n              close={() => setOpenDownloadDataModal(false)}\n            />\n          </Grid.Row>\n        </Grid>\n      </Container>\n    </div>\n  );\n};\n\nexport default ResearcherView;\n","// https://scotch.io/courses/10-react-challenges-beginner/use-context-to-pass-data\n\nimport { createContext, useEffect, useState } from \"react\";\n\nexport const SessionContext = createContext();\n\nexport const SessionProvider = ({ children }) => {\n  const [template, setTemplate] = useState(\n    JSON.parse(localStorage.getItem(\"sessionTemplate\"))\n  );\n  const [isPaused, setIsPaused] = useState(\n    JSON.parse(localStorage.getItem(\"isPaused\"))\n  );\n  const [hasStartedReading, setHasStartedReading] = useState(\n    JSON.parse(localStorage.getItem(\"hasStartedReading\"))\n  );\n  const [fileNumber, setFileNumber] = useState(\n    JSON.parse(localStorage.getItem(\"fileNumber\"))\n  );\n  const [scrollPosEntries, setScrollPosEntries] = useState(\n    JSON.parse(localStorage.getItem(\"scrollPosEntries\"))\n  );\n  const [questionFormat, setQuestionFormat] = useState(\n    localStorage.getItem(\"questionFormat\")\n  );\n  const [questionAnswers, setQuestionAnswers] = useState(\n    JSON.parse(localStorage.getItem(\"questionAnswers\"))\n  );\n\n  // This sessionID enables the session to be accessed from db for updates.\n  const [sessionID, setSessionID] = useState(localStorage.getItem(\"sessionID\"));\n\n  // If this is the first time the page has been loaded, set the initial value\n  // of all hooks to default values. This will then cause the other effects to run\n  // and initialise them in localStorage.\n  useEffect(() => {\n    if (JSON.parse(localStorage.getItem(\"isPaused\")) === null) {\n      initialiseVariables();\n    }\n  }, []);\n\n  const initialiseVariables = () => {\n    setTemplate(null);\n    setIsPaused(false);\n    setHasStartedReading(false);\n    setFileNumber(0);\n    setScrollPosEntries([]);\n    setQuestionFormat(\"\");\n    setQuestionAnswers([]);\n    setSessionID(\"\");\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"sessionTemplate\", JSON.stringify(template));\n  }, [template]);\n\n  useEffect(() => {\n    localStorage.setItem(\"isPaused\", JSON.stringify(isPaused));\n  }, [isPaused]);\n\n  useEffect(() => {\n    localStorage.setItem(\n      \"hasStartedReading\",\n      JSON.stringify(hasStartedReading)\n    );\n  }, [hasStartedReading]);\n\n  useEffect(() => {\n    localStorage.setItem(\"fileNumber\", JSON.stringify(fileNumber));\n  }, [fileNumber]);\n\n  useEffect(() => {\n    localStorage.setItem(\"scrollPosEntries\", JSON.stringify(scrollPosEntries));\n  }, [scrollPosEntries]);\n\n  useEffect(() => {\n    localStorage.setItem(\"questionFormat\", questionFormat);\n  }, [questionFormat]);\n\n  useEffect(() => {\n    localStorage.setItem(\"questionAnswers\", JSON.stringify(questionAnswers));\n  }, [questionAnswers]);\n\n  useEffect(() => {\n    localStorage.setItem(\"sessionID\", sessionID);\n  }, [sessionID]);\n\n  return (\n    <SessionContext.Provider\n      value={{\n        template,\n        setTemplate,\n        isPaused,\n        setIsPaused,\n        hasStartedReading,\n        setHasStartedReading,\n        fileNumber,\n        setFileNumber,\n        scrollPosEntries,\n        setScrollPosEntries,\n        questionFormat,\n        setQuestionFormat,\n        questionAnswers,\n        setQuestionAnswers,\n        sessionID,\n        setSessionID,\n        initialiseVariables,\n      }}\n    >\n      {children}\n    </SessionContext.Provider>\n  );\n};\n","import { Header, Segment } from \"semantic-ui-react\";\n\nconst PageError = () => {\n  return (\n    <div>\n      <Header as=\"h1\" content=\"404 Error!\" />\n      <Segment>\n        <p style={{ color: \"red\" }}>The url for this page is invalid.</p>\n      </Segment>\n    </div>\n  );\n};\n\nexport default PageError;\n","import { Container, Segment, Input, Button } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { createRef, useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { SessionContext } from \"../../contexts/SessionContext\";\nimport PageError from \"../PageError\";\n\nconst Home = () => {\n  const [userName, setUserName] = useState(\"\");\n  const [template, setTemplate] = useState(null);\n  const [templateError, setTemplateError] = useState(false);\n  const [displayUserNameError, setDisplayUserNameError] = useState(false);\n  const sessionContext = useContext(SessionContext);\n  const speedTestRef = createRef();\n  const scrollTestRef = createRef();\n  const endPageRef = createRef();\n\n  useEffect(() => {\n    fetchSessionTemplate();\n  }, []);\n\n  const fetchSessionTemplate = () => {\n    // Get sessionTemplateID from the url.\n    const url = window.location.href.toString();\n    const templateID = url.substr(url.lastIndexOf(\"/\") + 1);\n\n    // Get template from the database\n    axios\n      .get(\"http://localhost:3001/getSessionTemplate\", {\n        params: { _id: templateID },\n      })\n      .then((response) => {\n        if (response.data.name === \"CastError\") {\n          setTemplateError(true);\n        } else {\n          setTemplate(response.data);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error fetching SessionTemplate:\", error);\n      });\n  };\n\n  // Add new session to database.\n  const createSession = async () => {\n    let sessionCreated = false;\n    const date = new Date();\n    const viewportWidth = window.innerWidth;\n    const viewportHeight = window.innerHeight;\n\n    const newReadingSession = {\n      userName: userName.trim(),\n      viewportDimensions: [\n        {\n          width: viewportWidth,\n          height: viewportHeight,\n          time: date,\n        },\n      ],\n      templateID: template._id,\n      startTime: date,\n    };\n\n    await axios\n      .post(\"http://localhost:3001/createReadingSession\", newReadingSession)\n      .then((response) => {\n        sessionContext.setSessionID(response.data._id);\n        sessionCreated = true;\n      })\n      .catch((error) => {\n        console.error(\"Error adding session:\", error);\n      });\n\n    return sessionCreated;\n  };\n\n  const handleStartTask1 = () => {\n    if (userName.trim() === \"\") {\n      setDisplayUserNameError(true);\n      return;\n    }\n\n    const sessionCreated = createSession();\n\n    if (sessionCreated) {\n      sessionContext.setTemplate(template);\n      speedTestRef.current.click();\n    }\n  };\n\n  const handleResumeSession = () => {\n    axios\n      .get(\"http://localhost:3001/getReadingSession\", {\n        params: { _id: sessionContext.sessionID },\n      })\n      .then((response) => {\n        const currentSession = response.data;\n        if (\n          currentSession.scrollTexts.length === template.scrollTexts.length &&\n          currentSession.scrollTexts.at(-1).hasOwnProperty(\"endTime\")\n        ) {\n          endPageRef.current.click();\n        } else if (currentSession.scrollTexts.length > 0) {\n          scrollTestRef.current.click();\n        } else {\n          speedTestRef.current.click();\n        }\n      });\n  };\n\n  const handleUserNameChange = (event) => {\n    setDisplayUserNameError(false);\n    setUserName(event.target.value);\n  };\n\n  const userNameError = () => {\n    if (displayUserNameError) {\n      return (\n        <label style={{ padding: 10, float: \"right\", color: \"red\" }}>\n          Please enter a username!\n        </label>\n      );\n    }\n  };\n\n  const displayContent = () => {\n    if (templateError) {\n      return <PageError />;\n    } else {\n      if (sessionContext.sessionID === \"\") {\n        return (\n          <div style={{ textAlign: \"center\" }}>\n            <Container text>\n              <h1>Welcome!</h1>\n              <Segment>\n                Please type your name below, and click on the button to begin\n                the session!\n              </Segment>\n              <div className=\"wrapper\" style={{ justifyContent: \"center\" }}>\n                <Input\n                  type=\"text\"\n                  placeholder=\"Type your name here...\"\n                  onChange={handleUserNameChange}\n                />\n                <Button\n                  primary\n                  content=\"Start Task 1\"\n                  onClick={handleStartTask1}\n                />\n\n                {userNameError()}\n              </div>\n            </Container>\n          </div>\n        );\n      } else {\n        return (\n          <div style={{ textAlign: \"center\" }}>\n            <Container text>\n              <Segment>\n                You are currently in an active session, Click the button to\n                resume!\n              </Segment>\n              <Button\n                primary\n                content=\"Resume Session\"\n                onClick={handleResumeSession}\n              />\n            </Container>\n          </div>\n        );\n      }\n    }\n  };\n\n  return (\n    <div>\n      <div>{displayContent()}</div>\n      <Link to=\"/speedtest\" hidden ref={speedTestRef}></Link>\n      <Link to=\"/scrolltest\" hidden ref={scrollTestRef}></Link>\n      <Link to=\"/end\" hidden ref={endPageRef}></Link>\n    </div>\n  );\n};\n\nexport default Home;\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Container } from \"semantic-ui-react\";\n\nconst SpeedText = ({ fileID, textStyleID }) => {\n  const [text, setText] = useState(\"\");\n  const [textStyle, setTextStyle] = useState(null);\n\n  useEffect(() => {\n    fetchText();\n  }, [fileID]);\n\n  const fetchText = () => {\n    axios\n      .get(\"http://localhost:3001/getTextFile\", {\n        params: { _id: fileID },\n      })\n      .then((response) => {\n        setText(response.data.text);\n\n        const style = response.data.styles.find((s) => s._id === textStyleID);\n        setTextStyle({\n          fontFamily: style.fontFamily,\n          fontSize: `${style.fontSize}px`,\n          lineHeight: `${style.lineHeight}px`,\n        });\n      })\n      .catch((error) => {\n        console.error(\"Error fetching text in SpeedText:\", error);\n      });\n  };\n\n  return (\n    <Container text style={textStyle}>\n      {text}\n    </Container>\n  );\n};\n\nexport default SpeedText;\n","import { Button, Modal } from \"semantic-ui-react\";\nimport { SessionContext } from \"../../../contexts/SessionContext\";\nimport axios from \"axios\";\nimport { useContext } from \"react\";\n\nconst SpeedTestInstructions = ({ isOpen, instructions, fileID }) => {\n  const sessionContext = useContext(SessionContext);\n\n  const handleStartTest = () => {\n    const sessionID = sessionContext.sessionID;\n    const startTime = new Date();\n\n    axios\n      .put(\"http://localhost:3001/addNewSpeedText\", {\n        id: sessionID,\n        fileID: fileID,\n        startTime: startTime,\n      })\n      .then(() => {\n        // Set sessionContext to be in progress, this will close modal.\n        sessionContext.setHasStartedReading(true);\n      })\n      .catch((error) => {\n        console.error(\n          \"Error updating readingSession.speedTest.startTime:\",\n          error\n        );\n      });\n  };\n\n  return (\n    <Modal size=\"tiny\" open={isOpen} style={{ overflow: \"auto\", padding: 10 }}>\n      <Modal.Description as=\"h4\" content={instructions} />\n      <Button\n        floated=\"right\"\n        primary\n        content=\"Begin\"\n        onClick={handleStartTest}\n      />\n    </Modal>\n  );\n};\n\nexport default SpeedTestInstructions;\n","import { Button, Modal } from \"semantic-ui-react\";\n\nconst PauseWindow = ({ isOpen, resume }) => {\n  return (\n    <Modal\n      size=\"tiny\"\n      open={isOpen}\n      style={{ textAlign: \"center\", padding: 10 }}\n    >\n      <Modal.Header as=\"h4\">Click to resume reading.</Modal.Header>\n      <Button primary content=\"Reume\" onClick={resume} />\n    </Modal>\n  );\n};\n\nexport default PauseWindow;\n","import { SessionContext } from \"../../../contexts/SessionContext.jsx\";\nimport SpeedText from \"./SpeedText.jsx\";\nimport { useContext, createRef, useState, useEffect } from \"react\";\nimport { Button, Menu } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport SpeedTestInstructions from \"./SpeedTestInstructions.jsx\";\nimport PauseWindow from \"../PauseWindow.jsx\";\nimport axios from \"axios\";\nimport { isLastText, scrollToTop } from \"../../../utilities.js\";\nimport { debounce } from \"debounce\";\nimport { recordViewportResize } from \"../../../utilities\";\n\nconst SpeedTest = () => {\n  const sessionContext = useContext(SessionContext);\n  const startTask2Ref = createRef();\n  const [instructions, setInstructions] = useState(\"\");\n  const [currentText, setCurrentText] = useState(\n    sessionContext.template.speedTest.texts[sessionContext.fileNumber]\n  );\n  const [textIsComplete, setTextIsComplete] = useState(false);\n\n  useEffect(() => {\n    setInstructions(sessionContext.template.speedTest.instructions);\n    initialiseTextIsComplete();\n    window.onresize = debounce(\n      (e) => recordViewportResize(e, sessionContext),\n      500\n    );\n  }, []);\n\n  useEffect(() => {\n    setCurrentText(\n      sessionContext.template.speedTest.texts[sessionContext.fileNumber]\n    );\n  }, [sessionContext.fileNumber]);\n\n  const initialiseTextIsComplete = () => {\n    axios\n      .get(\"http://localhost:3001/getReadingSession\", {\n        params: { _id: sessionContext.sessionID },\n      })\n      .then((response) => {\n        const currentSession = response.data;\n\n        // Set to true if this text contains an endTime, false otherwise.\n        if (currentSession.hasOwnProperty(\"speedTexts\")) {\n          const text = currentSession.speedTexts.find(\n            (t) => t.fileID === currentText.fileID\n          );\n          if (typeof text !== \"undefined\") {\n            setTextIsComplete(text.hasOwnProperty(\"endTime\"));\n          }\n        }\n      });\n  };\n\n  const startNextText = (fileID) => {\n    const sessionID = sessionContext.sessionID;\n    const startTime = new Date();\n\n    axios\n      .put(\"http://localhost:3001/addNewSpeedText\", {\n        id: sessionID,\n        fileID: fileID,\n        startTime: startTime,\n      })\n      .catch((error) => {\n        console.error(\n          \"Error adding new text to readingSession.speedTexts:\",\n          error\n        );\n      });\n  };\n\n  const finishCurrentText = async () => {\n    let sessionUpdated = false;\n    const sessionID = sessionContext.sessionID;\n    const endTime = new Date();\n\n    // Update session with the time the current file was finished.\n    axios\n      .put(\"http://localhost:3001/updateCurrentSpeedText\", {\n        id: sessionID,\n        fileID: currentText.fileID,\n        endTime: endTime,\n      })\n      .then(() => {\n        sessionUpdated = true;\n      })\n      .catch((error) => {\n        console.error(\n          \"Error updating readingSession.speedTexts[currentFileID].endTime:\",\n          error\n        );\n      });\n\n    return sessionUpdated;\n  };\n\n  const handleFinishText = async () => {\n    // Update session.speedTexts[currentFileID] with an end time.\n    const sessionUpdated = finishCurrentText();\n\n    const fileNumber = sessionContext.fileNumber;\n\n    if (sessionUpdated) {\n      if (isLastText(\"speed\", sessionContext)) {\n        sessionContext.setFileNumber(0);\n        sessionContext.setHasStartedReading(false);\n        startTask2Ref.current.click();\n      } else {\n        // Add a new entry to session.speedTexts.\n        startNextText(\n          sessionContext.template.speedTest.texts[fileNumber + 1].fileID\n        );\n        sessionContext.setFileNumber(fileNumber + 1);\n        scrollToTop();\n      }\n    }\n  };\n\n  // Add either a pause or resume action with a timestamp to the session's pauses array.\n  const updateSpeedTextPauses = async (isPaused) => {\n    const sessionID = sessionContext.sessionID;\n    const currentTime = new Date();\n    const action = isPaused ? \"pause\" : \"resume\";\n\n    // Update session with the time the current file was finished.\n    axios\n      .put(\"http://localhost:3001/updateCurrentSpeedTextPauses\", {\n        id: sessionID,\n        fileID: currentText.fileID,\n        action: action,\n        time: currentTime,\n      })\n      .catch((error) => {\n        console.error(\n          \"Error updating readingSession.speedTexts[fileID].pauses\",\n          error\n        );\n      });\n  };\n\n  const pauseSession = () => {\n    updateSpeedTextPauses(true);\n    sessionContext.setIsPaused(true);\n  };\n\n  const resumeSession = () => {\n    updateSpeedTextPauses(false);\n    sessionContext.setIsPaused(false);\n  };\n\n  const displayButtons = () => {\n    return (\n      <div\n        style={{\n          top: 0,\n          left: 0,\n          width: \"15vw\",\n          position: \"fixed\",\n        }}\n      >\n        <Menu vertical fluid style={{ textAlign: \"center\" }}>\n          <Menu.Item>\n            <Button\n              primary\n              fluid\n              disabled={textIsComplete}\n              content=\"Done\"\n              onClick={handleFinishText}\n            />\n          </Menu.Item>\n          <Link to=\"/scrolltest\" hidden ref={startTask2Ref}></Link>\n          <Menu.Item>\n            <Button\n              negative\n              fluid\n              disabled={textIsComplete}\n              content=\"Pause\"\n              onClick={() => pauseSession(sessionContext)}\n            />\n          </Menu.Item>\n        </Menu>\n      </div>\n    );\n  };\n\n  const displaySpeedText = () => {\n    if (sessionContext.hasStartedReading) {\n      return (\n        <SpeedText\n          fileID={currentText.fileID}\n          textStyleID={currentText.styleID}\n        />\n      );\n    }\n  };\n\n  return (\n    <div>\n      {displayButtons()}\n      {displaySpeedText()}\n\n      <SpeedTestInstructions\n        isOpen={sessionContext.hasStartedReading === false}\n        instructions={instructions}\n        fileID={currentText.fileID}\n      />\n      <PauseWindow isOpen={sessionContext.isPaused} resume={resumeSession} />\n    </div>\n  );\n};\n\nexport default SpeedTest;\n","import { Container } from \"semantic-ui-react\";\n\nconst DisplaySessionCompleted = () => {\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <Container text>\n        <h1>Session has been completed!</h1>\n      </Container>\n    </div>\n  );\n};\n\nexport default DisplaySessionCompleted;\n","import { SessionContext } from \"../../../contexts/SessionContext.jsx\";\nimport { useContext, useEffect, useState } from \"react\";\nimport SpeedTest from \"./SpeedTest.jsx\";\nimport DisplaySessionCompleted from \"../DisplaySessionCompleted.jsx\";\n\nconst SpeedTestWrapper = () => {\n  const sessionContext = useContext(SessionContext);\n  const [sessionIsComplete, setSessionIsComplete] = useState(null);\n\n  useEffect(() => {\n    setSessionIsComplete(\n      sessionContext.sessionID === null || sessionContext.sessionID === \"\"\n    );\n  }, [sessionContext.sessionID]);\n\n  const displayPage = () => {\n    if (sessionIsComplete === true) {\n      return <DisplaySessionCompleted />;\n    } else if (sessionIsComplete === false) {\n      return <SpeedTest />;\n    } else {\n      return <div></div>;\n    }\n  };\n\n  return displayPage();\n};\n\nexport default SpeedTestWrapper;\n","import { useContext, useEffect, useState } from \"react\";\nimport { Segment, Container, Header } from \"semantic-ui-react\";\nimport { SessionContext } from \"../../contexts/SessionContext\";\n\nconst EndPage = () => {\n  const sessionContext = useContext(SessionContext);\n  const [variablesCleared, setVariablesCleared] = useState(false);\n\n  useEffect(() => {\n    if (!variablesCleared) {\n      clearSessionVariables();\n      sessionContext.initialiseVariables(true);\n      setVariablesCleared(true);\n    }\n  }, [sessionContext]);\n\n  const clearSessionVariables = () => {\n    localStorage.removeItem(\"userName\");\n    localStorage.removeItem(\"scrollQuestionNumber\");\n  };\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <Segment>\n        <Container text>\n          <Header as=\"h1\" content=\"Thank you for taking the test!\" />\n        </Container>\n      </Segment>\n    </div>\n  );\n};\n\nexport default EndPage;\n","// dev.to/n8tb1t/tracking-scroll-position-with-react-hooks-3bbj\n\nimport { useLayoutEffect } from \"react\";\n\nconst isBrowser = typeof window !== \"undefined\";\n\nexport const getScrollPosition = () => {\n  return !isBrowser ? { x: 0, y: 0 } : { x: window.scrollX, y: window.scrollY };\n};\n\nconst useScrollPosition = (effect, wait) => {\n  let throttleTimeout = null;\n\n  const callBack = () => {\n    const currPos = getScrollPosition();\n    effect(currPos);\n    throttleTimeout = null;\n  };\n\n  useLayoutEffect(() => {\n    const handleScroll = () => {\n      if (wait) {\n        if (throttleTimeout === null) {\n          setTimeout(callBack, wait);\n        }\n      } else {\n        callBack();\n      }\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => window.removeEventListener(\"scroll\", handleScroll);\n  });\n};\n\nexport default useScrollPosition;\n","import { v4 as uuid_v4 } from \"uuid\";\nimport useScrollPosition from \"./scrollPosition.jsx\";\nimport { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { SessionContext } from \"../../../contexts/SessionContext.jsx\";\nimport {\n  addScrollPosEntryToSessionContext,\n  wordSeparators,\n} from \"../../../utilities.js\";\nimport { Container } from \"semantic-ui-react\";\n\nconst ScrollText = ({\n  fileID,\n  textStyleID,\n  selectAnswerEnabled,\n  selectAnswer,\n}) => {\n  const sessionContext = useContext(SessionContext);\n  const [words, setWords] = useState([]);\n  const [textStyle, setTextStyle] = useState(null);\n\n  useEffect(() => {\n    fetchText();\n  }, [fileID]);\n\n  const fetchText = () => {\n    axios\n      .get(\"http://localhost:3001/getTextFile\", {\n        params: { _id: fileID },\n      })\n      .then((response) => {\n        setWords(response.data.text.split(wordSeparators));\n\n        const style = response.data.styles.find((s) => s._id === textStyleID);\n        setTextStyle({\n          fontFamily: style.fontFamily,\n          fontSize: `${style.fontSize}px`,\n          lineHeight: `${style.lineHeight}px`,\n        });\n\n        sessionContext.setQuestionFormat(response.data.questionFormat);\n        sessionContext.setQuestionAnswers(\n          response.data.questions.map((q) => {\n            return q.answerRegion;\n          })\n        );\n      })\n      .catch((error) => {\n        console.error(\"Error fetching text in ScrollText:\", error);\n      });\n  };\n\n  // This useEffect runs whenever sessionContext.scrollPosEntries changes.\n  // It also runs once the user has finished scrolling.\n  useEffect(() => {\n    const intervalID = setInterval(() => {\n      const entriesToInsert = sessionContext.scrollPosEntries;\n      if (entriesToInsert.length > 0) {\n        sessionContext.setScrollPosEntries([]);\n        axios\n          .post(\"http://localhost:3001/insertScrollPosEntries\", entriesToInsert)\n          .catch((error) => {\n            console.error(\"Error adding scrollPosEntry:\", error);\n          });\n      }\n    }, 500);\n    return () => clearInterval(intervalID);\n  }, [sessionContext.scrollPosEntries]);\n\n  const addScrollPosEntry = (currPos) => {\n    if (sessionContext.isPaused === false) {\n      addScrollPosEntryToSessionContext(sessionContext, parseInt(currPos.y));\n    }\n  };\n\n  // This is a useLayoutEffect function triggered whenever a scroll event occurs.\n  useScrollPosition(addScrollPosEntry, 25);\n\n  const handleWordClick = (index) => {\n    if (selectAnswerEnabled) {\n      selectAnswer(index, false);\n    }\n  };\n\n  return (\n    <Container\n      text\n      className={selectAnswerEnabled ? \"hand-cursor\" : \"\"}\n      style={textStyle}\n    >\n      {words.map((word, index) => (\n        <span key={uuid_v4()} onClick={() => handleWordClick(index)}>\n          {word + \" \"}\n        </span>\n      ))}\n    </Container>\n  );\n};\n\nexport default ScrollText;\n","import { Button, Modal } from \"semantic-ui-react\";\nimport { SessionContext } from \"../../../contexts/SessionContext\";\nimport axios from \"axios\";\nimport { useContext, useState } from \"react\";\n\nconst ScrollTestInstructions = ({ isOpen, text, close }) => {\n  const sessionContext = useContext(SessionContext);\n  const [familiarity, setFamiliarity] = useState(\"Very Unfamiliar\");\n  const [interest, setInterest] = useState(\"Very Uninterested\");\n\n  const handleStartTest = () => {\n    const sessionID = sessionContext.sessionID;\n    const startTime = new Date();\n\n    const textObj = {\n      id: sessionID,\n      fileID: text.fileID,\n      startTime: startTime,\n    };\n\n    if (JSON.parse(text.instructions.hasFamiliarityQuestion) === true) {\n      textObj.familiarity = familiarity;\n    }\n\n    if (JSON.parse(text.instructions.hasInterestQuestion) === true) {\n      textObj.interest = interest;\n    }\n\n    axios\n      .put(\"http://localhost:3001/addNewScrollText\", textObj)\n      .then(() => {\n        // Set sessionContext to be in progress, this will close modal.\n        clearData();\n        close();\n      })\n      .catch((error) => {\n        console.error(\n          \"Error updating readingSession.scrollTexts[text.fileID].startTime:\",\n          error\n        );\n      });\n  };\n\n  const clearData = () => {\n    setFamiliarity(\"Very Unfamiliar\");\n    setInterest(\"Very Uninterested\");\n  };\n\n  const displayFamiliarityQuestion = () => {\n    if (JSON.parse(text.instructions.hasFamiliarityQuestion) === true) {\n      return (\n        <div className=\"ui form\" style={{ textAlign: \"center\" }}>\n          <label>How familiar are you with this topic?</label>\n          <div className=\"inline fields\">\n            <div className=\"field\">\n              <div className=\"ui radio checkbox\">\n                <input\n                  type=\"radio\"\n                  checked={familiarity === \"Very Unfamiliar\"}\n                  onChange={(e) => setFamiliarity(\"Very Unfamiliar\")}\n                />\n                <label>Very Unfamiliar</label>\n              </div>\n            </div>\n            <div className=\"field\">\n              <div className=\"ui radio checkbox\">\n                <input\n                  type=\"radio\"\n                  checked={familiarity === \"Unfamiliar\"}\n                  onChange={(e) => setFamiliarity(\"Unfamiliar\")}\n                />\n                <label>Unfamiliar</label>\n              </div>\n            </div>\n            <div className=\"field\">\n              <div className=\"ui radio checkbox\">\n                <input\n                  type=\"radio\"\n                  checked={familiarity === \"Neutral\"}\n                  onChange={(e) => setFamiliarity(\"Neutral\")}\n                />\n                <label>Neutral</label>\n              </div>\n            </div>\n            <div className=\"field\">\n              <div className=\"ui radio checkbox\">\n                <input\n                  type=\"radio\"\n                  checked={familiarity === \"Familiar\"}\n                  onChange={(e) => setFamiliarity(\"Familiar\")}\n                />\n                <label>Familiar</label>\n              </div>\n            </div>\n            <div className=\"field\">\n              <div className=\"ui radio checkbox\">\n                <input\n                  type=\"radio\"\n                  checked={familiarity === \"Very Familiar\"}\n                  onChange={(e) => setFamiliarity(\"Very Familiar\")}\n                />\n                <label>Very Familiar</label>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  const displayInterestQuestion = () => {\n    if (JSON.parse(text.instructions.hasInterestQuestion) === true) {\n      return (\n        <div className=\"ui form\">\n          <label>How interested are you with this topic?</label>\n          <div className=\"inline fields\">\n            <div className=\"field\">\n              <div className=\"ui radio checkbox\">\n                <input\n                  type=\"radio\"\n                  checked={interest === \"Very Uninterested\"}\n                  onChange={(e) => setInterest(\"Very Uninterested\")}\n                />\n                <label>Very Uninterested</label>\n              </div>\n            </div>\n            <div className=\"field\">\n              <div className=\"ui radio checkbox\">\n                <input\n                  type=\"radio\"\n                  checked={interest === \"Uninterested\"}\n                  onChange={(e) => setInterest(\"Uninterested\")}\n                />\n                <label>Uninterested</label>\n              </div>\n            </div>\n            <div className=\"field\">\n              <div className=\"ui radio checkbox\">\n                <input\n                  type=\"radio\"\n                  checked={interest === \"Neutral\"}\n                  onChange={(e) => setInterest(\"Neutral\")}\n                />\n                <label>Neutral</label>\n              </div>\n            </div>\n            <div className=\"field\">\n              <div className=\"ui radio checkbox\">\n                <input\n                  type=\"radio\"\n                  checked={interest === \"Interested\"}\n                  onChange={(e) => setInterest(\"Interested\")}\n                />\n                <label>Interested</label>\n              </div>\n            </div>\n            <div className=\"field\">\n              <div className=\"ui radio checkbox\">\n                <input\n                  type=\"radio\"\n                  checked={interest === \"Very Interested\"}\n                  onChange={(e) => setInterest(\"Very Interested\")}\n                />\n                <label>Very Interested</label>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <Modal\n      size=\"tiny\"\n      open={isOpen}\n      style={{ textAlign: \"center\", overflow: \"auto\", padding: 10 }}\n    >\n      <Modal.Description as=\"h4\" content={text.instructions.main} />\n      {displayFamiliarityQuestion()}\n      {displayInterestQuestion()}\n      <Button\n        floated=\"right\"\n        primary\n        content=\"Begin\"\n        onClick={handleStartTest}\n      />\n    </Modal>\n  );\n};\n\nexport default ScrollTestInstructions;\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Card, Button, Form, Grid, TextArea } from \"semantic-ui-react\";\n\nconst ComprehensionQuestion = ({\n  currentText,\n  questionNumber,\n  disable,\n  submitAnswer,\n  skip,\n}) => {\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n\n  useEffect(() => {\n    const fileID = currentText.fileID;\n    const questionID = currentText.questionIDs[questionNumber];\n\n    axios\n      .get(\"http://localhost:3001/getTextFile\", {\n        params: { _id: fileID },\n      })\n      .then((response) => {\n        const questionObj = response.data.questions.find(\n          (q) => q._id === questionID\n        );\n        if (typeof questionObj !== \"undefined\") {\n          setQuestion(questionObj.question);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error fetching text in ScrollText:\", error);\n      });\n  }, [currentText, questionNumber]);\n\n  const handleChangeAnswer = (event) => {\n    setAnswer(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    submitAnswer(answer, false);\n    setAnswer(\"\");\n  };\n\n  const handleSkip = () => {\n    skip();\n    setAnswer(\"\");\n  };\n\n  return (\n    <Card fluid>\n      <Card.Content>\n        <Card.Header content=\"Question:\" />\n        <Card.Description content={question} />\n        <Form style={{ marginTop: 10, marginBottom: 10 }}>\n          <Form.Field>\n            <TextArea\n              placeholder=\"Type your answer here...\"\n              value={answer}\n              onChange={handleChangeAnswer}\n            />\n          </Form.Field>\n        </Form>\n        <Grid>\n          <Grid.Column width=\"8\">\n            <Button\n              fluid\n              primary\n              disabled={disable || answer === \"\"}\n              content=\"Submit\"\n              onClick={handleSubmit}\n            />\n          </Grid.Column>\n          <Grid.Column width=\"8\">\n            <Button\n              fluid\n              negative\n              disabled={disable}\n              content=\"Skip\"\n              onClick={handleSkip}\n            />\n          </Grid.Column>\n        </Grid>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default ComprehensionQuestion;\n","import { useState, useEffect } from \"react\";\nimport { Card, Button, Grid, Message, Transition } from \"semantic-ui-react\";\nimport axios from \"axios\";\n\nconst ClickQuestion = ({\n  currentText,\n  questionNumber,\n  disable,\n  answerIsEnabled,\n  enableAnswer,\n  skip,\n}) => {\n  const [question, setQuestion] = useState(\"\");\n\n  useEffect(() => {\n    const fileID = currentText.fileID;\n    const questionID = currentText.questionIDs[questionNumber];\n\n    axios\n      .get(\"http://localhost:3001/getTextFile\", {\n        params: { _id: fileID },\n      })\n      .then((response) => {\n        const questionObj = response.data.questions.find(\n          (q) => q._id === questionID\n        );\n        if (typeof questionObj !== \"undefined\") {\n          setQuestion(questionObj.question);\n        }\n      })\n      .catch((error) => {\n        console.error(\"Error fetching text in ScrollText:\", error);\n      });\n  }, [currentText, questionNumber]);\n\n  return (\n    <Card fluid>\n      <Card.Content>\n        <Card.Header content=\"Question:\" />\n        <Card.Description style={{ marginBottom: 10 }} content={question} />\n        <Grid>\n          <Grid.Column width=\"8\">\n            <Button\n              fluid\n              basic={!answerIsEnabled}\n              positive\n              disabled={disable}\n              content=\"Answer\"\n              onClick={enableAnswer}\n            />\n          </Grid.Column>\n          <Grid.Column width=\"8\">\n            <Button\n              fluid\n              negative\n              disabled={disable}\n              content=\"Skip\"\n              onClick={skip}\n            />\n          </Grid.Column>\n        </Grid>\n        <Transition visible={answerIsEnabled} animation=\"glow\" duration={2000}>\n          <Message\n            info\n            hidden={!answerIsEnabled}\n            content=\"Click in the text where you think the answer is!\"\n          />\n        </Transition>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default ClickQuestion;\n","import { Modal, Button } from \"semantic-ui-react\";\n\nconst ConfirmSkipQuestionWindow = ({ isOpen, skip, cancel }) => {\n  return (\n    <Modal\n      size=\"tiny\"\n      open={isOpen}\n      style={{ textAlign: \"center\", padding: 10 }}\n    >\n      <Modal.Header as=\"h4\">\n        Are you sure you want to skip this question?\n        <br />\n        You will not be able to come back to it later.\n      </Modal.Header>\n      <Button primary content=\"Yes\" onClick={skip} />\n      <Button content=\"No\" onClick={cancel} />\n    </Modal>\n  );\n};\n\nexport default ConfirmSkipQuestionWindow;\n","import { Modal, Button } from \"semantic-ui-react\";\n\nconst ConfirmDoneWindow = ({ isOpen, close }) => {\n  return (\n    <Modal\n      size=\"tiny\"\n      open={isOpen}\n      style={{ textAlign: \"center\", padding: 10 }}\n    >\n      <Modal.Header as=\"h4\">\n        You have not answered all the questions for this text.\n        <br />\n        Please answer each of the remaining questions, or click \"Skip\"\n      </Modal.Header>\n\n      <Button primary content=\"Ok\" onClick={close} />\n    </Modal>\n  );\n};\n\nexport default ConfirmDoneWindow;\n","import { Modal, Button } from \"semantic-ui-react\";\n\nconst AnswerResponseWindow = ({\n  isOpen,\n  isCorrect,\n  tryAgain,\n  continueReading,\n}) => {\n  const message = isCorrect ? \"Correct Answer!\" : \"Your answer is incorrect\";\n  const displayButtons = () => {\n    if (isCorrect) {\n      return <Button floated=\"right\" content=\"Ok\" onClick={continueReading} />;\n    } else {\n      return (\n        <div>\n          <Button\n            floated=\"right\"\n            primary\n            content=\"Try Again\"\n            onClick={tryAgain}\n          />\n          <Button\n            floated=\"right\"\n            content=\"Continue Reading\"\n            onClick={continueReading}\n          />\n        </div>\n      );\n    }\n  };\n\n  return (\n    <Modal\n      size=\"tiny\"\n      open={isOpen}\n      style={{ textAlign: \"center\", padding: 10 }}\n    >\n      <Modal.Header as=\"h4\">{message}</Modal.Header>\n\n      {displayButtons()}\n    </Modal>\n  );\n};\n\nexport default AnswerResponseWindow;\n","import { SessionContext } from \"../../../contexts/SessionContext.jsx\";\nimport ScrollText from \"./ScrollText.jsx\";\nimport { useContext, useState, useEffect, createRef } from \"react\";\nimport { Menu, Button } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport ScrollTestInstructions from \"./ScrollTestInstructions.jsx\";\nimport PauseWindow from \"../PauseWindow.jsx\";\nimport axios from \"axios\";\nimport {\n  addScrollPosEntryToSessionContext,\n  isLastText,\n  scrollToTop,\n} from \"../../../utilities.js\";\nimport { getScrollPosition } from \"./scrollPosition.jsx\";\nimport ComprehensionQuestion from \"./ComprehensionQuestion.jsx\";\nimport ClickQuestion from \"./ClickQuestion.jsx\";\nimport ConfirmSkipQuestionWindow from \"./ConfirmSkipQuestionWindow.jsx\";\nimport ConfirmDoneWindow from \"../ConfirmDoneWindow.jsx\";\nimport AnswerResponseWindow from \"./AnswerResponseWindow.jsx\";\nimport { debounce } from \"debounce\";\nimport { recordViewportResize } from \"../../../utilities\";\n\nconst ScrollTest = () => {\n  const sessionContext = useContext(SessionContext);\n  const endPageRef = createRef();\n  const [currentText, setCurrentText] = useState(\n    sessionContext.template.scrollTexts[sessionContext.fileNumber]\n  );\n  const [scrollQuestionNumber, setScrollQuestionNumber] = useState(\n    JSON.parse(localStorage.getItem(\"scrollQuestionNumber\"))\n  );\n  const [selectAnswerEnabled, setSelectAnswerEnabled] = useState(false);\n  const [answerResponseWindow, setAnswerResponseWindow] = useState({\n    display: false,\n    isCorrect: false,\n  });\n  const [displayConfirmSkipMessage, setDisplayConfirmSkipMessage] =\n    useState(false);\n  const [displayConfirmDoneMessage, setDisplayConfirmDoneMessage] =\n    useState(false);\n  const [textIsComplete, setTextIsComplete] = useState(false);\n\n  useEffect(() => {\n    if (localStorage.getItem(\"scrollQuestionNumber\") === null) {\n      setScrollQuestionNumber(0);\n    }\n    initialiseTextIsComplete();\n    window.onresize = debounce(\n      (e) => recordViewportResize(e, sessionContext),\n      500\n    );\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\n      \"scrollQuestionNumber\",\n      JSON.stringify(scrollQuestionNumber)\n    );\n  }, [scrollQuestionNumber]);\n\n  useEffect(() => {\n    setCurrentText(\n      sessionContext.template.scrollTexts[sessionContext.fileNumber]\n    );\n  }, [sessionContext.fileNumber]);\n\n  const initialiseTextIsComplete = () => {\n    axios\n      .get(\"http://localhost:3001/getReadingSession\", {\n        params: { _id: sessionContext.sessionID },\n      })\n      .then((response) => {\n        const currentSession = response.data;\n\n        // Set to true if this text contains an endTime, false otherwise.\n        if (currentSession.hasOwnProperty(\"scrollTexts\")) {\n          const text = currentSession.scrollTexts.find(\n            (t) => t.fileID === currentText.fileID\n          );\n          if (typeof text !== \"undefined\") {\n            setTextIsComplete(text.hasOwnProperty(\"endTime\"));\n          }\n        }\n      });\n  };\n\n  const finishCurrentText = async () => {\n    const sessionID = sessionContext.sessionID;\n    const endTime = new Date();\n\n    // Update session with the time the current file was finished.\n    axios\n      .put(\"http://localhost:3001/updateCurrentScrollText\", {\n        id: sessionID,\n        fileID: currentText.fileID,\n        endTime: endTime,\n      })\n      .catch((error) => {\n        console.error(\n          \"Error updating readingSession.scrollTexts[currentText.fileID].endTime:\",\n          error\n        );\n      });\n\n    return endTime;\n  };\n\n  const finishReadingSession = async (endTime) => {\n    const sessionID = sessionContext.sessionID;\n\n    // Update session with an endTime.\n    axios\n      .put(\"http://localhost:3001/addEndTime\", {\n        id: sessionID,\n        time: endTime,\n      })\n      .catch((error) => {\n        console.error(\"Error updating readingSession.endTime:\", error);\n      });\n  };\n\n  const handleFinishText = async () => {\n    if (scrollQuestionNumber < currentText.questionIDs.length) {\n      setDisplayConfirmDoneMessage(true);\n    } else {\n      // Update session.scrollTexts[currentText.fileID] with an end time.\n      const endTime = await finishCurrentText();\n\n      const fileNumber = sessionContext.fileNumber;\n\n      // if (sessionUpdated) {\n      if (isLastText(\"scroll\", sessionContext)) {\n        await finishReadingSession(endTime);\n        endPageRef.current.click();\n      } else {\n        // Adjust hooks and context for the next scrollText.\n        setScrollQuestionNumber(0);\n        sessionContext.setFileNumber(fileNumber + 1);\n        scrollToTop();\n        sessionContext.setHasStartedReading(false);\n      }\n      // }\n    }\n  };\n\n  // Add either a pause or resume action with a timestamp to the session's pauses array.\n  const updateScrollTextPauses = async (isPaused) => {\n    const sessionID = sessionContext.sessionID;\n    const currentTime = new Date();\n    const action = isPaused ? \"pause\" : \"resume\";\n\n    // Update session with the time the current file was finished.\n    axios\n      .put(\"http://localhost:3001/updateCurrentScrollTextPauses\", {\n        id: sessionID,\n        fileID: currentText.fileID,\n        action: action,\n        time: currentTime,\n      })\n      .catch((error) => {\n        console.error(\n          \"Error updating readingSession.scrollTexts[fileID].pauses\",\n          error\n        );\n      });\n  };\n\n  const pauseSession = () => {\n    updateScrollTextPauses(true);\n    sessionContext.setIsPaused(true);\n  };\n\n  const resumeSession = () => {\n    updateScrollTextPauses(false);\n    sessionContext.setIsPaused(false);\n  };\n\n  const handleAnswerQuestion = (answer, skip) => {\n    const isInlineQuestion = sessionContext.questionFormat === \"inline\";\n    const sessionID = sessionContext.sessionID;\n    const currentTime = new Date();\n    const yPos = parseInt(getScrollPosition().y);\n\n    axios\n      .put(\"http://localhost:3001/addCurrentScrollTextQuestionAnswer\", {\n        sessionID: sessionID,\n        fileID: currentText.fileID,\n        answer: answer,\n        skip: skip,\n        yPos: yPos,\n        time: currentTime,\n      })\n      .then(() => {\n        if (isInlineQuestion) {\n          let isCorrect = false;\n          if (\n            sessionContext.questionAnswers[scrollQuestionNumber].startIndex <=\n              answer &&\n            answer <=\n              sessionContext.questionAnswers[scrollQuestionNumber].endIndex\n          ) {\n            setScrollQuestionNumber(scrollQuestionNumber + 1);\n            isCorrect = true;\n          }\n\n          if (skip) {\n            setScrollQuestionNumber(scrollQuestionNumber + 1);\n          } else {\n            setAnswerResponseWindow({ display: true, isCorrect: isCorrect });\n          }\n        } else {\n          setScrollQuestionNumber(scrollQuestionNumber + 1);\n        }\n      })\n      .catch((error) => {\n        console.error(\n          \"Error updating readingSession.scrollTexts[fileID].questionAnswers\",\n          error\n        );\n      });\n  };\n\n  const skipQuestion = () => {\n    handleAnswerQuestion(\"\", true);\n    setSelectAnswerEnabled(false);\n    setDisplayConfirmSkipMessage(false);\n  };\n\n  const handleCloseScrollTestInstructions = () => {\n    sessionContext.setHasStartedReading(true);\n    addScrollPosEntryToSessionContext(\n      sessionContext,\n      parseInt(getScrollPosition().y)\n    );\n  };\n\n  const displayButtons = () => {\n    return (\n      <div\n        style={{\n          top: 0,\n          left: 0,\n          width: \"15vw\",\n          position: \"fixed\",\n        }}\n      >\n        <Menu vertical fluid style={{ textAlign: \"center\" }}>\n          <Menu.Item>\n            <Button\n              primary\n              fluid\n              disabled={textIsComplete}\n              content=\"Done\"\n              onClick={handleFinishText}\n            />\n          </Menu.Item>\n          <Link to=\"/end\" hidden ref={endPageRef}></Link>\n          <Menu.Item>\n            <Button\n              negative\n              fluid\n              disabled={textIsComplete}\n              content=\"Pause\"\n              onClick={() => pauseSession(sessionContext)}\n            />\n          </Menu.Item>\n        </Menu>\n      </div>\n    );\n  };\n\n  const displayScrollText = () => {\n    if (sessionContext.hasStartedReading) {\n      return (\n        <ScrollText\n          fileID={currentText.fileID}\n          textStyleID={currentText.styleID}\n          selectAnswerEnabled={selectAnswerEnabled}\n          selectAnswer={handleAnswerQuestion}\n        />\n      );\n    }\n  };\n\n  const displayQuestions = () => {\n    if (scrollQuestionNumber < currentText.questionIDs.length) {\n      return (\n        <div\n          style={{\n            top: \"0px\",\n            right: \"0px\",\n            width: \"15vw\",\n            position: \"fixed\",\n          }}\n        >\n          {sessionContext.questionFormat === \"comprehension\" ? (\n            <ComprehensionQuestion\n              currentText={currentText}\n              questionNumber={scrollQuestionNumber}\n              disable={textIsComplete}\n              submitAnswer={handleAnswerQuestion}\n              skip={() => setDisplayConfirmSkipMessage(true)}\n            />\n          ) : (\n            <ClickQuestion\n              currentText={currentText}\n              questionNumber={scrollQuestionNumber}\n              disable={textIsComplete}\n              answerIsEnabled={selectAnswerEnabled}\n              enableAnswer={() => setSelectAnswerEnabled(!selectAnswerEnabled)}\n              skip={() => setDisplayConfirmSkipMessage(true)}\n            />\n          )}\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div>\n      {displayButtons()}\n\n      {displayScrollText()}\n\n      {displayQuestions()}\n\n      <AnswerResponseWindow\n        isOpen={answerResponseWindow.display}\n        isCorrect={answerResponseWindow.isCorrect}\n        tryAgain={() =>\n          setAnswerResponseWindow({ display: false, isCorrect: false })\n        }\n        continueReading={() => {\n          setAnswerResponseWindow({ display: false, isCorrect: false });\n          setSelectAnswerEnabled(false);\n        }}\n      />\n\n      <ConfirmSkipQuestionWindow\n        isOpen={displayConfirmSkipMessage}\n        skip={skipQuestion}\n        cancel={() => setDisplayConfirmSkipMessage(false)}\n      />\n\n      <ConfirmDoneWindow\n        isOpen={displayConfirmDoneMessage}\n        close={() => setDisplayConfirmDoneMessage(false)}\n      />\n\n      <ScrollTestInstructions\n        isOpen={sessionContext.hasStartedReading === false}\n        text={currentText}\n        close={handleCloseScrollTestInstructions}\n      />\n      <PauseWindow isOpen={sessionContext.isPaused} resume={resumeSession} />\n    </div>\n  );\n};\n\nexport default ScrollTest;\n","import { SessionContext } from \"../../../contexts/SessionContext.jsx\";\nimport { useContext, useEffect, useState } from \"react\";\nimport ScrollTest from \"./ScrollTest.jsx\";\nimport DisplaySessionCompleted from \"../DisplaySessionCompleted.jsx\";\n\nconst ScrollTestWrapper = () => {\n  const sessionContext = useContext(SessionContext);\n  const [sessionIsComplete, setSessionIsComplete] = useState(null);\n\n  useEffect(() => {\n    setSessionIsComplete(\n      sessionContext.sessionID === null || sessionContext.sessionID === \"\"\n    );\n  }, [sessionContext.sessionID]);\n\n  const displayPage = () => {\n    if (sessionIsComplete === true) {\n      return <DisplaySessionCompleted />;\n    } else if (sessionIsComplete === false) {\n      return <ScrollTest />;\n    } else {\n      return <div></div>;\n    }\n  };\n\n  return displayPage();\n};\n\nexport default ScrollTestWrapper;\n","import { Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport ResearcherView from \"./components/researcher/ResearcherView.jsx\";\nimport Home from \"./components/user/Home.jsx\";\nimport { SessionProvider } from \"./contexts/SessionContext.jsx\";\nimport SpeedTestWrapper from \"./components/user/speed/SpeedTestWrapper.jsx\";\nimport EndPage from \"./components/user/EndPage.jsx\";\nimport ScrollTestWrapper from \"./components/user/scroll/ScrollTestWrapper\";\n\nconst App = () => {\n  return (\n    <div>\n      <Route path={`/researcher`} component={ResearcherView} />\n      <SessionProvider>\n        <Route path={`/user`} component={Home} />\n        <Route path={`/speedtest`} component={SpeedTestWrapper} />\n        <Route path={`/scrolltest`} component={ScrollTestWrapper} />\n        <Route path={`/end`} component={EndPage} />\n      </SessionProvider>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}